[
    "char *line = linenoise(\"prompt: \");",
    "int rv = fgetc( stdin );\nif ( rv == EOF ) {\n   // Handle error or EOF.\n} else {\n   char ch = rv;\n   // Do something with byte read.\n}",
    "char ch;\nint rv = fread( stdin, &ch, 1 );\nif ( rv == 0 ) {\n   // Handle error or EOF.\n} else {\n   // Do something with byte read.\n}",
    "int a[]={};",
    "int a[]={};",
    "typedef struct\n{\n   size_t size;\n   double data[0];\n}double_vector;\n\n\n....\n\ndouble_vector *alloc(size_t size)\n{\n    double_vector *vect = malloc(sizeof(*vect) + size * sizeof(vect -> data[0]));\n    if(vect) vect -> size = size;\n    return vect;\n}",
    "void loop() { // run over and over\n  if (mySerial.available()) {\n  Serial.write(mySerial.readString());\n  }\n  else if (Serial.available()) {\n  mySerial.write(Serial.readString());\n  }\n}",
    "void loop() {\n  delay(1000); // Adding a delay may help stabilize communication\n  \n  mySerial.write(\"AT\\r\"); // Send AT command with carriage return\n\n  // Print the number of available bytes every second\n  Serial.println(mySerial.available());\n}",
    "bash                    | bash\n \\                      |  \\\n  cat (SIGQUIT:SIG_DFL) |   a.out (SIGQUIT:SIG_IGN)\n                        |    \\\n                        |     cat (SIGQUIT:SIG_DFL)\n------------------------+--------------------------\nHere bash notices cat's | Here bash is unaware of\nabnormal termination    | any grandchildren at all",
    "const HasArray* collection[] = {\n    &(HasArray){.num_elements = 2, .elements = {51, 17}},\n    &(HasArray){.num_elements = 4, .elements = {1, 42, 88, 73}}\n};",
    "HasArray x = {.num_elements = 2, .elements = {51, 17}};\nHasArray y = {.num_elements = 4, .elements = {1, 42, 88, 73}};\nconst HasArray* collection[] = {&x, &y};",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n\ntypedef struct {\n    uint16_t num_elements;\n    uint8_t elements[];\n} HasArray;\n\nint main() {\n    HasArray *x = malloc(sizeof(HasArray) + 2 * sizeof(uint8_t));\n    if (x == NULL) {\n        perror(\"Failed to allocate memory\");\n        return EXIT_FAILURE;\n    }\n    x->num_elements = 2;\n    x->elements[0] = 51;\n    x->elements[1] = 17;\n\n    HasArray *y = malloc(sizeof(HasArray) + 4 * sizeof(uint8_t));\n    if (y == NULL) {\n        perror(\"Failed to allocate memory\");\n        free(x);\n        return EXIT_FAILURE;\n    }\n    y->num_elements = 4;\n    y->elements[0] = 1;\n    y->elements[1] = 42;\n    y->elements[2] = 88;\n    y->elements[3] = 73;\n\n    const HasArray* collection[] = {x, y};\n\n    printf(\"%d\\n\", collection[0]->elements[0]);\n    printf(\"%d\\n\", collection[0]->elements[1]);\n\n    free(x);\n    free(y);\n    return 0;\n}",
    "$ gcc main.c\n$ ./a.out\n51\n17",
    "int WINAPI MessageBoxA(\n  [in, optional] HWND   hWnd,\n  [in, optional] LPCSTR lpText,\n  [in, optional] LPCSTR lpCaption,\n  [in]           UINT   uType\n);",
    "DWORD WINAPI ThreadProc(\n  _In_ LPVOID lpParameter\n);",
    "int MessageBoxA(\n  [in, optional] HWND   hWnd,\n  [in, optional] LPCSTR lpText,\n  [in, optional] LPCSTR lpCaption,\n  [in]           UINT   uType\n);",
    "HANDLE CreateRemoteThread(\n  [in]  HANDLE                 hProcess,\n  [in]  LPSECURITY_ATTRIBUTES  lpThreadAttributes,\n  [in]  SIZE_T                 dwStackSize,\n  [in]  LPTHREAD_START_ROUTINE lpStartAddress,\n  [in]  LPVOID                 lpParameter,\n  [in]  DWORD                  dwCreationFlags,\n  [out] LPDWORD                lpThreadId\n);",
    "struct Tuple {\n    unsigned char a : 4;\n    unsigned char b : 4;\n};",
    "int a;\n_Generic(1, default: a) = 42;",
    "#define VAL(x) _Generic(X, int: X, int*: *X)\nint a;\nVAL(a) = 42;",
    "#define VAL(X) VAL_((X))\n#define VAL_(X) _Generic(X \\\n    ,int : X \\\n    ,int*: *_Generic(X, int*: X, default: (int*)0) \\\n  )",
    "Can you think of any workaround?",
    "#include <stdint.h>\n\n#define VAL(X) (*(int *) \\\n    (_Generic((X), int: 1, int *: 0) \\\n        ? (intptr_t) &(X) \\\n        : (intptr_t)  (X)))\n\nint main(void) {\n    int y;\n    int *yp = &y;\n\n    VAL(y) = 1;\n    VAL(yp) = 2;\n}",
    "x/wx &e",
    "x/4bx &e",
    "typedef union combi\n{\n    uint32_t num;\n    struct L1_valid_entry bit;\n} combi;\n\nint main()\n{\n  combi c;\n  c.num = 2;\n  c.bit.zero = 1;\n  printf(\"%08x\\n\",c.num);\n  return 0;\n}",
    "tree_t *tree_plant( void *data, size_t data_size ) {\n   // ...\n\n   tree_t *sapling = NULL;\n   void *tree_data = NULL;\n\n   sapling = malloc( sizeof( tree_t ) );\n   if ( !sapling )\n      goto ERROR;\n\n   tree_data = malloc( data_size );\n   if ( !tree_data )\n      goto ERROR;\n\n   list_t *tree_children = list_create();\n   if ( !tree_children )\n      goto ERROR;\n\n   // ...   \n\n   return sapling;\n\nERROR:\n   free( tree_data );\n   free( sapling );\n   return NULL;\n}",
    "tree_t *tree_plant( void *data, size_t data_size ) {\n   // ...\n\n   tree_t *sapling = malloc( sizeof( tree_t ) );\n   if ( !sapling )\n      goto ERROR1;\n\n   void *tree_data = malloc( data_size );\n   if ( !tree_data )\n      goto ERROR2;\n\n   list_t *tree_children = list_create();\n   if ( !tree_children )\n      goto ERROR3;\n\n   // ...   \n\n   return sapling;\n\nERROR3:\n   free( tree_data );\nERROR2:\n   free( sapling );\nERROR1:\n   return NULL;\n}",
    "bool test( void ) {\n   bool rv = false;\n   \n   FILE *f1 = fopen( ... );\n   if ( !f1 ) {\n      // Output relevant error message here.\n      goto ERROR1;\n   }\n\n   FILE *f2 = fopen( ... );\n   if ( !f2 ) {\n      // Output relevant error message here.\n      goto ERROR2;\n   }\n\n   // Do something with file handles here.\n\n   rv = true; \n\n   fclose( f2 );\nERROR2:\n   fclose( f1 );\nERROR1:\n   return rv;\n}",
    "void test(void) \n{\n  int *a = NULL;\n  int *b = NULL;\n  int *c = NULL;\n   \n  a = malloc(sizeof *a);\n  b = malloc(sizeof *b);\n  c = malloc(sizeof *c);\n\n  if(a && b && c)\n  {\n    actual_algorithm(a, b, c);\n  }\n\n  free(a);\n  free(b);\n  free(c);\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h> \n\n\nint main(void){\n\n    char *tasks[6] = {NULL};\n    \n    // Made the size 5 to allow for `\\0`\n    tasks[0] = (char *) malloc(5 * sizeof(char));\n    tasks[1] = (char *) malloc(5 * sizeof(char));\n    tasks[2] = (char *) malloc(5 * sizeof(char));\n    tasks[3] = (char *) malloc(5 * sizeof(char));\n    tasks[4] = (char *) malloc(5 * sizeof(char));\n    tasks[5] = (char *) malloc(5 * sizeof(char));\n    \n    for (int i = 0; i < sizeof(tasks) / sizeof(tasks[0]); i++) {\n        if (!tasks[i]) {\n            perror(\"malloc result : \"); // Returns Success\n        }\n    }\n    \n    strncpy(tasks[0], \"Dish\", 5);\n    strncpy(tasks[1], \"Laun\", 5);\n    strncpy(tasks[2], \"Bath\", 5);\n    strncpy(tasks[3], \"Flor\", 5);\n    strncpy(tasks[4], \"Tras\", 5);\n    strncpy(tasks[5], \"Offi\", 5);\n    \n    for (int i = 0; i < sizeof(tasks) / sizeof(tasks[0]); i++) {\n        printf(\"%s\\n\", tasks[i]);\n    }\n    \n    for (int i = 0; i < sizeof(tasks) / sizeof(tasks[0]); i++) {\n        free(tasks[i]);\n    }\n\n}",
    "==1026== Memcheck, a memory error detector\n==1026== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==1026== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info\n==1026== Command: ./a.out\n==1026==\nDish\nLaun\nBath\nFlor\nTras\nOffi\n==1026==\n==1026== HEAP SUMMARY:\n==1026==     in use at exit: 0 bytes in 0 blocks\n==1026==   total heap usage: 7 allocs, 7 frees, 1,054 bytes allocated\n==1026==\n==1026== All heap blocks were freed -- no leaks are possible\n==1026==\n==1026== For lists of detected and suppressed errors, rerun with: -s\n==1026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
    "/*\narray type with size and data\n*/\ntypedef struct array\n{\n    size_t size;\n    float *data; // Change the type to a generic pointer to a float\n} array;\n\n/*\narray constructor\n*/\narray array_init(size_t size, float *to_arr)\n{\n\n    // Allocate the object on the stack\n    array arr = {.size = size}; \n\n     // Allocate the float array on the heap\n    arr.data = malloc(sizeof(arr.data[0]) * arr.size); \n\n    // this could be done with one call to memcpy\n    for (size_t i = 0; i < size; i++)\n    {\n        arr.data[i]=to_arr[i];\n    }   \n    \n    return arr; \n}\n\n/*\narray constructor\nfilled with a float n\n*/\narray array_like(size_t size, float n)\n{\n    // Allocate the object on the stack\n    array arr = {.size = size}; \n\n     // Allocate the float array on the heap\n    arr.data = malloc(sizeof(arr.data[0]) * arr.size); \n\n    // This could be done using memset\n    for (size_t i = 0; i < size; i++)\n    {\n        arr.data[i]=n;\n    }   \n    \n    return arr;\n}",
    "/*\nelement-wise array multiplication\n*/\narray a_mul(array *a, array *b)\n{\n    array tmp = array_init(a->size, 0.0);\n\n    for (int i = 0; i < a->size; i++)\n    {\n        tmp->data[i] = a->data[i] * b->data[i];\n    }\n    \n    return tmp;\n    \n}",
    "#include <stdio.h>\n#include <stdlib.h>\n\n/*\n * array type with size and data\n */\ntypedef struct array\n{\n    size_t size;\n    float data[];\n} array;\n\n/*\n * array constructor\n */\narray *array_init(size_t size, float *to_arr)\n{\n    array *arr = malloc (sizeof(array) + sizeof(float) * size);\n\n    if (arr == NULL){\n        fputs (\"Couldn't allocate memory\\n\", stderr);\n        return NULL;\n    }\n\n    for (size_t i = 0; i < size; i++)\n    {\n        arr->data[i]=to_arr[i];\n    }   \n    \n    arr->size = size;\n    \n    return arr;\n}\n\n/*\n * array constructor\n * filled with a float n\n */\narray *array_like(size_t size, float n)\n{\n    array *arr = malloc (sizeof(array) + sizeof(float) * size);\n\n    if (arr == NULL){\n        fputs (\"Couldn't allocate memory\\n\", stderr);\n        return NULL;\n    }\n\n    for (size_t i = 0; i < size; i++)\n    {\n        arr->data[i] = n;\n    }   \n    \n    arr->size=size;\n    \n    return arr;\n}\n\n/*\n * array destructor\n */\nvoid array_del(array *arr)\n{\n    free (arr);\n}\n\n/*\n * element-wise array multiplication\n */\narray *a_mul(array *a, array *b)\n{\n    array *tmp = array_like (a->size, 0.);\n    \n    if (tmp == NULL) {\n      perror (\"a_mul-malloc\");\n      return NULL;\n    }\n\n    for (size_t i = 0; i < a->size; i++)\n    {\n        tmp->data[i] = a->data[i] * b->data[i];\n    }\n\n    return tmp;\n}\n\nvoid prn_array (array *a)\n{\n  for (size_t i = 0; i < a->size; i++) {\n    printf (i ? \", %4.1f\" : \"[ %4.1f\", a->data[i]);\n  }\n  puts (\" ]\");\n}\n\nint main (void) {\n\n  array *a = array_init (3, (float[]){1.0,2.0,3.0});\n  array *b = array_init (3, (float[]){1.0,2.0,3.0});\n  \n  /* validate every allocation */\n  if (a == NULL || b == NULL) {\n    return 1;\n  }\n  \n  /* output initial arrays */\n  puts (\"a and b:\\n\");\n  prn_array (a);\n  prn_array (b);\n  \n  /* multiply individual results to save pointer to free */\n  array *res1   = a_mul (a,b);        /* validation omitted for brevity */\n  array *res2   = a_mul (res1, b);    /*   \"  */\n  array *result = a_mul (res2, a);    /*   \"  */\n  \n  /* output intermediate and final result */\n  puts (\"\\nres1, res2 and result:\\n\");\n  prn_array (res1);\n  prn_array (res2);\n  prn_array (result);\n  \n  /* now free the structures and data */\n  array_del (a);\n  array_del (b);\n  array_del (res1);\n  array_del (res2);\n  array_del (result);\n}",
    "int main (void) {\n\n  array *a = array_init (3, (float[]){1.0,2.0,3.0});\n  array *b = array_init (3, (float[]){1.0,2.0,3.0});\n  ...\n  /* multiply individual results to save pointer to free */\n  array *res1   = a_mul (a,b);        /* validation omitted for brevity */\n  array *res2   = a_mul (res1, b);    /*   \"  */\n  array *result = a_mul (res2, a);    /*   \"  */\n  ...",
    "$ ./array-data-struct\na and b:\n\n[  1.0,  2.0,  3.0 ]\n[  1.0,  2.0,  3.0 ]\n\nres1, res2 and result:\n\n[  1.0,  4.0,  9.0 ]\n[  1.0,  8.0, 27.0 ]\n[  1.0, 16.0, 81.0 ]",
    "$ ./array-data-struct\n==70268== Memcheck, a memory error detector\n==70268== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.\n==70268== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info\n==70268== Command: ./bin/array-data-struct\n==70268==\na and b:\n\n[  1.0,  2.0,  3.0 ]\n[  1.0,  2.0,  3.0 ]\n\nres1, res2 and result:\n\n[  1.0,  4.0,  9.0 ]\n[  1.0,  8.0, 27.0 ]\n[  1.0, 16.0, 81.0 ]\n==70268==\n==70268== HEAP SUMMARY:\n==70268==     in use at exit: 0 bytes in 0 blocks\n==70268==   total heap usage: 6 allocs, 6 frees, 1,124 bytes allocated\n==70268==\n==70268== All heap blocks were freed -- no leaks are possible\n==70268==\n==70268== For lists of detected and suppressed errors, rerun with: -s\n==70268== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
    "D:/workspace_arge/static_lib_creator/Debug/../Src/tx_initialize_low_level.S:548:",
    "#include <stdio.h>\n\nint main() {\n    float num1, num2, result;\n    char op, yn;\n\n    do {\n        // Read first number\n        printf(\"Enter the first number: \");\n        scanf(\"%f\", &num1);\n\n        // Read operator; the space before %c skips any leftover whitespace\n        printf(\"Select the operator (+, -, x, /): \");\n        scanf(\" %c\", &op);\n\n        // Read second number\n        printf(\"Enter the second number: \");\n        scanf(\"%f\", &num2);\n\n        // Perform the calculation based on the operator\n        if (op == '+') {\n            result = num1 + num2;\n        } else if (op == '-') {\n            result = num1 - num2;\n        } else if (op == 'x' || op == 'X' || op == '*') {\n            result = num1 * num2;\n        } else if (op == '/') {\n            // Check for division by zero\n            if (num2 == 0) {\n                printf(\"Error: Division by zero!\\n\");\n                // Skip the rest of this iteration and ask again.\n                continue;\n            }\n            result = num1 / num2;\n        } else {\n            printf(\"Invalid operator!\\n\");\n            // Skip this iteration if the operator is invalid.\n            continue;\n        }\n\n        // Display the result\n        printf(\"Result: %f\\n\", result);\n\n        // Ask if the user wants to continue\n        printf(\"Do you want to continue (Y/N)? \");\n        scanf(\" %c\", &yn);\n\n    } while (yn == 'Y' || yn == 'y');\n\n    return 0;\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n\ndouble scandouble ( ) {\n    char nl[2] = \"\";\n    int scanned = 1;\n    double value = 0.0;\n\n    do {\n        if ( ! scanned) {\n            printf ( \"try again\\n\");\n        }\n        scanned = scanf ( \"%lf\", &value);\n        if ( EOF == scanned) {\n            fprintf ( stderr, \"EOF\\n\");\n            exit ( 1);\n        }\n        scanf ( \"%*[^\\n]\"); // scan and discard everything not a newline\n        scanf ( \"%1[\\n]\", nl); // scan a newline\n    } while ( ! scanned);\n    return value;\n}\n\nchar scanoperator ( ) {\n    int scanned = 1;\n    char operator[2] = \"\";\n    char nl[2] = \"\";\n\n    do {\n        if ( ! scanned) {\n            printf ( \"try again\\n\");\n        }\n        scanned = scanf ( \"%1[x/+-]\", operator);\n        if ( EOF == scanned) {\n            fprintf ( stderr, \"EOF\\n\");\n            exit ( 1);\n        }\n        scanf ( \"%*[^\\n]\"); // scan and discard everything not a newline\n        scanf ( \"%1[\\n]\", nl); // scan a newline\n    } while ( ! scanned);\n    return operator[0];\n}\n\nchar scanyn ( ) {\n    int scanned = 1;\n    char yn[2] = \"\";\n    char nl[2] = \"\";\n\n    do {\n        if ( ! scanned) {\n            printf ( \"try again\\n\");\n        }\n        scanned = scanf ( \"%1[ynYN]\", yn);\n        if ( EOF == scanned) {\n            fprintf ( stderr, \"EOF\\n\");\n            exit ( 1);\n        }\n        scanf ( \"%*[^\\n]\"); // scan and discard everything not a newline\n        scanf ( \"%1[\\n]\", nl); // scan a newline\n    } while ( ! scanned);\n    return yn[0];\n}\n\nint main ( void) {\n    double num1 = 0.0;\n    double num2;\n    double result;\n    char op;\n    char yn;\n\n    while ( 1){\n        printf ( \"Enter the first number: \\n\");\n        num1 = scandouble ( );\n\n        printf ( \"Select the operator((+ , - , x , /)\\n \");\n        op = scanoperator ( );\n\n        printf ( \"Enter the second number: \\n\");\n        num2 = scandouble ( );\n\n        switch ( op) {\n            case '/':\n                result = num1 / num2;\n                break;\n            case '+':\n                result = num1 + num2;\n                break;\n            case 'x':\n                result = num1 * num2;\n                break;\n            case '-':\n                result = num1 - num2;\n                break;\n        }\n        printf ( \"Result: %lf\\n\", result);\n\n        printf ( \"Do you want to continue (Y/N) ?\");\n        yn = scanyn ( );\n\n        switch ( yn) {\n            case 'n':\n            case 'N':\n                return 0;\n            case 'y':\n            case 'Y':\n                break;\n        }\n    }\n\n    return 0;\n}",
    "dstack_t * stack = NULL;\npush( &stack, 10 );",
    "dstack_t * stack = NULL;\nstack = push( stack, 10 );",
    "#include <wordexp.h>\n\n#define WORDEXP_RESULT(X)                 \\\n/*  code          custom error message */ \\\n  X(WRDE_BADCHAR, \"Bad char is bad!\")     \\\n  X(WRDE_BADVAL,  \"Bad value is bad!\")    \\\n  // and so on...",
    "int result = wordexp(...);\nswitch(result)\n{\n  case 0: /* ok */ break;\n  WORDEXP_RESULT(WORDEXP_ERR_CASE)\n};",
    "#define WORDEXP_ERR_CASE(val, str)                 \\\n  case (val):                                      \\\n  {                                                \\\n    fprintf(stderr,                                \\\n            \"Error: wordexp failed. Code: %s. %s\", \\\n            #val, str);                            \\\n    break;                                         \\\n  }",
    "Error: wordexp failed. Code: WRDE_BADCHAR. Bad char is bad!",
    "if(result != 0)\n{\n  const char* wordexp_errmsg[] = \n  {\n    [WRDE_BADCHAR] = \"Bad char is bad!\",\n    [WRDE_BADVAL]  = \"Bad value is bad!\"\n  };\n\n  fprintf(stderr, \"Error: wordexp failed. %s\\n\", wordexp_errmsg[result]);\n}",
    "Command.CommandMode = FMC_SDRAM_CMD_CLK_ENABLE; /* Set MODE bits to \"001\" */\n    Command.CommandTarget = FMC_SDRAM_CMD_TARGET_BANK1; /* configure the Target Bank bits */\n    Command.AutoRefreshNumber = 1;\n    Command.ModeRegisterDefinition = 0;\n    HAL_SDRAM_SendCommand(&hsdram2, &Command, 0xfff);",
    "/*cent_to_feet.c -- converts a user's height in centimetres to feet and inches*/\n\n#include <math.h>\n#include <stdio.h>\n\nint main(void) {\n    // feet are inches/12, take the leftover and thats the inches\n    float centimetres;\n    printf(\"What is your height in centimetres?\\n\"\n           \"Enter here:_____\\b\\b\\b\\b\\b\");  // user enters height in cm\n\n    if (scanf(\"%f\", &centimetres) != 1) { // takes user data and denotes it 'cm'\n        puts(\"Bad input, bye!\");\n        return 1;\n    }\n\n    float inches = centimetres / 2.54; // note: 2.54 instead of 3\n    int feet = floor(inches / 12);\n    float leftoverinches = inches - 12 * feet;\n    printf(\"left : %f\\n\", leftoverinches);\n    \n    if (centimetres < 180.f) {\n        printf(\n            \"Below 180 centimeters \\n\");\n    } else {\n        printf(\"Wow thats pretty tall!\\n\"\n               \"That's %d feet and %f inches\\n\", feet, leftoverinches);\n    }\n    printf(\"In any case, you're %d'%.f\\n\", feet, leftoverinches);\n}",
    "#include <stdio.h>\n#include \"esp_log.h\"\n#include \"nvs_flash.h\"\n#include \"esp_bt.h\"\n#include \"esp_bt_main.h\"\n#include \"esp_gap_ble_api.h\"\n\n#define TAG \"BLE_VISIBILITY\"\n\n// Manejador de eventos GAP\nstatic void gap_event_handler(esp_gap_ble_cb_event_t event, \nesp_ble_gap_cb_param_t *param) {\nif (event == ESP_GAP_BLE_ADV_START_COMPLETE_EVT) {\n    ESP_LOGI(TAG, \"Publicidad BLE iniciada correctamente.\");\n} else if (event == ESP_GAP_BLE_ADV_STOP_COMPLETE_EVT) {\n    ESP_LOGI(TAG, \"Publicidad BLE detenida.\");\n}\n}\n\nvoid bluetooth_init() {\nesp_err_t ret;\n\n// Inicializar NVS\nret = nvs_flash_init();\nif (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND) {\n    ESP_ERROR_CHECK(nvs_flash_erase());\n    ret = nvs_flash_init();\n}\nESP_ERROR_CHECK(ret);\n\n// Inicializar Bluetooth\nESP_ERROR_CHECK(esp_bt_controller_mem_release(ESP_BT_MODE_CLASSIC_BT)); // Liberar memoria para Bluetooth cl\u00e1sico\nesp_bt_controller_config_t bt_cfg = BT_CONTROLLER_INIT_CONFIG_DEFAULT();\nESP_ERROR_CHECK(esp_bt_controller_init(&bt_cfg));\nESP_ERROR_CHECK(esp_bt_controller_enable(ESP_BT_MODE_BLE));\n\n// Inicializar Bluedroid\nESP_ERROR_CHECK(esp_bluedroid_init());\nESP_ERROR_CHECK(esp_bluedroid_enable());\n\n// Registrar manejador de eventos GAP\nESP_ERROR_CHECK(esp_ble_gap_register_callback(gap_event_handler));\n\n// Configurar el nombre del dispositivo\nESP_ERROR_CHECK(esp_ble_gap_set_device_name(\"ANGELBLE\"));\n\n// Configurar datos de publicidad\nesp_ble_adv_data_t adv_data = {\n    .set_scan_rsp = false,\n    .include_name = true,\n    .include_txpower = true,\n    .min_interval = 0x100,\n    .max_interval = 0x200,\n    .appearance = 0x00,\n    .manufacturer_len = 0,\n    .p_manufacturer_data = NULL,\n    .service_data_len = 0,\n    .p_service_data = NULL,\n    .service_uuid_len = 0,\n    .p_service_uuid = NULL,\n    .flag = (ESP_BLE_ADV_FLAG_GEN_DISC | ESP_BLE_ADV_FLAG_BREDR_NOT_SPT),\n};\nESP_ERROR_CHECK(esp_ble_gap_config_adv_data(&adv_data));\n\n// Configurar par\u00e1metros de publicidad\nesp_ble_adv_params_t adv_params = {\n    .adv_int_min = 0x100,\n    .adv_int_max = 0x200,\n    .adv_type = ADV_TYPE_IND,\n    .own_addr_type = BLE_ADDR_TYPE_PUBLIC,\n    .channel_map = ADV_CHNL_ALL,\n    .adv_filter_policy = ADV_FILTER_ALLOW_SCAN_ANY_CON_ANY,\n};\nESP_ERROR_CHECK(esp_ble_gap_start_advertising(&adv_params));\n}\n\nvoid app_main() {\n    ESP_LOGI(TAG, \"Iniciando ejemplo de visibilidad BLE...\");\n    bluetooth_init();\n}",
    "#ifndef BMS_dev_h\n#define BMS_dev_h\n\nstruct BMS_dev{\n    // specific to each battery pack\n    char err[16];\n    //...\n    bool b_lim;\n};\n\n#endif",
    "#include \"BMS.h\"\n//...\n\nint main(){\n    //...\n    // use BMS_dev and v_cell_d() as needed...\n    //...\n}",
    "#ifndef BMS_h\n#define BMS_h\n\n#include \"BMS_dev.h\"\n\nbool v_cell_d(struct BMS_dev *pp);\n\n#endif",
    "#include \"BMS.h\"\n\nbool v_cell_d(struct BMS_dev *pp){\n    //...\n}",
    "gcc -g -l sqlite3 -o Max10 -lm main.c BMS.c",
    "setMatrixValues(pSize_matrix_1, matrix_1);",
    "int [*pSize_matrix_1][*pSize_matrix_1]",
    "int [*pSize_matrix_1]",
    "void setMatrixValues(int *firstMatrixSize, int ( *firstMatrix )[*firstMatrixSize] );",
    "void setMatrixValues(int firstMatrixSize, int ( *firstMatrix )[firstMatrixSize] );",
    "void setMatrixValues(int firstMatrixSize, int firstMatrix[][firstMatrixSize] );",
    "void matrix_init(\n        MATRIX_T *matrix, \n        CELL_T (*provider)(int row, int col, void *private_data),\n        void *private_data);",
    "void matrix_init(\n        int rows, int cols, \n        double matrix[rows][cols],\n        double (*provider)(int r, int c, void *cd),\n        void *call_data)\n{\n    for (int r = 0; r < rows; r++)\n        for (int c = 0; c < cols; c++)\n            matrix[r][c] = provider(r, c, call_data);\n}\n\ndouble provider_delta_kroneker(int r, int c, void *unused)\n{\n    return r == c ? 1.0 : 0.0;\n}\n\ndouble provider_from_FILE(int r, int c, void *the_file)\n{\n    FILE *in = the_file;\n    double val = 0.0;\n    if (fscanf(in, \"%lg\", &val) == 1)\n        return val;\n    return FLOAT_NAN; /* couldn't read, so this is a possible alternative */\n}",
    "double matrix[10][10];\n    matrix_init(10, 10, matrix, provider_delta_kroneker, NULL);\n    /* you got the identity matrix */",
    "double matrix[20][5];\n    matrix_init(20, 5, matrix, provider_from_FILE, stdin);\n    /* you got the matrix read from stdin */",
    "uint32_t sum1(const struct mystruct *s,uintptr_t n){\n    uint32_t result=0;\n    const uint8_t* u8 = (const uint8_t*)s;\n    for(uintptr_t i=0; i<n*4; i+=4)\n      result += *(uint32_t*) &u8[i];\n    return result;\n}\n\nuint32_t sum2(const struct mystruct *s,uintptr_t n){\n    uint32_t result=0;\n    const uint8_t* u8 = (const uint8_t*)s;\n    for(uintptr_t i=0; i<n*4; i+=4)\n      result += *(uint32_t*) &i[u8];\n    return result;\n}\n\nuint32_t sum3(const struct mystruct *s,uintptr_t n){\n    uint32_t result=0;\n    const uint8_t* u8 = (const uint8_t*)s;\n    for(uintptr_t i=0; i<n*4; i+=4)\n      result += *(uint32_t*) (u8+i);\n    return result;\n}",
    "#include <stdio.h>\n#include <SDL3/SDL.h>\n#include <SDL3/SDL_main.h>\n\nint main(int argc, char* argv[]){\n    if(SDL_Init(SDL_INIT_VIDEO | SDL_INIT_EVENTS) != 0){\n        printf(\"Error initing SDL: %s\\n\", SDL_GetError());\n        return 0;\n    }\n    \n    printf(\"SDL init successful\\n\");\n    SDL_Quit();\n    return 0;\n}",
    "SDL_Event event;\n    nk_input_begin(ctx);\n    while (SDL_PollEvent(&event)) {\n        nk_sdl_handle_event(&event);\n        \n        switch (event.type) {\n            case SDL_QUIT:\n                is_running = false;\n                break;\n            case SDL_KEYDOWN:\n                keyStates[event.key.keysym.scancode] = true;\n                break;\n            case SDL_KEYUP:\n                keyStates[event.key.keysym.scancode] = false;\n                break;\n            case SDL_MOUSEBUTTONDOWN:\n                if(event.button.button == SDL_BUTTON_RIGHT)mouse_button_down = true;\n                break;\n            case SDL_MOUSEBUTTONUP:\n                if(event.button.button == SDL_BUTTON_RIGHT)mouse_button_down = false;\n                break;\n            case SDL_MOUSEMOTION:\n                    if(mouse_button_down){\n                        process_mouse_move((float)event.motion.xrel,(float)event.motion.yrel,1);\n                    }\n                break;\n            case SDL_MOUSEWHEEL:\n                fov -= (float) event.wheel.y;\n                if (fov < 1.0f)\n                    fov = 1.0f;\n                if (fov > 45.0f)\n                    fov = 45.0f;\n        }\n    }\n    nk_input_end(ctx);",
    "#include <stdio.h>\n#include <termios.h>\n#include <unistd.h>\n#include <sys/ioctl.h>\n\n#define KEY_ESCAPE  0x001b\n#define KEY_ENTER   0x000a\n#define KEY_UP      0x0105\n#define KEY_DOWN    0x0106\n#define KEY_LEFT    0x0107\n#define KEY_RIGHT   0x0108\n\n#define STDIN  0\nstruct termios original, changed;\n\nvoid termset ( void) {\n    tcgetattr ( STDIN, &original);\n    changed = original;\n    changed.c_lflag &= ~( ICANON | ECHO); // echo off and read character as available\n}\n\nint kbhit ( ) {\n    int bytesWaiting;\n\n    usleep ( 1200);\n    ioctl ( STDIN, FIONREAD, &bytesWaiting);\n    return bytesWaiting;\n}\n\nint getch ( void) {\n    int c;\n\n    c = getchar ( );\n    if ( c == KEY_ESCAPE) {\n        c = getchar ( );\n        if ( c == '[') {\n            switch ( getchar ( )) {\n                case 'A':\n                    c = KEY_UP;\n                    break;\n                case 'B':\n                    c = KEY_DOWN;\n                    break;\n                case 'C':\n                    c = KEY_RIGHT;\n                    break;\n                case 'D':\n                    c = KEY_LEFT;\n                    break;\n                default:\n                    c = 0;\n                    break;\n            }\n        }\n    }\n    return c;\n}\n\nvoid clearScreen ( ) {\n    printf ( \"\\033[1;1H\");//move to top left corner\n    printf ( \"\\033[2J\");//clear screen\n    fflush ( stdout);\n}\n\nint main( void) {\n\n    termset ( );\n    tcsetattr ( STDIN, TCSANOW, &changed);\n\n    clearScreen ( );\n    printf ( \"s or Enter to exit\\n\");\n\n    while ( 1) {\n        if ( kbhit ( )) {\n            int c = getch ( );\n\n            if ( EOF == c) {\n                break;\n            }\n            switch ( c) {\n                case KEY_UP:\n                    printf ( \"KEY_UP\\n\");\n                    break;\n                case KEY_DOWN:\n                    printf ( \"KEY_DOWN\\n\");\n                    break;\n                case KEY_RIGHT:\n                    printf ( \"KEY_RIGHT\\n\");\n                    break;\n                case KEY_LEFT:\n                    printf ( \"KEY_LEFT\\n\");\n                    break;\n                default:\n                    printf ( \"%c\", c);\n                    fflush ( stdout);\n            }\n\n            if ( '\\n' == c || 's' == c) {\n                break;\n            }\n        }\n    }\n    tcsetattr ( STDIN, TCSANOW, &original);\n\n    return 0;\n}",
    "uint16_t x = 0b0000'1111'0011'1100;",
    "#include <stdint.h>\n#include <stdio.h>\n\n// creates a binary 4 digit number from 1010 or 0101 or similar    \n#define BINARY_1(a) ( \\\n    a==  0?  0u:\\\n    a==  1?  1u:\\\n    a== 10?  2u:\\\n    a== 11?  3u:\\\n    a== 100? 4u:\\\n    a== 101? 5u:\\\n    a== 110? 6u:\\\n    a== 111? 7u:\\\n    a==1000? 8u:\\\n    a==1001? 9u:\\\n    a==1010?10u:\\\n    a==1011?11u:\\\n    a==1100?12u:\\\n    a==1101?13u:\\\n    a==1110?14u:\\\n    a==1111?15u:\\\n    a==0001? 1u:\\\n    a==0010? 2u:\\\n    a==0011? 3u:\\\n    a==0100? 4u:\\\n    a==0101? 5u:\\\n    a==0110? 6u:\\\n    a==0111? 7u:\\\n    -1)\n#define BINARY_2(a,...)   ((uint_least8_t)BINARY_1(a)<<4|BINARY_1(__VA_ARGS__))\n#define BINARY_3(a,...)   ((uint_least16_t)BINARY_1(a)<<8|BINARY_2(__VA_ARGS__))\n#define BINARY_4(a,...)   ((uint_least16_t)BINARY_1(a)<<12|BINARY_3(__VA_ARGS__))\n#define BINARY_5(a,...)   ((uint_least32_t)BINARY_1(a)<<16|BINARY_4(__VA_ARGS__))\n#define BINARY_6(a,...)   ((uint_least32_t)BINARY_1(a)<<20|BINARY_5(__VA_ARGS__))\n#define BINARY_7(a,...)   ((uint_least32_t)BINARY_1(a)<<24|BINARY_6(__VA_ARGS__))\n#define BINARY_8(a,...)   ((uint_least32_t)BINARY_1(a)<<28|BINARY_7(__VA_ARGS__))\n#define BINARY_9(a,...)   ((uint_least64_t)BINARY_1(a)<<32|BINARY_8(__VA_ARGS__))\n#define BINARY_10(a,...)  ((uint_least64_t)BINARY_1(a)<<36|BINARY_9(__VA_ARGS__))\n#define BINARY_11(a,...)  ((uint_least64_t)BINARY_1(a)<<40|BINARY_10(__VA_ARGS__))\n#define BINARY_12(a,...)  ((uint_least64_t)BINARY_1(a)<<44|BINARY_11(__VA_ARGS__))\n#define BINARY_13(a,...)  ((uint_least64_t)BINARY_1(a)<<48|BINARY_12(__VA_ARGS__))\n#define BINARY_14(a,...)  ((uint_least64_t)BINARY_1(a)<<52|BINARY_13(__VA_ARGS__))\n#define BINARY_15(a,...)  ((uint_least64_t)BINARY_1(a)<<56|BINARY_14(__VA_ARGS__))\n#define BINARY_16(a,...)  ((uint_least64_t)BINARY_1(a)<<60|BINARY_15(__VA_ARGS__))\n#define BINARY_17(a,...)  ((__uint128_t)BINARY_1(a)<<64|BINARY_16(__VA_ARGS__))\n#define BINARY_18(a,...)  ((__uint128_t)BINARY_1(a)<<68|BINARY_17(__VA_ARGS__))\n#define BINARY_19(a,...)  ((__uint128_t)BINARY_1(a)<<72|BINARY_18(__VA_ARGS__))\n#define BINARY_20(a,...)  ((__uint128_t)BINARY_1(a)<<76|BINARY_19(__VA_ARGS__))\n#define BINARY_21(a,...)  ((__uint128_t)BINARY_1(a)<<80|BINARY_20(__VA_ARGS__))\n#define BINARY_22(a,...)  ((__uint128_t)BINARY_1(a)<<84|BINARY_21(__VA_ARGS__))\n#define BINARY_23(a,...)  ((__uint128_t)BINARY_1(a)<<88|BINARY_22(__VA_ARGS__))\n#define BINARY_24(a,...)  ((__uint128_t)BINARY_1(a)<<92|BINARY_23(__VA_ARGS__))\n#define BINARY_25(a,...)  ((__uint128_t)BINARY_1(a)<<96|BINARY_24(__VA_ARGS__))\n#define BINARY_26(a,...)  ((__uint128_t)BINARY_1(a)<<100|BINARY_25(__VA_ARGS__))\n#define BINARY_27(a,...)  ((__uint128_t)BINARY_1(a)<<104|BINARY_26(__VA_ARGS__))\n#define BINARY_28(a,...)  ((__uint128_t)BINARY_1(a)<<108|BINARY_27(__VA_ARGS__))\n#define BINARY_29(a,...)  ((__uint128_t)BINARY_1(a)<<112|BINARY_28(__VA_ARGS__))\n#define BINARY_30(a,...)  ((__uint128_t)BINARY_1(a)<<116|BINARY_29(__VA_ARGS__))\n#define BINARY_31(a,...)  ((__uint128_t)BINARY_1(a)<<120|BINARY_30(__VA_ARGS__))\n#define BINARY_32(a,...)  ((__uint128_t)BINARY_1(a)<<124|BINARY_31(__VA_ARGS__))\n// macro overloaded on number of argumnets, max 32\n#define BINARY_N(\\\n    _32,_31,_30,_29,_28,_27,_26,_25,_24,_23,_22,_21,_20,_19,_18,_17,_16,_15,_14,_13,_12,_11,_10,_9,_8,_7,_6,_5,_4,_3,_2,_1,\\\n    N,...)  BINARY##N\n#define BINARY(...)  BINARY_N(__VA_ARGS__,\\\n    _32,_31,_30,_29,_28,_27,_26,_25,_24,_23,_22,_21,_20,_19,_18,_17,_16,_15,_14,_13,_12,_11,_10,_9,_8,_7,_6,_5,_4,_3,_2,_1,\\\n    )(__VA_ARGS__)\n\nint main() {\n    printf(\"%B\\n\", BINARY(0000,1111,0011,1100));\n    printf(\"%B\\n\", BINARY(1100));\n    printf(\"%B\\n\", BINARY(0101,1010,100));\n    // test 128 bits with gcc extensions - __auto_type and __uint128_t\n    const __auto_type bignum = BINARY(1111,1110,1101,1100,1011,1010,1001,1000,0111,0110,0101,0100,0011,0010,0001,0000,1111,1110,1101,1100,1011,1010,1001,1000,0111,0110,0101,0100,0011,0010,0001,0000);\n    printf(\"%llB%064llB\\n\", (unsigned long long)(bignum >> 64), (unsigned long long)bignum);\n    for (int i = 128/4; i; --i) {\n        printf(\"%04B%s\", (unsigned)((bignum >> 4 * (i - 1)) & 0xf), i == 1 ? \"\\n\" : \",\");\n    }\n}",
    "111100111100\n1100\n10110100100\n11111110110111001011101010011000011101100101010000110010000100001111111011011100101110101001100001110110010101000011001000010000\n1111,1110,1101,1100,1011,1010,1001,1000,0111,0110,0101,0100,0011,0010,0001,0000,1111,1110,1101,1100,1011,1010,1001,1000,0111,0110,0101,0100,0011,0010,0001,0000",
    "#define countof(a) (sizeof(a)/sizeof(*(a)))",
    "// !!! This definition is equivalent to void initialize_array(char *buf)\nvoid initialize_array(char buf[1024]) {\n    // BUG! sizeof(buf) is sizeof(char *), much less than 1024\n    memset(buf, 0, sizeof(buf));\n}",
    "...\n    char buf[2048];\n    const size_t buf_size = sizeof(buf); // always next to the array definition\n    \n    memset(buf, 0, buf_size);\n    \n    ... = snprintf(buf, buf_size, ...);\n    \n    ...",
    "...\n    int buf[2048];\n    const size_t buf_count = sizeof(buf) / sizeof(*buf);\n    \n    memset(buf, 0, buf_count * sizeof(*buf));\n    \n    for (size_t i = 0; i < buf_count; i++) {\n        if (handle_case(i))\n            bur[i] = 1;\n    }\n    ...",
    "#define BUF_SIZE 2048  // [comment about why 2048 was picked goes here]\n\n...\nchar buf[BUF_SIZE];\n\nmemset(buf, 0, BUF_SIZE );\n\n... = snprintf(buf, BUF_SIZE, ...);",
    "movdqu  xmm0, XMMWORD PTR [rax]\n        add     rax, 16\n        pand    xmm0, xmm6\n        movdqa  xmm2, xmm0\n        movdqa  xmm1, xmm0\n        pcmpgtb xmm0, xmm5\n        paddb   xmm2, xmm4\n        paddb   xmm1, xmm3\n        pand    xmm1, xmm0\n        pandn   xmm0, xmm2\n        por     xmm0, xmm1\n        movups  XMMWORD PTR [rax-16], xmm0",
    "c:\n        test    rdi, rdi\n        je      .L1\n        add     rdi, rsi\n.L3:\n        movzx   eax, BYTE PTR [rsi]\n        add     rsi, 1\n        and     eax, 15\n        movzx   eax, BYTE PTR HEX_CHARS[rax]\n        mov     BYTE PTR [rsi-1], al\n        cmp     rdi, rsi\n        jne     .L3\n.L1:\n        ret\nHEX_CHARS:\n        .ascii  \"0123456789ABCDEF\"",
    "a() took 1.089963 sec\nb() took 2.084695 sec\nc() took 3.504775 sec\nd() took 3.938886 sec",
    "a() took 0.988197 sec\nb() took 1.905577 sec\nc() took 3.507487 sec\nd() took 3.866236 sec",
    "{\n    \"editor.semanticHighlighting.enabled\": true,\n    \"editor.semanticTokenColorCustomizations\": \n    {\n        \"rules\": \n        {\n            \"type\":\n            {\n                \"foreground\": \"#6c9ada\"\n            }\n        }\n    }\n}",
    "static gboolean is_visible_widget(GtkWidget *widget)\n{\n  // The parent will always be a GtkBox\n  GtkWidget *parent = gtk_widget_get_parent(widget);\n  GtkWidget *grandparent = gtk_widget_get_parent(parent);\n  GType type = G_OBJECT_TYPE(grandparent);\n\n  gboolean visible_parent = TRUE;\n\n  if(type == GTK_TYPE_NOTEBOOK)\n  {\n    // Find the page in which the current widget is and try to show it\n    gint page_num = gtk_notebook_page_num(GTK_NOTEBOOK(grandparent), parent);\n    if(page_num > -1)\n      gtk_notebook_set_current_page(GTK_NOTEBOOK(grandparent), page_num);\n    else\n      visible_parent = FALSE;\n  }\n  else if(type == GTK_TYPE_STACK)\n  {\n    // Stack pages are enabled based on user parameteters,\n    // so if not visible, then do nothing.\n    GtkWidget *visible_child = gtk_stack_get_visible_child(GTK_STACK(grandparent));\n    if(visible_child != parent) visible_parent = FALSE;\n  }\n\n  return gtk_widget_is_visible(widget) && gtk_widget_is_sensitive(widget) && gtk_widget_get_realized(widget) && visible_parent;\n}",
    "__declspec(dllexport)\nvoid affect_array(int *ptr, int rows, int cols, int depth) {\n    for(int i = 0; i < rows; i++) {\n        for(int j = 0; j < cols; j++) {\n            for(int k = 0; k < depth; k++) {\n                ptr[i*cols*depth + j*depth + k] *= 2;\n            }\n        }\n    }\n}",
    "import ctypes as ct\nimport numpy as np\n\narr = np.array([[[1, 2, 3, 4],\n                 [5, 6, 7, 8],\n                 [9, 10, 11, 12]],\n                [[13, 14, 15, 16],\n                 [17, 18, 19, 20],\n                 [21, 22, 23, 24]]], dtype=np.int32)\n\nlib = ct.CDLL('./test')\naffect_array = lib.affect_array\n# Require 3D numpy array of int32 as first parameter.  It will be type-checked.\naffect_array.argtypes = np.ctypeslib.ndpointer(dtype=np.int32, ndim=3), ct.c_int, ct.c_int, ct.c_int\naffect_array.restype = None\n\nprint('Original array =')\nprint(arr)\nprint()\naffect_array(arr, *arr.shape)  # * unpacks tuple as 3 additional parameters.\nprint('Array after pass to function =')\nprint(arr)",
    "Original array =\n[[[ 1  2  3  4]\n  [ 5  6  7  8]\n  [ 9 10 11 12]]\n\n [[13 14 15 16]\n  [17 18 19 20]\n  [21 22 23 24]]]\n\nArray after pass to function =\n[[[ 2  4  6  8]\n  [10 12 14 16]\n  [18 20 22 24]]\n\n [[26 28 30 32]\n  [34 36 38 40]\n  [42 44 46 48]]]",
    "void effect_array(int rows, int cols, int depth, int arr[rows][cols][depth])",
    "int x = 2;\nint y = 2;\nint z = 2;\n\nint (*ptr)[y][z] = malloc( sizeof(int[x][y][z]) );",
    "int arr[N];\nint n = arr[0];\n\n// Since arr[0] holds an int, a pointer to the first element of the array,\n// will have the type \"pointer to int\", so we can do things like:\n\nvoid foo(int* a) {....}\n         ^^^^\n\nint arr[N];    \nfoo(arr);\nint* p = arr;\n^^^^",
    "int arr[M][N];\n??? p = arr[0]; // What type shall p have ???",
    "int arr[M][N];\nint p[N] = arr[0]; // THIS IS WRONG !!!",
    "int arr[M][N];\nint* p = arr[0]; // Correct",
    "int arr[K][M][N];\n??? p = arr[0]; // What type shall p have ???",
    "int arr[K][M][N];\nint (*p)[N] = arr[0]; // Pointer to array of int with N elements",
    "int (*ptr[2])[2];  // array of pointer to array of int\nfor(int i = 0; i < 2; i++)\n{\n    ptr[i] = arr[i];\n}",
    "int (**ptr)[2] = malloc(2* sizeof *ptr);\nfor(int i = 0; i < 2; i++)\n{\n    ptr[i] = arr[i];\n}",
    "void effect_array(int (**ptr)[2], int rows, int cols, int depth)\n{\n    ...\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n\n#define ROWS 2\n#define COLS 3\n#define DEPTH 4\n\nvoid effect_array(int (**ptr)[DEPTH], int rows, int cols, int depth)\n{\n    for(int i = 0; i < rows; i++)\n    {\n        for(int j = 0; j < cols; j++)\n        {\n            for(int k = 0; k < depth; k++)\n            {\n                ptr[i][j][k] *= 2;\n            }\n        }\n    }\n}\n\n\nint main()\n{\n    int arr[ROWS][COLS][DEPTH] = {\n        {\n            {1, 2, 11, 22},\n            {3, 4, 33, 44},\n            {100, 200, 300, 400}\n        },\n        {\n            {5,6},\n            {7,8}\n        }\n    };\n    \n    int (**ptr)[DEPTH] = malloc(COLS * sizeof *ptr);\n    for(int i = 0; i < COLS; i++)\n    {\n        ptr[i] = arr[i];\n    }\n    \n    effect_array(ptr, ROWS, COLS, DEPTH);\n    \n    printf(\"Array after pass to effect_array2d:\\n\");\n    printf(\"{\");\n    for(int i = 0; i < ROWS; i++)\n    {\n        printf(\"{\");\n        for(int j = 0; j < COLS; j++)\n        {\n            printf(\"{\");\n            for(int k = 0; k < DEPTH; k++)\n            {\n                printf(\"%d, \", arr[i][j][k]);\n            }\n            printf(\"},  \");\n        }\n        printf(\"},     \");\n    }\n    printf(\"}\\n\");\n\n    free(ptr);\n\n    return 0;\n}",
    "Array after pass to effect_array2d:\n{{{2, 4, 22, 44, },  {6, 8, 66, 88, },  {200, 400, 600, 800, },  },     {{10, 12, 0, 0, },  {14, 16, 0, 0, },  {0, 0, 0, 0, },  },     }",
    "if (ch <= '9' && ch >= '0')\n        push(ch);\n    else if (ch != '=') {\n        sec_op = pull() - 48;\n        first_op = pull() - 48;",
    "if (ch <= '9' && ch >= '0')\n        push(ch - '0');\n    else if (ch != '=') {\n        sec_op = pull();\n        first_op = pull();",
    "realloc(chaine1, sizeof(char)*(taille1+taille2+1));",
    "char* new_chaine1 = realloc(chaine1, taille1+taille2+1);\nif (new_chaine1) {\n  chaine1 = new_chaine1;\n  new_chaine1 = NULL;\n} else {\n  // handle the reallocation error\n}",
    "$ make so\ncc -O2 -pipe  so.c  -o so\nso.c:30:2: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]\n   30 |         realloc(chaine1, sizeof(char)*(taille1+taille2+1));\n      |         ^~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 warning generated.",
    "chaine1 = realloc(chaine1, sizeof(char)*(taille1 + taille2 + 1));",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main()\n{   \n    char* chaine1 = (char*)malloc(10*sizeof(char));\n    char* chaine2 = (char*)malloc(10*sizeof(char));\n   \n    if(chaine1 == NULL || chaine2 == NULL)\n        return -2;\n   \n    strcpy(chaine1, \"Salut les\");\n    strcpy(chaine2, \" codeurs!\");\n   \n    printf(\"Chaine 1: %s\\n\", chaine1);\n    printf(\"Chaine 2: %s\\n\", chaine2);\n   \n    int taille1 = strlen(chaine1);\n    int taille2 = strlen(chaine2);\n   \n    char* tmp_chaine = (char*)malloc(sizeof(char)*10);\n   \n    if(tmp_chaine == NULL)\n        return -2;\n   \n    strcpy(tmp_chaine, chaine1);\n   \n    chaine1 = realloc(chaine1, sizeof(char)*(taille1+taille2+1));\n\n    if (chaine1 == NULL)\n        return -3;\n   \n    for(int i = 0; i <= taille1; i++)\n        chaine1[i] = tmp_chaine[i];\n\n    for(int i = 0; i <= taille2; i++)\n        chaine1[taille1+i] = chaine2[i];\n\n    printf(\"%s\", chaine1);\n\n    return 0;\n}",
    "typedef struct cmp\n{\n    int64_t file1LineCount;\n    char file1Lines[20][100];\n    int64_t file2LineCount;\n    char file2Lines[20][100];\n    int64_t shortest_edit_path;\n} Comparison_t;",
    "int main()\n{\n    Comparison_t * work = malloc(sizeof(Comparison_t));\n\n    work->file1LineCount = 2;\n    strcpy(work->file1Lines[0], \"C_Programs/Console/FileCompare/bin/Release\");\n    work->file2LineCount = 2;\n    strcpy(work->file2Lines[0], \"C_Programs/Console/FileCompare/bin/Test\");\n    work->shortest_edit_path = 55;\n\n    int ** test = MakeMoveSet(work);\n\n    printf(\"Address of test: %p\\n\", test);\n\n    return 0;\n}",
    "path[k] = x;\n\n            printf(\"k value: %d\\n\", k);                     /* Visual debug print statement */\n\n            fprintf(stderr, \"x = %d, y=%d\\n\", x, y);\n\n            if (x >= n && y >= m)\n            {\n                free(path); //Segfault occurs here\n                fprintf(stderr, \"Bailing\\n\");\n                comp->shortest_edit_path = d;\n                fprintf(stderr, \"Shortest edit path = %d\\n\", d);\n                return moveset;\n            }",
    "craig@Vera:~/C_Programs/Console/FileCompare/bin/Release$ ./FileCompare \nmax_tries=4, max_index=9\nd=0,k=0\nk value: 0\nx = 0, y=0\nd=1,k=-1\nk value: -1\nx = 0, y=1\nd=1,k=1\nk value: 1\nx = 1, y=0\nd=2,k=-2\nk value: -2\nx = 0, y=2\nd=2,k=0\nk value: 0\nx = 2, y=2\nfree(): invalid pointer\nAborted (core dumped)",
    "if (k >= 0 && k < max_tries)                    /* Boundary testing             */\n            path[k] = x;\n\n        printf(\"k value: %d\\n\", k);                     /* Visual debug print statement */\n\n        fprintf(stderr, \"x = %d, y=%d\\n\", x, y);\n\n        if (x >= n && y >= m)\n        {\n            free(path); //Segfault occurs here\n            fprintf(stderr, \"Bailing\\n\");\n            comp->shortest_edit_path = d;\n            fprintf(stderr, \"Shortest edit path = %d\\n\", d);\n            return moveset;\n        }",
    "craig@Vera:~/C_Programs/Console/FileCompare/bin/Release$ ./FileCompare \nmax_tries=4, max_index=9\nd=0,k=0\nk value: 0\nx = 0, y=0\nd=1,k=-1\nk value: -1\nx = 0, y=1\nd=1,k=1\nk value: 1\nx = 1, y=0\nd=2,k=-2\nk value: -2\nx = 0, y=2\nd=2,k=0\nk value: 0\nx = 2, y=2\nBailing\nShortest edit path = 2\nAddress of test: 0x563c29420280",
    "typedef long long ll;\n\nll pop(ll *hp, size_t used, ll y)\n{\n    ll w=(((y|1)<used)&&(hp[y|1]>=hp[y]))?(y|1):y;\n    return w;\n}\n\nll pop1(ll *hp, size_t used, ll y)\n{\n    ll w=y|(((y|1)<used)&&(hp[y|1]>=hp[y]));\n    return w;\n}",
    "pop:\n        mov     rax, rdx\n        or      rdx, 1\n        cmp     rdx, rsi\n        jnb     .L2\n        mov     rcx, QWORD PTR [rdi+rax*8]\n        cmp     QWORD PTR [rdi+rdx*8], rcx\n        cmovge  rax, rdx\n.L2:\n        ret\npop1:\n        mov     rax, rdx\n        or      rdx, 1\n        cmp     rdx, rsi\n        jnb     .L6\n        mov     rcx, QWORD PTR [rdi+rax*8]\n        cmp     QWORD PTR [rdi+rdx*8], rcx\n        setge   dl\n        movzx   edx, dl\n        or      rax, rdx\n.L6:\n        ret",
    "printf(\"resulted index : %d for 16 bit value %04X\\n\",idx, bk);",
    "idx = (int) sqrt( (bk*(bk ^ 1))&0xFFFF);",
    "#include <stdio.h>\n\n/*---------------------------------------------------------------\n    ConvertToBinary()\n    Returns a string binary representation of an input number.\n    Params: number to convert and the size of the data type\n     so we know how many leading zeros to pad\n*---------------------------------------------------------------*/\nchar *ConvertToBinary(unsigned long long num, size_t nsize)\n{\n    static char szRes[100];\n    long iii=0, bitpos = (long)nsize*8; \n    \n    while (bitpos-- && iii < sizeof(szRes)) \n    {\n        szRes[iii++] = (char) (((num >> bitpos) & 0x01) + '0'); \n        if(!(bitpos%8) && bitpos)\n            szRes[iii++] = ' '; /*add space every 8 digits */\n    }\n    szRes[iii] ='\\0'; /*cap it*/\n    return szRes;\n}\n\n\nint clear_bit(unsigned int x, int bitNum) \n{\n    return x &= ~(1L << bitNum); \n}\nint test_bit(int x, int bitNum) \n{ \n    return !!(x & (1L << (bitNum))); \n}\nint set_bit(int x, int bitNum) \n{   \n    return x |= (1L << bitNum); \n}\n\nint main()\n{\n    int num = 0, bitnum = 7;\n\n    printf(\"Num before operations:   \\t%s\\n\", ConvertToBinary(num, sizeof(num)));\n    num = set_bit(num, bitnum);\n    printf(\"Num after set bit #%d:   \\t%s\\n\", bitnum, ConvertToBinary(num, sizeof(num)));\n    num = clear_bit(num, bitnum) ;\n    printf(\"Num after clear bit #%d:  \\t%s\\n\", bitnum, ConvertToBinary(num, sizeof(num)));\n\n    getchar();\n    return 0;\n}",
    "Num before operations:          00000000 00000000 00000000 00000000\n    Num after set bit #7:           00000000 00000000 00000000 10000000\n    Num after clear bit #7:         00000000 00000000 00000000 00000000",
    "void receiveHTTP(int clientSockfd, char *buff, size_t __n, int __flags)\n{\n    int bytes = recv(clientSockfd, buff, __n, __flags);\n    if (bytes <= 0) return;\n\n    // prints the whole thing...\n    printf(\"%.*s\",bytes,buff);\n    // or: fwrite(buff, bytes, 1, stdout);\n    // or: write(STDOUT_FILENO, buff, bytes);\n\n    // prints everything ignoring line breaks...\n    for (int i = 0; i < bytes; ++i)\n    {\n        if (buff[i] != '\\r' && buff[i] != '\\n'){\n            printf(\"%c\", buff[i]);\n        }\n    }\n}",
    "void receiveHTTP(int clientSockfd, char *buff, size_t __n, int __flags)\n{\n    int bytes = recv(clientSockfd, buff, __n, __flags);\n    printf(\"%s\",buff);\n    for (int i = 0; i < bytes; i++)\n    {\n        if (buff[i+1] != '\\n' && buff[i] != '\\n' ){\n            printf(\"%c\", buff[i]);\n        }\n    }\n    printf(\"\\n\");\n}",
    "GET /1 HTTP/1.1\nuser-agent: got (https://github.com/sindresorhus/got)\naccept-encoding: gzip, deflate, br\ncookie: PHPSESSID=37f65v1f9dcbmq3nbvqvev6bf4\nHost: localhost:8080\nConnection: close\n\nGET /1 HTTP/1.1user-agent: got (https://github.com/sindresorhus/got)accept-encoding: gzip, deflate, brcookie: PHPSESSID=37f65v1f9dcbmq3nbvqvev6bf4Host: localhost:8080Connection: close",
    "\"C_Cpp.default.includePath\": [\n    \"path/to/any/include/directory\"\n]",
    "\"includePath\": [\n  \"${workspaceFolder}/**\",\n  \"path/to/the/include/folder/of/your/compiler\"\n],",
    "int x (void)\n{\n  static int i=0;\n  return i++;\n}\n\nprintf(\"%d, %d\\n\", x(), x());`",
    "printf(\"%g\\n\", a*b + c*d);\ny = foo(e+4, a*b);\nz = foo(c*d, f+4);",
    "int x;\n\nint a(void) { return x++; }\nint b(void) { return x; }",
    "==19372== Memcheck, a memory error detector\n==19372== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==19372== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==19372== Command: ./main\n==19372== \nHello This is a test.\n\nHello Alt This is a test.\n\nWARNING:: (main.c:20) Double free detected\n/*========= SUMMARY =========*/\n  Total allocations      1  \n  Total Free             2  \n  Total Memory allocated 50 bytes \n  Total Memory freed     50 bytes \n  Memory Leaked          0 bytes \n==19372== \n==19372== HEAP SUMMARY:\n==19372==     in use at exit: 0 bytes in 0 blocks\n==19372==   total heap usage: 2 allocs, 2 frees, 100 bytes allocated\n==19372== \n==19372== All heap blocks were freed -- no leaks are possible\n==19372== \n==19372== For lists of detected and suppressed errors, rerun with: -s\n==19372== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
    "//char firstReconstructedByte[2] = {0};\n//char secondReconstructedByte[2] = {0};\nchar firstReconstructedByte[2+1] = {0};\nchar secondReconstructedByte[2+1] = {0};",
    "char *endptr;\n    firstReconstructedByte = strtol(firstReconstructedByte, &endptr, 16);\n    if (endptr != firstReconstructedByte + 2) {\n      // Conversion did not use 2 characters.\n      TBD code to print error\n    }",
    "char* str_trim(char *s)\n{\n    char *newstr = malloc(200);\n    //...\n    return newstr;\n}",
    "char *s = str_trim(...);\n...\nfree(s);",
    "void str_trim(char *s)\n{\n    char *newstr = s;\n    while (*s != '\\0')\n    {\n        if (*s != ' ')\n        {\n            *newstr = *s;\n            ++newstr;\n            ++s;\n        }\n        else\n        {\n            *newstr = *s;\n            ++newstr;\n            ++s;\n\n            while (*s == ' ')\n            {\n                ++s;\n            }\n        }\n    }\n    *newstr = '\\0';\n}",
    "char s[] = \"...\";\nstr_trim(s);",
    "void str_trim(char *s);",
    "char newstr[200];",
    "char * str_trim(char *s);",
    "if (*s != ' ')\n    {\n        *newstrp = *s;\n        *newstrp++;\n        *s++;\n    }\n\n    else if (*s == ' ')\n    {\n        *newstrp = *s;\n        *newstrp++;\n        *s++;\n\n        while (*s == ' ')\n        {\n            s++;\n        }\n    }\n    else\n    {\n        *newstrp = *s;\n        *newstrp++;\n        *s++;\n    }",
    "#include <stdio.h>\n\nchar * str_trim( char *s )\n{\n    for ( char *p = s, *q = s; *q; )\n    {\n        if ( *++q != ' ' || *p != ' ' ) \n        {\n            if ( ++p != q )\n            {\n                *p = *q;\n            }\n        }\n    }\n    \n    return s;\n}\n\nint main(void) \n{\n    char s[] = \"A   string    with   many   adjacent    spaces.\";\n\n    puts( s );\n    \n    puts( str_trim( s ) );\n    \n    return 0;\n}",
    "A   string    with   many   adjacent    spaces.\nA string with many adjacent spaces.",
    "void str_trim( char *s )\n{\n    for ( char *p = s, *q = s; *q; )\n    {\n        if ( *++q != ' ' || *p != ' ' ) \n        {\n            if ( ++p != q )\n            {\n                *p = *q;\n            }\n        }\n    }\n}",
    "puts( s );\n    str_trim( s );\n    puts( s );",
    "puts( \"\\tHello,\\t\\t\\tWorld!\" );",
    "#include <stdio.h>\n#include <string.h>\n\nchar * str_trim( char *s )\n{\n    if ( *s == '\\t' ) *s = ' ';\n    \n    for ( char *p = s, *q = s; *q; )\n    {\n        if ( !isblank( ( unsigned char )( *++q ) ) || !isblank( ( unsigned char )*p ) ) \n        {\n            ++p;\n            \n            if ( *q == '\\t' )\n            {\n                *p = ' ';\n            }\n            else if ( p != q )\n            {\n                *p = *q;\n            }\n        }\n    }\n    \n    return s;\n}\n\n\nint main(void) \n{\n    char s[] = \"\\tHello,\\t\\t\\tWorld!\";\n\n    puts( s );\n    \n    puts( str_trim( s ) );\n    \n    return 0;\n}",
    "Hello,          World!\n Hello, World!",
    "void memset32(void* dest, uint32_t value, size_t count)\n{\n    uint32_t* dest32 = (uint32_t*)dest; \n    for (size_t i = 0; i < count; i++)\n    {\n        dest32[i] = value;\n    }\n}",
    "void pxlImageClearColor(PXLimage* image, PXLcolor color)\n{\n    uint32_t nbytes = image->width * image->height * 4;\n\n    memcpy(image->data, color.rgba, 4);\n\n    uint32_t bytes_filled = 4;\n    uint32_t next_fill;\n\n    while (bytes_filled < nbytes)\n    {\n        next_fill = bytes_filled << 1;\n\n        if (next_fill > nbytes)\n        {\n            next_fill = nbytes;\n        }\n\n        memcpy(image->data + bytes_filled, image->data, next_fill - bytes_filled);\n        bytes_filled = next_fill;\n    }\n}",
    "Each sample counts as 0.01 seconds.\n  %   cumulative   self              self     total           \n time   seconds   seconds    calls  us/call  us/call  name    \n 47.67     19.58    19.58                             _mcount_private\n 22.25     28.72     9.14 1137265408     0.01     0.01  pxlImageSetPixelColor\n 19.04     36.54     7.82                             __fentry__\n  9.30     40.36     3.82   200000    19.10   179.64  pxlRendererDrawTriangle\n  1.44     40.95     0.59   200000     2.95    57.60  pxlRendererDrawRect\n  0.17     41.02     0.07   200000     0.35     3.45  pxlRendererDrawLine\n  0.05     41.04     0.02   200000     0.10     0.10  pxlImageClearColor\n  0.05     41.06     0.02   200000     0.10     0.10  pxlWindowPresent\n  0.02     41.07     0.01                             main\n  0.00     41.07     0.00  2000000     0.00     0.00  pxlRendererSetDrawColor\n  0.00     41.07     0.00   200000     0.00     0.00  pxlGetKey\n  0.00     41.07     0.00   200000     0.00     0.10  pxlRendererClearColor\n  0.00     41.07     0.00   100000     0.00     0.00  pxlWindowPollEvents\n  0.00     41.07     0.00       10     0.00     0.00  _pxlFree\n  0.00     41.07     0.00       10     0.00     0.00  _pxlMalloc",
    "/*\n * t212 adc.c\n *\n * Created: 1/30/2025 2:43:59 PM\n * Author : erik.vincent\n */\n\n/* ATMEL ATTINY212\n   Pin 6 is /RESET\n   \n               +-\\/-+\n         Vcc  1|    |8  GND\nDAC TXD  PA6  2|    |7  PA3 SCK\n    RXD  PA7  3|    |6  PA0 UPDI RESET\nSDA MOSI PA1  4|    |5  PA2 MISO SCL\n               +----+\n\n   PA3 is the LED output pin\n   PA6 is the ADC pin AIN6\n   \n*/\n\n#define F_CPU 3333333UL // Default Setting micro to 3.33MHz\n// #define F_CPU 20000000UL // Setting micro to 20MHz\n#define ADC_SHIFT_DIV64    (6)  // ADC Sample Accumulator 0x06 is 64 samples\n\n#include <avr/io.h>\n#include <util/delay.h>\n\nvoid adc_init (void);\nuint16_t read_adc(void);\n\nvoid adc_init (void) {\n    ADC0_CTRLA = (0 << ADC_RUNSTBY_bp) | (0 << ADC_RESSEL_10BIT_gc) | (1 << ADC_ENABLE_bp); // Disabled run in standby, enabled ADC & full 10-bit resolution\n    VREF_CTRLA = (1 << VREF_ADC0REFSEL0_bp);                                                // ADC voltage reference = 1.1V (0x1)\n    ADC0_CTRLC = (1 << ADC_SAMPCAP_bp) | (0 << ADC_REFSEL_gp);                              // Set Internal reference, set reduced size of sampling capacitance, set prescaler to CLK_PER/4\n    ADC0_CTRLD = (1 << ADC_INITDLY1_bp) | (0 << ADC_ASDV_bp) | (0 << ADC_SAMPDLY0_bp);      // These bits define the delay when initializing the ADC or changing the source of the reference voltage.\n    ADC0_SAMPCTRL = (1 << ADC_SAMPLEN4_bp);                                                 // 0x10, These bits control the ADC sampling time in number of CLK_ADC cycles,\n    ADC0_CTRLB = ADC_SAMPNUM_ACC64_gc;                                                      // 64 samples\n    ADC0_MUXPOS = 6;                                                                        // Set to AIN6\n}\n\nuint16_t read_adc(void) {\n    // Read ADC\n    uint16_t adc_val = 0;\n    uint16_t adc_ave = 0;   // ADC average from accumulator\n\n    _delay_ms(1);       // give it a moment to switch\n\n    ADC0_COMMAND = (1 << ADC_STCONV_bp);            // Start conversion//Writing a '1' to this bit in single-shot mode starts one conversion.\n    while (ADC0_COMMAND & (1 << ADC_STCONV_bp));    // while conversion is on-going\n    _delay_ms(10);\n    adc_val = ((ADC0_RESH << 8) | ADC0_RESL);       // ADC conversion result to make sure ADC reading is good\n    \n    adc_val = ((ADC0_RESH << 8) | ADC0_RESL);       // Do it a second time, because the first time will be bogus\n    adc_ave = adc_val >> ADC_SHIFT_DIV64;           // Get average value from ADC sampler\n    \n    return adc_ave;\n}\nint main(void)\n{\n    adc_init();\n    uint16_t adcVal = read_adc();\n    \n    // set PA3 to output mode\n    PORTA.DIR |= (1 << 3);\n    \n    if(adcVal > 10) {\n        // PA3 LED on\n        PORTA.OUTSET = (1 << 3);\n    } else {\n        // PA3 LED off\n        PORTA.OUTCLR = (1 << 3);\n    }\n    \n    while (1) {\n        ;\n    }\n}",
    "#ifndef HEADERNAME\n#define HEADERNAME\n//function declarations\n#endif",
    "# include < h-char-sequence > new-line",
    "$ tail -n +1 *.h *.c\n==> one.h <==\n#ifndef ONE_H\n#define ONE_H\n\nextern int one(void);\n\n#endif\n\n==> three.h <==\n#ifndef THREE_H\n#define THREE_H\n\nextern int three(void);\n\n#endif\n\n==> two.h <==\n#ifndef TWO_H\n#define TWO_H\n\nextern int two(void);\n\n#endif\n\n==> main.c <==\n#include \"three.h\"\n#include \"two.h\"\n#include \"one.h\"\n#include <stdio.h>\n\nint main(void)\n{\n    printf(\"%d %d %d\\n\",one(),two(),three());\n}\n//EOF\n\n==> one.c <==\n#include \"one.h\"\n\nint one(void) { return 1; }\n\n//EOF\n\n==> three.c <==\n#include \"one.h\"\n#include \"three.h\"\n\nint three(void) { return 2 + one(); }\n\n//EOF\n\n==> two.c <==\n#include \"one.h\"\n#include \"two.h\"\n\nint two(void) { return 1 + one(); }\n\n//EOF\n\n$ gcc -o prog main.c three.c two.c one.c\n./prog\n1 2 3",
    "$ gcc -o prog main.c three.c two.c one.c",
    "# Compile & link pipeline\n$ gcc -c -o <tmp-main>.o main.c\n$ gcc -c -o <tmp-three>.o three.c\n$ gcc -c -o <tmp-two>.o two.c\n$ gcc -c -o <tmp-one>.o one.c\n$ gcc -o prog <tmp-main>.o <tmp-three>.o <tmp-two>.o <tmp-one>.o",
    "$ gcc -o prog main.c three.c two.c one.c",
    "$ gcc -c -o main.o main.c\n$ gcc -c -o three.o three.c\n$ gcc -c -o two.o two.c\n$ gcc -c -o one.o one.c\n$ gcc -o prog main.o three.o two.o one.o\n$ ./prog\n1 2 3",
    "$ gcc -c -o <tmp-two>.o two.c",
    "$ gcc -c -o <tmp-three>.o three.c",
    "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char input[100];\n    FILE *fptr;\n\n    // attempt to open file\n    fptr = fopen( \"C:\\\\Users\\\\USER\\\\Downloads\\\\text.txt\", \"w+\" );\n    if ( fptr == NULL )\n    {\n        fprintf( stderr, \"Error opening file!\\n\" );\n        exit( EXIT_FAILURE );\n    }\n\n    // write data to file\n    fprintf( fptr, \"Hello World\\n\" );\n\n    // rewind the file to the start\n    rewind( fptr );\n\n    // attempt to read back the data\n    if ( fgets( input, sizeof input, fptr ) == NULL )\n    {\n        fprintf( stderr, \"Error reading data!\\n\" );\n        exit( EXIT_FAILURE );\n    }\n\n    // print the data that was previously read\n    printf( \"%s\", input );\n\n    // cleanup\n    fclose( fptr );\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  FILE* fptr;\n\n  // Create the file and write to it\n  fptr = fopen(\"C:\\\\Users\\\\USER\\\\Downloads\\\\text.txt\", \"w\");\n  fprintf(fptr, \"Hello World\\n\");\n  fclose(fptr);  // >>>>> don't forget to close the file <<<<<\n\n  // open the file we created before, and read one line from it\n  fptr = fopen(\"C:\\\\Users\\\\USER\\\\Downloads\\\\text.txt\",\"r\");\n  char input[100];\n  fgets(input, 100, fptr);\n  fclose(fptr);\n\n  printf(\"%s\", input);\n}",
    "fopen(\"C:\\\\Users\\\\USER\\\\Downloads\\\\text.txt\",\"r\");",
    "#include <stddef.h>\n\nsize_t g();\n\nvoid f()\n{\n    volatile char arr1[g()];\n    for (size_t i = 0; i < sizeof(arr1); ++i)\n        arr1[i] = 0;\n}",
    "f:\n        push    rbp\n        xor     eax, eax\n        mov     rbp, rsp\n        call    g\n        lea     rdx, [rax+15]\n        and     rdx, -16\n        sub     rsp, rdx\n        test    rax, rax\n        je      .L1\n        mov     rcx, rsp\n        xor     edx, edx\n        test    al, 1\n        je      .L3\n        mov     BYTE PTR [rsp], 0\n        mov     edx, 1\n        cmp     rax, 1\n        je      .L1\n.L3:\n        mov     BYTE PTR [rcx+rdx], 0\n        mov     BYTE PTR [rcx+1+rdx], 0\n        add     rdx, 2\n        cmp     rax, rdx\n        jne     .L3\n.L1:\n        leave\n        ret",
    "add     rdx, 2\ncmp     rax, rdx\njne     .L3",
    "#include <stdio.h>\n\nint main()\n{\n  int arr[] = {1,5,7,10};\n    \n  for (int i = 0; i < sizeof(arr)/sizeof(arr[0]) - 1; i++)\n  {\n    arr[i] = arr[i+1];\n  }\n    \n  for (int i = 0; i < sizeof(arr)/sizeof(arr[0]) - 1; i++)\n  {\n    printf(\"Arr[%d] = %d\\n\", i, arr[i]);\n  }\n    \n  return 0;\n}",
    "#include <stdio.h>\n#include <string.h>\n\n\nstatic void Copy(char *dst, const char *src, size_t size)\n{\n    for (int i = 0; i < size; ++i)\n        dst[i] = src[i];\n}\n\n\nint main(void)\n{\n    char b0[3] = { 'A', 'B', 'C' };\n    char b1[3] = { 'A', 'B', 'C' };\n\n    memmove(b0+1, b0+0, 2);\n    printf(\"After memmove: b0[1] = %c, b0[2] = %c.\\n\", b0[1], b0[2]);\n\n    Copy(b1+1, b1+0, 2);\n    printf(\"After Copy:    b1[1] = %c, b1[2] = %c.\\n\", b1[1], b1[2]);\n}",
    "char str[] = \"Hello world\"\n\nmemmove(str, str + 6, strlen(str + 6) + 1);",
    "// Return name from given user.\ntypedef char *(name)(void *user);",
    "// Return name for a System 1 User.\nchar * system1_user_name(System1User *user)\n{\n    return user->name;\n}",
    "say_hello(&some_object, system1_user_name_wrapper)",
    "char *buf = (char *)malloc(CMD_SIZE * sizeof(char));",
    "int len = strlen(global_buf);",
    "size_t insert(char **buf, char c)\n{\n    size_t newbufsize = *buf ? strlen(*buf) + 2: 2;\n\n    char *new_buf = realloc(*buf, newbufsize * sizeof(*new_buf)); \n    if (new_buf) \n    {\n        new_buf[newbufsize - 2] = c;\n        new_buf[newbufsize - 1] = 0;\n        *buf = new_buf;\n    }\n    else newbufsize = SIZE_MAX;\n    return newbufsize;\n}\n\nint main(void)\n{\n    char *buf = NULL;\n    int c;\n\n    while((c = fgetc(stdin)) && c != EOF && c != '\\n')\n    {\n        size_t buflen = insert(&buf, c);\n        if(buf) printf(\"buf size: %zu, strlen: %zu string: '%s'\\n\", buflen, strlen(buf), buf);\n    }\n    free(buf);\n}",
    "/* Instantiate the GValue structure. */\nGValue *value = g_new0 (GValue, 1);\n/* Initialise it to a string. */\ng_value_init (value, G_TYPE_STRING);\n/* Set it to some data. */\ng_value_take_string (value, data);",
    "argv[1] = malloc(3 * sizeof(char)); argv[1] = \"in\";\n        argv[2] = malloc(3 * sizeof(char)); argv[2] = \"out\";",
    "char *inf = \"in\", *outf = \"out\";\n    if (argc == 3) {\n        inf = argv[1];\n        outf = argv[2];\n    }\n    FILE *input = fopen(inf, \"r\");\n    FILE *output = fopen(outf, \"w\");",
    "for (int i=0;i<list.size;i++)\n        free(list.array[i]);\n    free(list.array);",
    "static volatile uint32_t dmaBuffer[DMA_BUFF_SIZE] = { 0 };",
    "int my_printf(const char* format, double value)\n{\n    // do something...\n}\nmy_printf(\"%f\\n\", 5);",
    "//\n//use(d) https://www.man7.org/linux/man-pages/man3/termios.3.html as reference\n//\n\n#include <termios.h>\n#include <signal.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n\nstruct termios currentSettings;\n\nvoid resetSTDIN(struct termios *currentSettings) {\n    tcsetattr(STDIN_FILENO, TCSAFLUSH, currentSettings);  // reset to original settings\n}\n\nvoid setSTDIN(struct termios *currentSettings) {\n    struct termios updatedSettings;\n\n    tcgetattr(STDIN_FILENO, currentSettings);  // get current settings\n\n    updatedSettings = *currentSettings;        // use those as basis for new settings\n\n    updatedSettings.c_lflag &= ~ICANON;   // unset 'normal' aka canonical mode, add '|ECHO' if you don't want to see input\n    updatedSettings.c_cc[VTIME] = 0;      // VTIME Timeout in deciseconds for noncanonical read (TIME) 0 == no timeout\n    updatedSettings.c_cc[VMIN] = 1;       // VMIN  Minimum number of characters for noncanonical read (MIN).\n\n    tcsetattr(STDIN_FILENO, TCSAFLUSH, &updatedSettings);\n}\n\nvoid catchSignals(int sig) {\n    resetSTDIN(&currentSettings);\n    exit(1);\n}\n\nint main() {\n\n    setSTDIN(&currentSettings);\n\n    signal(SIGINT|SIGQUIT, catchSignals);  // trap ^C, ^\\ amend as reqd\n\n    printf(\"[q|Q|^C|^D]' to exit):\\n\");\n\n    char c;\n    const char ctrlD=4;\n    while ( read(STDIN_FILENO, &c, 1) == 1 ) {\n        if ( c == ctrlD || c == 'q' || c == 'Q' )\n        break;\n\n        //printf(\"%c\", c); // if ECHO masked and you want to see the output ...\n    }\n\n    resetSTDIN(&currentSettings);\n    return 0;\n}",
    "struct point\n    {\n        int x;\n        const int y;\n    };",
    "-o: file not found",
    "#define XP_DIR __declspec(__cdecl)",
    "unsigned rightrot(unsigned x, unsigned n) {\n  // Without C23\n  #define UINT_WIDTH (sizeof(unsigned) * CHAR_BIT)\n \n  unsigned shift_r = n % UINT_WIDTH;  // Good compiler will commonly emit a simple _and_ operation.\n  // unsigned shift_l = (-n) % UINT_WIDTH;\n  unsigned shift_l = (UINT_WIDTH - shift_r) % UINT_WIDTH;\n\n  // At this point, shift_r and shift_l are in range 0 to UINT_WIDTH-1 for all n.\n  return (x << shift_l) | (x >> shift_r);\n}",
    "#include <limits.h>\n#define INT_WIDTH ((int) (sizeof(int) * CHAR_BIT))\n\nint rightrot(int x, int n) {\n  union {\n    int i;\n    unsigned u;\n  } a = {.i = x};\n\n  n %= INT_WIDTH; // `n` now in -(INT_WIDTH-1) ... INT_WIDTH-1 range.\n  int shift_r = (n + INT_WIDTH) % INT_WIDTH; // shift in 0 ... INT_WIDTH-1 range.\n  int shift_l = (INT_WIDTH - shift_r) % INT_WIDTH;\n\n  a.u = (a.u << shift_l) | (a.u >> shift_r);\n  return a.i;\n}",
    "int rotateRight(int v, unsigned int shift) \n{\n    unsigned value = v;\n    int result;\n    value = (value >> shift) | ((value << ((sizeof(v) * CHAR_BIT) - shift)));\n    memcpy(&result, &value, sizeof(result);\n    return result;\n}\n\nint main() {\n    int x, n, rot, t_rot;\n    x = 22;\n    n = 3;\n    printf(\"Correct: \\n\");\n\n    printf(\"x: %032b, rotate tight by %d: %032b\\n\", x, sizeof(x) * CHAR_BIT - n, rotateRight(x, sizeof(x) * CHAR_BIT - n));\n\n    return 0;\n}",
    "void print_data (FUNCTION_RETURN data)\n{\n    int row_iterator = 0;\n\n    while(row_iterator < data.rows)\n    {\n        int column_iterator = 0;    /* must set column_iterator 0 each loop */\n        \n        while(column_iterator < data.columns)\n        {\n            print(data.data_structure[row_iterator][column_iterator]);\n            printf(\",\");\n            column_iterator += 1;\n        }\n        printf(\"\\n\");\n        row_iterator += 1;\n    }\n\n    printf(\"\\n\");\n}",
    "FUNCTION_RETURN load_csv (const char *fname)\n{\n  FUNCTION_RETURN rs = { .data_structure = NULL };\n  char file_buffer[MAXC] = \"\";\n  FILE *fp = fopen (fname, \"r\");\n  \n  /* validate file open */\n  if (fname == NULL) {\n    perror (\"load_csv fopen failed\");\n    return rs;\n  }\n  rs.columns = column_counter (fp);   /* retrieve column count */\n  \n  while (fgets (file_buffer, sizeof file_buffer, fp)) {\n    char *tok = NULL;                 /* pointer for token */\n    int column_iterator = 0;          /* column_iterator */\n    \n    /* allocate storage for row, always realloc to temporary pointer */\n    void *tmp = realloc (rs.data_structure, \n                         sizeof *rs.data_structure * (rs.rows + 1));\n    if (tmp == NULL) {\n      perror (\"load_csv realloc rs.data_structure\");\n      return rs;\n    }\n    rs.data_structure = tmp;        /* assign reallocated block to pointer */\n    \n    /* allocate storage for columns/validate */\n    rs.data_structure[rs.rows] = malloc (sizeof *rs.data_structure[rs.rows] * \n                                         rs.columns);\n    if (rs.data_structure[rs.rows] == NULL) {\n      perror (\"load_csv malloc rs.data_structure[rows]\");\n      return rs;\n    }\n    \n    tok = strtok (file_buffer, \",\\n\");\n    while (tok != NULL && column_iterator < rs.columns) {\n      size_t len = strlen (tok);    /* get token length */\n      /* allocate/validate storage for token */\n      rs.data_structure[rs.rows][column_iterator] = malloc (len + 1);\n      if (rs.data_structure[rs.rows][column_iterator] == NULL) {\n        perror (\"load_csv malloc rs.data_structure[rs.rows][column_iterator]\");\n        free (rs.data_structure[rs.rows]);  /* free mem for row */\n        return rs;\n      }\n      /* copy from token to row/column storage in datastruct */\n      memcpy (rs.data_structure[rs.rows][column_iterator], tok, len + 1);\n      \n      column_iterator += 1;\n      tok = strtok (NULL, \",\\n\");\n    }\n    \n    /* validate all tokens processed */\n    if (column_iterator != rs.columns) {\n      fprintf (stderr, \"error: invalid column count (%d) row %d\\n\",\n                column_iterator, rs.rows);\n      for (int i = 0; i < column_iterator; i++) {\n        free (rs.data_structure[rs.rows][i]);   /* free mem for partial cols */\n      }\n      free (rs.data_structure[rs.rows]);        /* free mem for row */\n      return rs;\n    }\n    \n    rs.rows += 1;     /* increment row count after all checks passed */\n  }\n  fclose (fp);  /* close file */\n  \n  return rs;    /* return pointer to filled struct */\n}",
    "FUNCTION_RETURN load_data_CSV_v02(const char *Filename)\n{\n    //open file\n    FILE *file_handle;\n    if((file_handle = fopen(Filename,\"r\")) == NULL)\n    {\n        printf(\"cant open file\\n\");\n        exit(1);\n    }\n\n    FUNCTION_RETURN returnable_structure;\n\n    char ***returnable; //holds the actual data in a multidimentional structure in memory\n    int row_iterator = 0;\n    int column_iterator = 0;\n    int no_of_rows = 0;\n    int ch; //charecter iterator\n    char file_buffer[200]; //will hold the text temporarily before transferring to returnable\n    int file_buffer_iterator = 0; //iterator for file_buffer\n\n    //create array of rows\n    returnable = malloc (sizeof *returnable);\n    if (returnable == NULL)\n    {\n        printf(\"error in allocating first row\\n\");\n        exit(1);\n    }\n\n    //create array of columns for the first row\n    returnable[row_iterator] = malloc (sizeof *returnable[row_iterator] * \n                                       column_counter(file_handle));\n    if(returnable[row_iterator] == NULL)\n    {\n        printf(\"error in allocating first 4 columns\\n\");\n        exit(1);\n    }\n\n    int column_counter_variable = column_counter(file_handle);\n    //since column counter function seeks to the start of the file, using the function directly\n    //in loop will cause to read the first row for all the iteration.\n\n\n\n    while((ch = fgetc(file_handle)) != EOF)\n    {\n        size_t len = 0;\n#ifdef DEBUG\n        printf(\"ch : %c\\n\",ch);\n#endif\n        if(ch == ',')\n        {\n            file_buffer[file_buffer_iterator] = 0; //null terminate the string\n            file_buffer[strcspn(file_buffer, \",\\n\")] = 0;\n            len = strlen (file_buffer);\n            \n            printf(\"word recieved :\");\n            print(file_buffer);\n            printf(\"\\n\");\n\n            printf(\"row : %d , column : %d\\n\",row_iterator,column_iterator);\n\n            returnable[row_iterator][column_iterator] = malloc (len + 1);\n            if(returnable[row_iterator][column_iterator] == NULL)\n            {\n                printf(\"error in allocating string\");\n                exit(1);\n            }\n\n            // copy_str(returnable[row_iterator][column_iterator],file_buffer,strlen(file_buffer));\n            memcpy (returnable[row_iterator][column_iterator], file_buffer, len + 1);\n            printf(\"word found in structure :\");\n            print(returnable[row_iterator][column_iterator]);\n            printf(\"\\n\");\n\n            file_buffer_iterator = 0; //set iterator to 0 to start recieving next word\n            column_iterator += 1;\n        }\n        else if(ch == '\\n')\n        {\n            //end of column\n\n            //first execute the same in if(ch == ',') to copy the word to the data_structure\n            file_buffer[file_buffer_iterator] = 0; //null terminate the string\n            file_buffer[strcspn(file_buffer, \",\\n\")] = 0;\n            len = strlen (file_buffer);\n            printf(\"word recieved :\");\n            print(file_buffer);\n            printf(\"\\n\");\n\n            printf(\"row : %d , column : %d\\n\",row_iterator,column_iterator);\n\n            returnable[row_iterator][column_iterator] = malloc (strlen(file_buffer) + 1);\n            if(returnable[row_iterator][column_iterator] == NULL)\n            {\n                printf(\"error in allocating string\");\n                exit(1);\n            }\n\n            // copy_str(returnable[row_iterator][column_iterator],file_buffer,strlen(file_buffer));\n            memcpy (returnable[row_iterator][column_iterator], file_buffer, len + 1);\n            printf(\"word found in structure :\");\n            print(returnable[row_iterator][column_iterator]);\n            printf(\"\\n\");\n\n            file_buffer_iterator = 0;\n\n            //indicate the row is done\n            /*\n            returnable[row_iterator][column_iterator] = (char*)malloc(sizeof(char));\n            *returnable[row_iterator][column_iterator] = '\\n';\n            */\n            \n            //set values\n            column_iterator = 0;\n            row_iterator += 1;\n            no_of_rows += 1;\n\n            //realoc the row array\n            returnable = realloc (returnable, sizeof *returnable * (no_of_rows + 1));\n            if(*returnable == NULL)\n            {\n                printf(\"cant reallocate\\n\");\n            }\n\n            //allocate column array\n            returnable[row_iterator] = malloc(sizeof *returnable[row_iterator] * (column_counter_variable + 1));\n            if(returnable[row_iterator] == NULL)\n            {\n                printf(\"error in allocating the 4 columns\\n\");\n                exit(1);\n            }\n\n        }\n        else\n        {\n            //get a single word\n            file_buffer[file_buffer_iterator] = ch;\n            file_buffer_iterator += 1;\n        }\n    }\n    fclose (file_handle);\n\n    returnable_structure.rows = no_of_rows;\n    returnable_structure.columns = column_counter_variable; //column_counter(file_handle);\n    returnable_structure.data_structure = returnable;\n\n#ifdef DEBUG\n    print(returnable[2][3]);\n\n    printf(\"returnable before returned : \\n\");\n    print_data(returnable_structure);\n    printf(\"\\n-------------\\n\");\n\n    \n    // free_procedure(returnable,no_of_rows,column_counter_variable);\n    \n\n    printf(\"function ends\\n\");\n#endif\n\n    return returnable_structure;\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define SUCCESS 0\n#define MAXC    1024\n\ntypedef struct function_return\n{\n    int rows;\n    int columns;\n    char ***data_structure;\n} FUNCTION_RETURN;\n\n\nvoid print (const char* string1)\n{\n    int iterator070 = 0;\n    while(string1[iterator070] != '\\0')\n    {\n        printf(\"%c\",string1[iterator070]);\n        iterator070 += 1;\n    }\n    \n}\n\n\n/** use memcpy or strcpy \nint copy_str(char* destination,char* source,int src_len)\n{   \n    int iterator = 0;\n\n    \n    while(iterator != (src_len + 1))\n    {\n        destination[iterator] = source[iterator];\n        iterator += 1;  \n    }\n    destination[iterator] = '\\0';\n    return SUCCESS;\n}\n*/\n\n\nvoid print_data (FUNCTION_RETURN data)\n{\n    int row_iterator = 0;\n\n    while(row_iterator < data.rows)\n    {\n        int column_iterator = 0;    /* must set column_iterator 0 each loop */\n        \n        while(column_iterator < data.columns)\n        {\n            print(data.data_structure[row_iterator][column_iterator]);\n            printf(\",\");\n            column_iterator += 1;\n        }\n        printf(\"\\n\");\n        row_iterator += 1;\n    }\n\n    printf(\"\\n\");\n}\n\n\nint column_counter (FILE* file_handle)\n{\n    int ch;\n    int returnable = 0; //returns no of columns\n\n    while((ch = fgetc(file_handle)) != '\\n')\n    {\n        if(ch == ',')\n        {\n            returnable += 1;\n        }\n    }\n\n    returnable += 1;\n    fseek(file_handle,0,SEEK_SET); //set the seeker to the start of the file\n\n    return returnable;\n}\n\n\nvoid free_procedure(char ***returnable,int rows,int columns)\n{\n    int row_iterator = 0;\n\n    while(row_iterator < rows)\n    {\n        int column_iterator = 0;    /* must set column_iterator 0 each loop */\n        \n        while(column_iterator < columns)\n        {\n            free(returnable[row_iterator][column_iterator]);\n            column_iterator += 1;\n        }\n        free(returnable[row_iterator]);\n        row_iterator += 1;\n    }\n\n    free(returnable);\n#ifdef DEBUG\n    printf(\"free_procedure done \\n\");\n#endif\n}\n\n\nFUNCTION_RETURN load_csv (const char *fname)\n{\n  FUNCTION_RETURN rs = { .data_structure = NULL };\n  char file_buffer[MAXC] = \"\";\n  FILE *fp = fopen (fname, \"r\");\n  \n  /* validate file open */\n  if (fname == NULL) {\n    perror (\"load_csv fopen failed\");\n    return rs;\n  }\n  rs.columns = column_counter (fp);   /* retrieve column count */\n  \n  while (fgets (file_buffer, sizeof file_buffer, fp)) {\n    char *tok = NULL;                 /* pointer for token */\n    int column_iterator = 0;          /* column_iterator */\n    \n    /* allocate storage for row, always realloc to temporary pointer */\n    void *tmp = realloc (rs.data_structure, \n                         sizeof *rs.data_structure * (rs.rows + 1));\n    if (tmp == NULL) {\n      perror (\"load_csv realloc rs.data_structure\");\n      return rs;\n    }\n    rs.data_structure = tmp;        /* assign reallocated block to pointer */\n    \n    /* allocate storage for columns/validate */\n    rs.data_structure[rs.rows] = malloc (sizeof *rs.data_structure[rs.rows] * \n                                         rs.columns);\n    if (rs.data_structure[rs.rows] == NULL) {\n      perror (\"load_csv malloc rs.data_structure[rows]\");\n      return rs;\n    }\n    \n    tok = strtok (file_buffer, \",\\n\");\n    while (tok != NULL && column_iterator < rs.columns) {\n      size_t len = strlen (tok);    /* get token length */\n      /* allocate/validate storage for token */\n      rs.data_structure[rs.rows][column_iterator] = malloc (len + 1);\n      if (rs.data_structure[rs.rows][column_iterator] == NULL) {\n        perror (\"load_csv malloc rs.data_structure[rs.rows][column_iterator]\");\n        free (rs.data_structure[rs.rows]);  /* free mem for row */\n        return rs;\n      }\n      /* copy from token to row/column storage in datastruct */\n      memcpy (rs.data_structure[rs.rows][column_iterator], tok, len + 1);\n      \n      column_iterator += 1;\n      tok = strtok (NULL, \",\\n\");\n    }\n    \n    /* validate all tokens processed */\n    if (column_iterator != rs.columns) {\n      fprintf (stderr, \"error: invalid column count (%d) row %d\\n\",\n                column_iterator, rs.rows);\n      for (int i = 0; i < column_iterator; i++) {\n        free (rs.data_structure[rs.rows][i]);   /* free mem for partial cols */\n      }\n      free (rs.data_structure[rs.rows]);        /* free mem for row */\n      return rs;\n    }\n    \n    rs.rows += 1;     /* increment row count after all checks passed */\n  }\n  fclose (fp);  /* close file */\n  \n  return rs;    /* return pointer to filled struct */\n}\n\nFUNCTION_RETURN load_data_CSV_v02(const char *Filename)\n{\n    //open file\n    FILE *file_handle;\n    if((file_handle = fopen(Filename,\"r\")) == NULL)\n    {\n        printf(\"cant open file\\n\");\n        exit(1);\n    }\n\n    FUNCTION_RETURN returnable_structure;\n\n    char ***returnable; //holds the actual data in a multidimentional structure in memory\n    int row_iterator = 0;\n    int column_iterator = 0;\n    int no_of_rows = 0;\n    int ch; //charecter iterator\n    char file_buffer[200]; //will hold the text temporarily before transferring to returnable\n    int file_buffer_iterator = 0; //iterator for file_buffer\n\n    //create array of rows\n    returnable = malloc (sizeof *returnable);\n    if (returnable == NULL)\n    {\n        printf(\"error in allocating first row\\n\");\n        exit(1);\n    }\n\n    //create array of columns for the first row\n    returnable[row_iterator] = malloc (sizeof *returnable[row_iterator] * \n                                       column_counter(file_handle));\n    if(returnable[row_iterator] == NULL)\n    {\n        printf(\"error in allocating first 4 columns\\n\");\n        exit(1);\n    }\n\n    int column_counter_variable = column_counter(file_handle);\n    //since column counter function seeks to the start of the file, using the function directly\n    //in loop will cause to read the first row for all the iteration.\n\n\n\n    while((ch = fgetc(file_handle)) != EOF)\n    {\n        size_t len = 0;\n#ifdef DEBUG\n        printf(\"ch : %c\\n\",ch);\n#endif\n        if(ch == ',')\n        {\n            file_buffer[file_buffer_iterator] = 0; //null terminate the string\n            file_buffer[strcspn(file_buffer, \",\\n\")] = 0;\n            len = strlen (file_buffer);\n            \n            printf(\"word recieved :\");\n            print(file_buffer);\n            printf(\"\\n\");\n\n            printf(\"row : %d , column : %d\\n\",row_iterator,column_iterator);\n\n            returnable[row_iterator][column_iterator] = malloc (len + 1);\n            if(returnable[row_iterator][column_iterator] == NULL)\n            {\n                printf(\"error in allocating string\");\n                exit(1);\n            }\n\n            // copy_str(returnable[row_iterator][column_iterator],file_buffer,strlen(file_buffer));\n            memcpy (returnable[row_iterator][column_iterator], file_buffer, len + 1);\n            printf(\"word found in structure :\");\n            print(returnable[row_iterator][column_iterator]);\n            printf(\"\\n\");\n\n            file_buffer_iterator = 0; //set iterator to 0 to start recieving next word\n            column_iterator += 1;\n        }\n        else if(ch == '\\n')\n        {\n            //end of column\n\n            //first execute the same in if(ch == ',') to copy the word to the data_structure\n            file_buffer[file_buffer_iterator] = 0; //null terminate the string\n            file_buffer[strcspn(file_buffer, \",\\n\")] = 0;\n            len = strlen (file_buffer);\n            printf(\"word recieved :\");\n            print(file_buffer);\n            printf(\"\\n\");\n\n            printf(\"row : %d , column : %d\\n\",row_iterator,column_iterator);\n\n            returnable[row_iterator][column_iterator] = malloc (strlen(file_buffer) + 1);\n            if(returnable[row_iterator][column_iterator] == NULL)\n            {\n                printf(\"error in allocating string\");\n                exit(1);\n            }\n\n            // copy_str(returnable[row_iterator][column_iterator],file_buffer,strlen(file_buffer));\n            memcpy (returnable[row_iterator][column_iterator], file_buffer, len + 1);\n            printf(\"word found in structure :\");\n            print(returnable[row_iterator][column_iterator]);\n            printf(\"\\n\");\n\n            file_buffer_iterator = 0;\n\n            //indicate the row is done\n            /*\n            returnable[row_iterator][column_iterator] = (char*)malloc(sizeof(char));\n            *returnable[row_iterator][column_iterator] = '\\n';\n            */\n            \n            //set values\n            column_iterator = 0;\n            row_iterator += 1;\n            no_of_rows += 1;\n\n            //realoc the row array\n            returnable = realloc (returnable, sizeof *returnable * (no_of_rows + 1));\n            if(*returnable == NULL)\n            {\n                printf(\"cant reallocate\\n\");\n            }\n\n            //allocate column array\n            returnable[row_iterator] = malloc(sizeof *returnable[row_iterator] * (column_counter_variable + 1));\n            if(returnable[row_iterator] == NULL)\n            {\n                printf(\"error in allocating the 4 columns\\n\");\n                exit(1);\n            }\n\n        }\n        else\n        {\n            //get a single word\n            file_buffer[file_buffer_iterator] = ch;\n            file_buffer_iterator += 1;\n        }\n    }\n    fclose (file_handle);\n\n    returnable_structure.rows = no_of_rows;\n    returnable_structure.columns = column_counter_variable; //column_counter(file_handle);\n    returnable_structure.data_structure = returnable;\n\n#ifdef DEBUG\n    print(returnable[2][3]);\n\n    printf(\"returnable before returned : \\n\");\n    print_data(returnable_structure);\n    printf(\"\\n-------------\\n\");\n\n    \n    // free_procedure(returnable,no_of_rows,column_counter_variable);\n    \n\n    printf(\"function ends\\n\");\n#endif\n\n    return returnable_structure;\n}\n\n\nint main (int argc, char **argv)\n{\n  const char *fname = argc > 1 ? argv[1] : \"data.csv\";\n#ifdef USEV02  \n  FUNCTION_RETURN result = load_data_CSV_v02 (fname);\n#else\n  FUNCTION_RETURN result = load_csv (fname);\n#endif\n\n  printf (\"log : (main) : start\\n\");\n  \n  print_data (result);\n  \n  printf (\"rows: %d\\ncols: %d\\n\\n\", result.rows, result.columns);\n  \n  free_procedure (result.data_structure, result.rows, result.columns);\n\n  return 0;\n}",
    "$ ./bin/csv2dstrings dat/2dstr.csv\nlog : (main) : start\nRed,Sports,Domestic,Yes,\nRed,Sports,Domestic,No,\nRed,Sports,Domestic,Yes,\nYellow,Sports,Domestic,No,\nYellow,Sports,International,Yes,\nYellow,SUV,International,No,\nYellow,SUV,International,Yes,\nYellow,SUV,Domestic,No,\nRed,SUV,International,No,\nRed,Sports,International,Yes,\n\nrows: 10\ncols: 4",
    "$ valgrind ./bin/csv2dstrings dat/2dstr.csv\n==149115== Memcheck, a memory error detector\n==149115== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.\n==149115== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info\n==149115== Command: ./bin/csv2dstrings dat/2dstr.csv\n==149115==\nlog : (main) : start\nRed,Sports,Domestic,Yes,\nRed,Sports,Domestic,No,\nRed,Sports,Domestic,Yes,\nYellow,Sports,Domestic,No,\nYellow,Sports,International,Yes,\nYellow,SUV,International,No,\nYellow,SUV,International,Yes,\nYellow,SUV,Domestic,No,\nRed,SUV,International,No,\nRed,Sports,International,Yes,\n\nrows: 10\ncols: 4\n\n==149115==\n==149115== HEAP SUMMARY:\n==149115==     in use at exit: 0 bytes in 0 blocks\n==149115==   total heap usage: 63 allocs, 63 frees, 6,615 bytes allocated\n==149115==\n==149115== All heap blocks were freed -- no leaks are possible\n==149115==\n==149115== For lists of detected and suppressed errors, rerun with: -s\n==149115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
    "void print_data (FUNCTION_RETURN data)\n{\n    int row_iterator = 0;\n\n    while(row_iterator < data.rows)\n    {\n        int column_iterator = 0;    /* must set column_iterator 0 each loop */\n        \n        while(column_iterator < data.columns)\n        {\n            /* if not 1st column, add comma BEFORE */\n            if (column_iterator) {\n              putchar (',');\n            }\n            print(data.data_structure[row_iterator][column_iterator]);\n            column_iterator += 1;\n        }\n        putchar ('\\n');       /* you putchar() a single char, not printf() */\n        row_iterator += 1;\n    }\n\n    putchar ('\\n');\n}",
    "$ ./bin/csv2dstrings dat/2dstr.csv\nlog : (main) : start\nRed,Sports,Domestic,Yes\nRed,Sports,Domestic,No\nRed,Sports,Domestic,Yes\nYellow,Sports,Domestic,No\nYellow,Sports,International,Yes\nYellow,SUV,International,No\nYellow,SUV,International,Yes\nYellow,SUV,Domestic,No\nRed,SUV,International,No\nRed,Sports,International,Yes\n\nrows: 10\ncols: 4",
    "int getop(char s[], size_t lim) {\n    int c;\n\n    while ((c = getchar()) == '\\n') || c == '\\t' || c == ' ') \n        continue;\n\n    if ((c >= '0' && c <= '9') || c == '.') {\n        size_t i = 0;\n        int dot = 0;\n        while ((c >= '0' && c <= '9') || c == '.') {\n            if (c == '.' && dot++)  // only accept a single '.'\n                break;\n            if (i + 1 >= lim) {\n                ungetc(c, stdin);\n                return TOOBIG;\n            }\n            s[i++] = (char)c;\n            c = getchar();\n        }\n        ungetc(c, stdin);\n        s[i] = '\\0';\n        return NUMBER;\n    }\n    return c;  // operator or EOF\n}",
    "int getop(char s[], int lim) {\n    int c, c_, blank = 0, i = 0;\n\n    while ((c = getchar()) == '\\n' || c == '\\t' || c == ' ') blank++;\n    \n    if ((c < '0' || c > '9') && c != '.' && blank == 0) {\n        c_ = c;\n        c = getchar();\n        return c_;\n    }\n\n    else if ((c >= '0' && c <= '9') || c == '.') {\n        do {\n            s[i++] = c;\n        } while ((((c = getchar()) >= '0' && c <= '9') || c == '.') && i < (lim - 1));\n    }\n\n    s[i] = 0;\n\n    if (i > 0 && i < (lim - 1)) return NUMBER;\n    else if (i == (lim - 1)) return TOOBIG;\n}",
    "#include <stdio.h>\n#include <string.h>\n\nint main ( void) {\n    char *orgname = \"sym.txt\";\n    char *tmpname = \"sym.tmp\";\n    char line[4096] = \"\";\n    FILE *org = NULL;\n    FILE *tmp = NULL;\n\n    if ( NULL == ( org = fopen ( orgname, \"r\"))) {\n        perror ( orgname);\n        return 1;\n    }\n\n    if ( NULL == ( tmp = fopen ( tmpname, \"w\"))) {\n        perror ( tmpname);\n        fclose ( tmp);\n        return 1;\n    }\n\n    while ( fgets ( line, sizeof line, org)) {\n        if ( ! strcmp ( line, \"OUTER var 2026\\n\")) { // found a matching line\n            fprintf ( tmp, \"%s\", \"OUTER label 2028\\n\"); // replace the line\n        }\n        else {\n            fprintf ( tmp, \"%s\", line);\n        }\n    }\n\n    fclose ( org);\n    fclose ( tmp);\n\n    remove ( orgname);\n    rename ( tmpname, orgname);\n}",
    "person *p = malloc(sizeof(person));\n\nprintf(\"Address of person of generation %d created is: %p\\n\", generations, p);",
    "printf(\"Address of person freed..: %p\\n\", p);\n\nfree(p);",
    "craig@Vera:~/C_Programs/Console/Blood/bin/Release$ ./Blood \nAddress of person of generation 3 created is: 0x55e34e0a22a0\nAddress of person of generation 2 created is: 0x55e34e0a26d0\nAddress of person of generation 1 created is: 0x55e34e0a26f0\nAddress of person of generation 1 created is: 0x55e34e0a2710\nAddress of person of generation 2 created is: 0x55e34e0a2730\nAddress of person of generation 1 created is: 0x55e34e0a2750\nAddress of person of generation 1 created is: 0x55e34e0a2770\nChild (Generation 0): blood type OA\n    Parent (Generation 1): blood type OO\n        Grandparent (Generation 2): blood type OO\n        Grandparent (Generation 2): blood type OO\n    Parent (Generation 1): blood type AO\n        Grandparent (Generation 2): blood type OA\n        Grandparent (Generation 2): blood type AO\nAddress of person freed..: 0x55e34e0a26f0\nAddress of person freed..: 0x55e34e0a2710\nAddress of person freed..: 0x55e34e0a26d0\nAddress of person freed..: 0x55e34e0a2750\nAddress of person freed..: 0x55e34e0a2770\nAddress of person freed..: 0x55e34e0a2730\nAddress of person freed..: 0x55e34e0a22a0",
    "void QuickSort(int *a, int lo, int hi)\n{\nint i, j;\nint p, t;\n    if(lo >= hi)\n        return;\n    p = a[lo + (hi-lo)/2];\n    i = lo;\n    j = hi;\n    while (i <= j){\n        while (a[i] < p)i++;\n        while (a[j] > p)j--;\n            if (i > j)\n                break;\n            t = a[i];\n            a[i] = a[j];\n            a[j] = t;\n            i++;\n            j--;\n    }\n    QuickSort(a, lo, j);\n    QuickSort(a, i, hi);\n}",
    "#pragma omp master",
    "if (omp_get_thread_num() == 0)",
    "#pragma omp masked filter(omp_get_thread_num()/2*2)",
    "#pragma omp masked filter(omp_get_thread_num()%5)",
    "void deleteContact(Array *a, int element) {\n    if (element < 0 || element >= a->used)\n        return;\n    for (int i = element + 1; i < a->used; i++)\n        a->array[i - 1] = a->array[i];\n    a->used -= 1;\n}",
    "typedef struct {\n    bool inuse;\n    char firstName[MAX_LENGTH];\n    char lastName[MAX_LENGTH];\n    char phoneNum[MAX_LENGTH];\n} Contact;",
    "#include <xc.h>\n\nchar my_array[10];\nunsigned int *cont_up; \n\nvoid main() {\n    cont_up = (unsigned int *)&my_array[5]; \n\n    \n    *cont_up = 0xABCD; \n\n   \n    while (1);\n}",
    "#include<stdint.h>\n\ntypedef union\n{\n  uint8_t  u8  [8];\n  uint16_t u16 [4];\n\n  struct \n  {\n    uint16_t here_are;\n    uint16_t weird;\n    uint8_t  names;\n    uint16_t cont_up;\n    uint8_t  the_end;\n  };\n} array_t;",
    "findmnt -no source -T /tmp",
    "$ df /tmp/\nFilesystem      1K-blocks     Used Available Use% Mounted on\n/dev/sdc       1055762868 26105084 975954312   3% /",
    "#include <stdlib.h>\n#include <stdio.h>\n#include <fcntl.h>\n#include <linux/fs.h>\n#include <sys/ioctl.h>\n#include <string.h>\n#include <errno.h>\n#include <unistd.h>\n\nint main() {\n    const int fd = open(\"/dev/sdc\", O_RDONLY);\n    if (fd == -1) {\n        printf(\"Error: %s\\n\", strerror(errno));\n        return EXIT_FAILURE;\n    }\n\n    unsigned int block_size = 0;\n    if (ioctl(fd, BLKPBSZGET, &block_size) == -1) {\n        printf(\"ioctl error: %s\\n\", strerror(errno));\n        close(fd);\n        return EXIT_FAILURE;\n    }\n\n    printf(\"Physical block size: %u bytes\\n\", block_size);\n\n    close(fd);\n    return EXIT_SUCCESS;\n}",
    "$ gcc main.c\n$ ./a.out\nError: Permission denied\n$ sudo !!\nsudo ./a.out\nPhysical block size: 4096 bytes",
    "#include <stdio.h>\n\nint main(){\n    int x;\n\n    scanf(\"%d\", &x);\n}",
    "srand(time(0));",
    "srand(time((void *)0));",
    "srand(time(NULL));",
    "uint64_t x = -1;",
    "int connection_status = connect(client_socket,(struct sockaddr *) &tosend,sizeof(struct sockaddr));",
    "int connection_status = connect(client_socket, (struct sockaddr *) &tosend,\n          sizeof(struct sockaddr_un));",
    "int connection_status = connect(client_socket, (struct sockaddr *) &tosend,\n          sizeof(tosend));",
    "uint32 masks[] = {0x1, 0x3, 0x7, 0xf, 0x1f, 0x3f, ..., 0xffffffff};",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    char *buf1 = (char *)malloc(32);  // Allocate 32 bytes\n    char *buf2 = (char *)malloc(32);  // Allocate another 32 bytes\n\n    printf(\"buf1: %p\\n\", buf1);\n    printf(\"buf2: %p\\n\", buf2);\n\n    // Overflow buf1 to overwrite buf2's metadata\n    memset(buf1, 'A', 60);\n\n    printf(\"buf1: %s\\n\", buf1);\n    printf(\"buf2: %s\\n\", buf2);\n    // Trigger corruption\n    free(buf2);\n\n    return 0;\n}",
    "$ gcc heap_overflow.c -o heap_overflow -g",
    "$ $ ./heap_overflow\nbuf1: 0x55cf8911a2a0\nbuf2: 0x55cf8911a2d0\nbuf1: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nbuf2: AAAAAAAAAAAA\ndouble free or corruption (out)\nAborted (core dumped)",
    "idf_component_register(\n    SRCS\n        \"messenger.cpp\"\n        ${SOURCES}\n    INCLUDE_DIRS\n        \".\"\n        \"clients\"\n        ${INCLUDES}\n    REQUIRES\n        driver\n)\n\n# Conditionally add optional dependencies\nif(CONFIG_COMPONENT_1_ENABLE)\n    idf_component_optional_requires(PRIVATE driver-SPI)\nendif()\n\nif(CONFIG_COMPONENT_2_ENABLE)\n    idf_component_optional_requires(PRIVATE driver-UART)\nendif()",
    "gcc -Iincludes src/main.c src/functions.c -o main -lm",
    "struct rte_ring *r_0, *r_1;\nunsigned int flags = 0;\nunsigned int sz = 1024;\nint port_id;\n\nr_0 = rte_ring_create(\"r_0\", sz, rte_socket_id(), flags);\nr_1 = rte_ring_create(\"r_1\", sz, rte_socket_id(), flags);\n\nport_id = rte_eth_from_rings(\"net_ring0\", &r_0, 1, &r_1, 1, rte_socket_id());\n\n/* (configure and start the port) */",
    "uint16_t port_id;\n\n(void)rte_eal_hotplug_add(\"vdev\", \"net_ring0\", \"\");\n(void)rte_eth_dev_get_port_by_name(\"net_ring0\", &port_id);\n\n/* (interact with packet receive and transmit APIs, etc) */",
    "EINVAL addrlen is wrong, or addr is not a valid address for this socket's domain.",
    "struct sockaddr_un {\n  short sun_family;\n  char sun_path[1024];\n};",
    "struct sockaddr_un {\n  sa_family_t sun_family;               /* AF_UNIX */\n  char        sun_path[108];            /* Pathname */\n};",
    "int parseArguments(int argc, const char* const* argv);",
    "int main(int argc, char** argv)\n{\n    parseArguments(argc, (const char* const*)argv);\n}",
    "parseConstArguments(int argc, const char * const *argv);\nparseModifiableArguments(int argc, char * const *argv);\n\n#define parseArguments(argc, argv) _Generic(**(argv), \\\n    const char: parseConstArguments,                  \\\n    char:       parseModifiableArguments              \\\n    )((argc), (argv))",
    "struct ConfigOpt {\n    void *value;\n};\n\nint main(void) {\n    char *value = \"old\";\n    printf(\"%s\", value);\n\n    struct ConfigOpt options[] = {\n        {&value}\n    };\n    \n    *(char**)options[0].value = \"new\";\n\n    printf(\"%s\", value);\n    return 0;\n}",
    "oldnew",
    "{&value}\n         ^\n         Address of",
    "*(char**)options[0].value = \"new\"; \n    | ^^^^^^\n    | Cast back to the original type\n    ^\n    Dereference of the pointer to assign a new value",
    "#ifndef DEDUP_R_H__INCLUDED\n#define DEDUP_R_H__INCLUDED\n\n#include <stddef.h>\n\n/*\n * Moves duplicate elements of an array to the end of the array.\n *\n * A \"duplicate\" element is one that compares equal to an element at a lower\n * index in the array.  All the other elements are \"distinct\" elements.\n *\n * The array is pointed to by `base` and has `nmemb` members of element size\n * `size`.\n *\n * `compar` points to a comparison function that returns -1, 0, or 1 according\n * to whether the element pointed to by its first parameter compares\n * respectively less than, equal to, or greater than the element pointed to\n * by its second parameter.  Its third parameter is a context pointer set to\n * the value of this function's `arg` parameter.\n *\n * The array is partitioned in two parts of zero or more elements with the\n * part at the beginning of the array containing the distinct elements in\n * their original order, and the part at the end of the array containing the\n * duplicate elements in an unspecified order.\n *\n * The function returns the number of distinct elements.\n */\nsize_t dedup_r(void *base, size_t nmemb, size_t size,\n               int (*compar)(const void *, const void *, void *), void * arg);\n\n#endif",
    "#include <stdlib.h>\n#include <string.h>\n#include \"dedup_r.h\"\n#include \"sort_r.h\"\n\n/*\n * Context for sorting array of indices by the elements of an indirect array\n * indexed by the indices.\n */\nstruct dedup_context {\n    const unsigned char *base;  /* base of indirect array */\n    size_t size;                /* element size of indirect array. */\n    int (*compar)(const void *a, const void *, void *);\n    void *arg;                  /* indirect context. */\n};\n\n/*\n * Compares the elements `[a]` and `[b]` of an array pointed by by\n * `context->base` with element size `context->size`, compared with\n * `context->compar()`.\n */\nstatic int dedup__cmp_at(size_t a, size_t b,\n                         const struct dedup_context *context)\n{\n    const void *ap = context->base + a * context->size;\n    const void *bp = context->base + b * context->size;\n\n    return context->compar(ap, bp, context->arg);\n}\n\n/*\n * Compares indices of type `size_t` pointed to by `a` and `b`, compared\n * primarily by the comparison order of the elements of an indirect array that\n * are indexed by these indices, and secondarily by the indices in ascending\n * order.\n *\n * Details of the indirect array and its element comparision function are\n * described by the context pointed to by `arg`.\n */\nstatic int dedup__cmp(const void *a, const void *b, void *arg)\n{\n    const struct dedup_context *context = arg;\n    size_t ai = *(const size_t *)a;\n    size_t bi = *(const size_t *)b;\n    int cmp;\n\n    /*\n     * Compare indices `ai` and `bi` primarily by the comparison order of the\n     * elements `[ai]` and `[bi]` in the indirect array pointed to by\n     * `context->base` with element size `context->size`, ordered by\n     * `context->compar()`.\n     */\n    cmp = dedup__cmp_at(ai, bi, context);\n    if (cmp == 0) {\n        /* Secondarily compare indices `ai` and `bi` by ascending order. */\n        cmp = ai < bi ? -1 : ai > bi ? 1 : 0;\n    }\n    return cmp;\n}\n\n/*\n * Compares `size_t` type values pointed to by `a` and `b` in ascending order.\n */\nstatic int size_t_cmp(const void *a, const void *b)\n{\n    size_t av = *(const size_t *)a;\n    size_t bv = *(const size_t *)b;\n\n    return av < bv ? -1 : av > bv ? 1 : 0;\n}\n\n/*\n * Rearranges the elements of an array pointed to by `base` with `nmemb`\n * members of element size `size` according to the order described by array\n * `order` containing all the indices `0` to `nmemb - 1` in some order.\n *\n * For each index `i`, initial `base[order[i]]` will be copied to final\n * `base[i]` and `order[i]` will be set to `i`.\n */\nstatic void rearrange(void * restrict base, size_t nmemb, size_t size,\n                      size_t * restrict order)\n{\n    unsigned char (*data)[size] = base;\n    size_t i;\n\n    for (i = 0; i < nmemb; i++) {\n        size_t next = order[i];\n\n        if (i != next) {\n            /*\n             * Element is out of order.\n             * Rotate all the elements in the cycle containing the element.\n             */\n            size_t current = i;\n            unsigned char hold_data[size];\n\n            /* Copy the first element in the cycle to temporary variable. */\n            memcpy(hold_data, data[current], size);\n            do {\n                /* Copy next element in the cycle to current element. */\n                memcpy(data[current], data[next], size);\n                order[current] = current;\n                current = next;\n                next = order[current];\n            } while (next != i);\n            /* Copy temporary variable to last element in the cycle. */\n            memcpy(data[current], hold_data, size);\n            order[current] = current;\n        }\n    }\n}\n\n/* See description in \"dedup_r.h\". */\nsize_t dedup_r(void *base, size_t nmemb, size_t size,\n               int (*compar)(const void *, const void *, void *), void * arg)\n{\n    if (nmemb < 2) {\n        /* Trivial case. */\n        return nmemb;\n    }\n\n    size_t i;\n\n    /*\n     * Use auxiliary array `order` to hold a 1-to-1 mapping from new element\n     * indices to old element indices.\n     */\n    size_t order[nmemb];\n\n    /* Initialize the auxiliary array to the identity mapping. */\n    for (i = 0; i < nmemb; i++) {\n        order[i] = i;\n    }\n\n    /* Create a context for sorting the auxiliary array. */\n    struct dedup_context context = {\n        .base = base,\n        .size = size,\n        .compar = compar,\n        .arg = arg,\n    };\n\n    /*\n     * Sort the auxiliary array according to the `dedup__cmp()` function (see\n     * its header comment for description) and the context we created.  The\n     * auxiliary array will be sorted so that its elements indirectly index the\n     * original array in the order determined by `compar()` and the relative\n     * positions of identical elements in the original array is maintained.\n     *\n     * `sort_r()` is a function similar to `qsort()` but with an extra context\n     * pointer that is passed as the third argument of calls to the comparison\n     * function.  See <https://stackoverflow.com/a/14801407/5264491> and\n     * <https://github.com/noporpoise/sort_r>, or use a local equivalent.\n     */\n    sort_r(order, nmemb, sizeof order[0], dedup__cmp, &context);\n\n    /*\n     * Count the number of distinct elements in the original array.\n     * There is at least 1.\n     */\n    size_t ndistinct = 1;\n\n    /*\n     * In addition, we will move those elements of the auxiliary array that\n     * index duplicate elements in the original array to the end of the\n     * auxiliary array, partitioning the auxiliary array into two parts.  The\n     * initial part will contain the indices of the distinct elements in the\n     * original array, and the remaining part will contain the indices of any\n     * duplicates of the distinct elements in the original array.\n     */\n    for (i = ndistinct; i < nmemb; i++) {\n        /*\n         * We use the auxiliary array to look for duplicates. When the original\n         * array is indirectly indexed through the auxiliary array, each\n         * distinct element is folowed by zero or more duplicates that compare\n         * equal to it.\n         */\n        if (dedup__cmp_at(order[ndistinct - 1], order[i], &context) < 0) {\n            /* Found another distinct element. */\n            if (i != ndistinct) {\n                /*\n                 * Swap the positions of the new distinct element and\n                 * a duplicate of different distinct element so that all the\n                 * distinct elements end up in the initial partition.\n                 */\n                size_t tmp = order[ndistinct];\n\n                order[ndistinct] = order[i];\n                order[i] = tmp;\n            }\n            ndistinct++;\n        }\n    }\n\n    /*\n     * Sort the first part of the auxiliary array in increasing order to\n     * restore the relative ordering of the distinct elements in the original\n     * array.\n     */\n    qsort(order, ndistinct, sizeof order[0], size_t_cmp);\n\n    /*\n     * Just for fun, also sort the second part of the auxiliary array in\n     * increasing order to restore the relative ordering of the duplicate\n     * elements in the original array.\n     */\n    qsort(order + ndistinct, nmemb - ndistinct, sizeof order[0], size_t_cmp);\n\n    /*\n     * Rearrange the elements of the original array according to the indices\n     * we have stored in the auxiliary array.\n     */\n    rearrange(base, nmemb, size, order);\n    /* Return the number of distinct elements in the original array. */\n    return ndistinct;\n}",
    "#ifndef SORT_R_H__INCLUDED\n#define SORT_R_H__INCLUDED\n\n#include \"heapsort_r.h\"\n\n#define sort_r(b, n, s, cmp, arg) heapsort_r(b, n, s, cmp, arg)\n\n#endif",
    "#ifndef HEAPSORT_R_H__INCLUDED\n#define HEAPSORT_R_H__INCLUDED\n\n#include <stddef.h>\n\nvoid heapsort_r(void *base, size_t nmemb, size_t size,\n                int (*compar)(const void *, const void *, void *), void *arg);\n\n#endif",
    "#include \"heapsort_r.h\"\n#include \"swapmem.h\"\n\nstatic void heapify_r(unsigned char *base, size_t nmemb, size_t size,\n                      size_t root,\n                      int (*compar)(const void *, const void *, void *),\n                      void *arg)\n{\n    while (nmemb / 2 > root) {\n        size_t s = root;\n        size_t c = 2 * root + 1;\n        unsigned char *broot = base + (root * size);\n        unsigned char *bs = base + (s * size);\n        unsigned char *bc = base + (c * size);\n\n        if (compar(bc, bs, arg) > 0) {\n            s = c;\n            bs = bc;\n        }\n        if (c < nmemb - 1) {\n            c++;\n            bc += size;\n            if (compar(bc, bs, arg) > 0) {\n                s = c;\n                bs = bc;\n            }\n        }\n        if (s == root) {\n            break;\n        }\n        swapmem(bs, broot, size);\n        root = s;\n    }\n}\n\nvoid heapsort_r(void *base, size_t nmemb, size_t size,\n                int (*compar)(const void *, const void *, void *), void *arg)\n{\n    unsigned char *last;\n    size_t i;\n\n    if (nmemb < 2) {\n        return;\n    }\n\n    i = nmemb / 2;\n    while (i--) {\n        heapify_r(base, nmemb, size, i, compar, arg);\n    }\n\n    i = nmemb;\n    last = (unsigned char *)base + (i * size);\n    do {\n        i--;\n        last -= size;\n        swapmem(base, last, size);\n        heapify_r(base, i, size, 0, compar, arg);\n    } while (i);\n}",
    "#ifndef SWAPMEM_H__INCLUDED\n#define SWAPMEM_H__INCLUDED\n\n#include <stddef.h>\n\nvoid swapmem(void * restrict a, void * restrict b, size_t size);\n\n#endif",
    "#include \"swapmem.h\"\n\nvoid swapmem(void * restrict a, void * restrict b, size_t size)\n{\n    unsigned char *x = a;\n    unsigned char *y = b;\n    unsigned char t;\n\n    while (size--) {\n        t = *x;\n        *x++ = *y;\n        *y++ = t;\n    }\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n#include \"dedup_r.h\"\n\nstatic int cmplong_c(const void *a, const void *b, void *unused)\n{\n    long av = *(const long *)a;\n    long bv = *(const long *)b;\n\n    return av < bv ? -1 : av > bv ? 1 : 0;\n}\n\nint main(int argc, char *argv[])\n{\n    if (argc > 1) {\n        size_t n = argc - 1;\n        long numbers[n];\n        size_t i;\n        size_t ndistinct;\n\n        for (i = 0; i < n; i++) {\n            numbers[i] = strtol(argv[i + 1], NULL, 0);\n        }\n        printf(\"Original array:\\n{ \");\n        for (i = 0; i < n - 1; i++) {\n            printf(\"%ld, \", numbers[i]);\n        }\n        printf(\"%ld }\\n\", numbers[i++]);\n        ndistinct = dedup_r(numbers, n, sizeof(numbers[0]), cmplong_c, NULL);\n        printf(\"\\nModified array:\\n{\\n /* distinct */\\n \");\n        for (i = 0; i < ndistinct - 1; i++) {\n            printf(\"%ld, \", numbers[i]);\n        }\n        printf(\"%ld\", numbers[i++]);\n        if (i < n) {\n            printf(\",\\n /* duplicates */\\n \");\n            for ( ; i < n - 1; i++) {\n                printf(\"%ld, \", numbers[i]);\n            }\n            printf(\"%ld\", numbers[i++]);\n        }\n        printf(\"\\n}\\n\");\n    }\n}",
    "$ ./demo 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9\nOriginal array:\n{ 3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9 }\n\nModified array:\n{\n /* distinct */\n 3, 1, 4, 5, 9, 2, 6, 8, 7,\n /* duplicates */\n 1, 5, 3, 5, 9, 9\n}",
    "tempArray[searchResult] = arr[0];",
    "while (middle <= right && middle != 0 && arr[middle] == arr[0]) {\n    middle++;\n}\n\nif (middle > right) break;",
    "for (index = 0; index < length; index++) {\n    tempArray[index] = arr[index] * 2; // Insert a free-to-use LSB\n}",
    "for (index = 0; index < length; index++) {\n    searchResult = binarySearch(tempArray, uniqueIndex, arr[index] * 2); // double\n    if (searchResult != -1) {\n        tempArray[searchResult] |= 1; // mark value as used\n        swap(&arr[duplicateIndex++], &arr[index]);\n    }\n}",
    "#define LEN 99\n    char str[LEN + 1];\n    int count = scanf(\"%99[^\\n]\", str);\n    int ch = fgetc(stdin);\n    switch (count) {\n      case EOF: ; // handle end-of-file\n      case 0: ; // Nothing read\n      case 1: ; //Some success\n    }",
    "scanf(\" %[^\\n]s\", str);",
    "typedef enum {\n   a=0,\n   b,\n   ... \n} te_letter;\n\ntypedef enum {\n   one=0x100,\n   two,\n   ...\n} te_numeric;\n\nalpha_numberic_print(uint16 val) {\n   if (val & 0x100)\n      numeric_print(val-0x100)\n   else\n      alpha_print(val)\n}",
    "typedef struct {\n    enum {LETTER, NUMBER} type;\n    int value;\n} enum_value;\n\nvoid print_enum_value(enum_value val) {\n    if (val.type == LETTER) {\n         // ...\n    } else if (val.type == NUMBER) {\n         // ...\n    }\n}",
    "enum {\n    NUMBER,\n    LETTER\n} type;\n\n#define TAGGED_ENUM(type, value) (((type) << 16) | (value))\n\n#define GET_TYPE(value)  ((value) >> 16)\n#define GET_VALUE(value) ((value) & 0xFFFF)\n\nvoid print_tagged_value(int tagged_value) {\n    int type = GET_TYPE(tagged_value);\n    int value = GET_VALUE(tagged_value);\n\n    if (type == LETTER) {\n        // ...\n    } else if (type == NUMBER) {\n        // ...\n    }\n}\n\nint main() {\n    int tagged_letter = TAGGED_ENUM(TYPE_LETTER, a);\n    print_tagged_value(tagged_letter);\n}",
    "#include <stdio.h>\n\n// your structs..... \n        \nint main() {\n    t_page pages[10];\n    char texts[10][2];  // Preallocate space for 10 strings (2 characters each)\n            \n    for (int i = 0; i < 10; i++) {\n        sprintf(texts[i], \"%d\", i);  // Write the number as a string\n        pages[i] = new_page(texts[i]);  // Use the preallocated string\n    }\n               \n    t_book book = new_book(pages, \"my book\");\n    printf(\"%s\\n\", book. Pages[0].text);  // Correctly prints '0'\n                \n    return 0;\n}",
    "ctx->depthpl -= 1;\np[0] = r_get_ndim_enum(ctx);",
    "ctx->depthpl = n;",
    "// Here ctx->depthpl == 1\nctx->depthpl -= 1;\n// Here ctx->depthpl == 0\np[0] = r_get_ndim_enum(ctx);\n// Here ctx->depthpl == n !\np[0] = r_get_ndim_enum(ctx);",
    "void modify_tiff_tag(input_file)\nconst char *input_file;\n{\n    int old_offset_idx = 0;\n    TIFF *tif;\n    tdir_t currentDirNumber;\n    int number_of_sub_IFDs;\n    /* array for SubIFD tag */\n    toff_t sub_IFDs_offsets[NUMBER_OF_SUBIFDs];\n    int blnRead = 0;\n\n    // Open the input TIFF file\n    tif = TIFFOpen(input_file, \"r+\");\n    if (!tif) {\n        printf(\"Failed to open input file: %s\\n\", input_file);\n        return;\n    }\n\n    currentDirNumber = TIFFCurrentDirectory(tif);\n\n    /* The first directory is already read through TIFFOpen() */\n    do {\n        /*Check if there are SubIFD subfiles */\n        void *ptr;\n        if (TIFFGetField(tif, TIFFTAG_SUBIFD, &number_of_sub_IFDs, &ptr)) {\n            /* Copy SubIFD array from pointer */\n            memcpy(sub_IFDs_offsets, ptr, number_of_sub_IFDs * sizeof(toff_t));\n\n            for (int i = 0; i < number_of_sub_IFDs; ++i) {\n                char *opcode2_data = nullptr;\n\n                /* Read first SubIFD directory */\n                if (!TIFFSetSubDirectory(tif, sub_IFDs_offsets[i]))\n                    break;\n                /* Check if there is a SubIFD chain behind the first one from\n                 * the array, as specified by Adobe */\n                while (TIFFReadDirectory(tif))\n                    printf(\"Shouldn't be here\\n\");\n                \n                if (TIFFGetField(tif, TIFFTAG_OPCODELIST2, &opcode2_size_bytes, &opcode2_data)) {\n                    old_offset_idx = i;\n                    uint32_t opcode3_size_bytes;\n                    char *opcode3_data = nullptr;\n\n                    if (TIFFGetField(tif, TIFFTAG_OPCODELIST3, &opcode3_size_bytes, &opcode3_data)) {\n                        char *new_opcode3_data = nullptr;\n                        uint32_t new_opcode3_size_bytes = parse_opcodes(opcode2_data, opcode2_size_bytes, opcode3_data,\n                                                                        opcode3_size_bytes, &new_opcode3_data);\n                        TIFFSetField(tif, TIFFTAG_OPCODELIST3, new_opcode3_size_bytes, new_opcode3_data);\n                        free(new_opcode3_data);\n                    }\n\n                    if (TIFFRewriteDirectory(tif))\n                        printf(\"Rewritten\\n\");\n                    else\n                        printf(\"Failed to rewrite\");\n\n                    TIFFFlush(tif);\n                }\n            }\n            /* Go back to main-IFD chain and re-read that main-IFD directory */\n            if (!TIFFSetDirectory(tif, currentDirNumber))\n                return;\n        }\n        TIFFFlush(tif);\n        /* Read next main-IFD directory (subfile) */\n        blnRead = TIFFReadDirectory(tif);\n\n        if (blnRead) {\n            sub_IFDs_offsets[old_offset_idx] = TIFFCurrentDirOffset(tif);\n            TIFFSetDirectory(tif, 0);\n            TIFFSetField(tif, TIFFTAG_SUBIFD, number_of_sub_IFDs, sub_IFDs_offsets);\n            TIFFRewriteDirectory(tif);\n            // A bit hacky, but TIFFUnlinkDirectory() uses 1-based indexing.\n            TIFFUnlinkDirectory(tif, 2);\n        }\n    } while (blnRead);\n\n    TIFFClose(tif);\n}",
    "#include <ctype.h>\n#include <stdbool.h>\n#include <stdint.h>\n\ntypedef struct {\n    uint32_t ints[1024/32];\n    bool negsign;\n} bigInt_alt;\n\nbigInt_alt bigInt_from_string(const char *s) {\n  bigInt_alt y = { 0 };\n  const unsigned char *us = (const unsigned char *) s;\n\n  // Maybe toss leading whitespace\n  while (isspace(*us)) {\n    us++;\n  }\n\n  y.negsign = *us == '-';\n  if (y.negsign || *us == '+') {\n    us++;\n  }\n\n  if (!isdigit(*us)) {\n    ;  // TBD handle no digits\n  }\n\n  while (isdigit(*us)) {\n    unsigned carry = *us - '0';\n    for (size_t i = 0; i < 1024/32; i++) {\n      uint64_t acc = y.ints[i];\n      acc = acc * 10 + carry;\n      y.ints[i] = acc & 0xFFFFFFFF;\n      carry = (unsigned) (acc >> 32);\n    }\n    if (carry) {\n      ; // TBD handle overflow\n    }\n    us++;\n  }\n\n  // Maybe allow trailing whitespace\n  while (isspace(*us)) {\n    us++;\n  }\n\n  if (*us != '\\0') {\n    ;  // TBD handle junk input\n  }\n\n  return y;\n}",
    "bigInt result = bigint_0;\nchar *p = input;\nwhile (p) {\n    int value = *p - '0';\n    bigInt digit = new_bigint(value);\n    result = bigint_add(bigint_mult(result, bigint_10), digit);\n    p++;\n}",
    "gcc -c pdcurses/curses.c -o pdcurses/curses.obj\n#                                           ^ You can also type \".o\"",
    "ar rcs pdcurses/libcurses.lib pdcurses/curses.obj # And your other modules\n#                         ^ You can also type \".a\"",
    "gcc -Lpdcurses -lcurses test-2.c -o curses.exe",
    "gcc -shared -o pdcurses/libcurses.dll pdcurses/curses.c # And another modules\n#                                 ^ Or \".so\"",
    "gcc test-2.c -Lpdcurses -lcurses -Wl,-rpath=pdcurses -o test.exe\n#                                   ^ Without space char",
    "import ctypes as ct\n\ndll = ct.CDLL('./test')\ngetArrayOfStrings = dll.getArrayOfStrings\ngetArrayOfStrings.argtypes = ct.POINTER(ct.POINTER(ct.POINTER(ct.c_char))),\ngetArrayOfStrings.restype = None\n\nnames = ct.POINTER(ct.POINTER(ct.c_char))()\ndll.getArrayOfStrings(ct.byref(names))\n#dll.getArrayOfStrings(names)  # also works but byref implied here.\ni = 0\nwhile names[i]:\n    print(ct.string_at(names[i]))\n    i += 1",
    "b'Foo'\nb'Bar'",
    "import ctypes as ct\n\ndll = ct.CDLL('./test')\ngetArrayOfStrings = dll.getArrayOfStrings\ngetArrayOfStrings.argtypes = ct.POINTER(ct.POINTER(ct.c_char_p)),\ngetArrayOfStrings.restype = None\n\nnames = ct.POINTER(ct.c_char_p)()\ndll.getArrayOfStrings(names)\ni = 0\nwhile names[i]:\n    print(names[i])\n    i += 1",
    "// UART_RXFIFO_FULL_THRHD 0-6 bits\n  config_1_uart |= (rx_thershold << 0);",
    "{H+}\n\nuses\n    ctypes, SysUtils;\n\ntype\n    PFile = Pointer;\n\nfunction fdopen(fd: cint; const mode: PChar): PFile; cdecl; external 'c';\nfunction dup(fd: cint): cint; cdecl; external 'c';\n\nfunction GetPFile(var F: TextFile): PFile;\nvar\n    fd: THandle;\n    newfd: THandle;\n    pf: PFile;\nbegin\n    Flush(F);\n    fd := TTextRec(F).Handle;\n    newfd := dup(fd);\n    if newfd = -1 then\n    begin\n        // handle error\n    end;\n    pf := fdopen(newfd, 'w');\n    if pf = nil then\n    begin\n        // handle error\n    end;\n    GetPFile := pf;\nend;",
    "--(end of buffer or a NUL)\n--accepting rule at line 23 (\"a1.\")\n--accepting rule at line 31 (\"a1.\")\n--accepting rule at line 21 (\":\")\n--accepting rule at line 23 (\"b1\")\n--accepting rule at line 30 (\"b1\")\n--(end of buffer or a NUL)\n--accepting default rule (\"\n\")\ntokName : tokRef\n--(end of buffer or a NUL)\n--EOF (start condition 1)",
    "linux-vdso.so.1 (0x00007fe69a56b000)\n    libcrypt.so.1 => /lib64/libcrypt.so.1 (0x00007fe69a4d2000)\n    libpthread.so.0 => /lib64/libpthread.so.0 (0x00007fe69a4b1000)\n    libdl.so.2 => /lib64/libdl.so.2 (0x00007fe69a4ab000)\n    libutil.so.1 => /lib64/libutil.so.1 (0x00007fe69a4a6000)\n    libm.so.6 => /lib64/libm.so.6 (0x00007fe699e7c000)\n    libc.so.6 => /lib64/libc.so.6 (0x00007fe699cb6000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007fe69a56d000)",
    "lib.so => /full/path/to/lib.so",
    "linux-vdso.so.1 (0x00007f3b48a05000)\n    libcrypt.so.1 => /lib64/libcrypt.so.1 (0x00007f3b485c4000)\n    libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f3b48987000)\n    libdl.so.2 => /lib64/libdl.so.2 (0x00007f3b48981000)\n    libutil.so.1 => /lib64/libutil.so.1 (0x00007f3b4897c000)\n    libm.so.6 => /lib64/libm.so.6 (0x00007f3b48440000)\n    libc.so.6 => /lib64/libc.so.6 (0x00007f3b4827a000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f3b48a07000)",
    "env LD_DEBUG=files,libs LD_DEBUG_OUTPUT=/tmp/debug/vim vim /tmp/empty.txt",
    "553332:\n    553332: WARNING: Unsupported flag value(s) of 0x8000000 in DT_FLAGS_1.\n    553332:\n    553332: file=libpython3.7m.so.1.0 [0];  needed by vim [0]\n    553332: find library=libpython3.7m.so.1.0 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libpython3.7m.so.1.0\n    553332:\n    553332: file=libpython3.7m.so.1.0 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e32e8228  base: 0x00007fc6e3000000   size: 0x00000000003757b0\n    553332:     entry: 0x00007fc6e3067460  phdr: 0x00007fc6e3000040  phnum:                  9\n    553332:\n    553332:\n    553332: file=libcrypt.so.1 [0];  needed by vim [0]\n    553332: find library=libcrypt.so.1 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libcrypt.so.1\n    553332:\n    553332: file=libcrypt.so.1 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e3450ce8  base: 0x00007fc6e341e000   size: 0x000000000003b2a8\n    553332:     entry: 0x00007fc6e3420050  phdr: 0x00007fc6e341e040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libpthread.so.0 [0];  needed by vim [0]\n    553332: find library=libpthread.so.0 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libpthread.so.0\n    553332:\n    553332: file=libpthread.so.0 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e3418d80  base: 0x00007fc6e33fd000   size: 0x00000000000204c0\n    553332:     entry: 0x00007fc6e34041d0  phdr: 0x00007fc6e33fd040  phnum:                 12\n    553332:\n    553332:\n    553332: file=libdl.so.2 [0];  needed by vim [0]\n    553332: find library=libdl.so.2 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libdl.so.2\n    553332:\n    553332: file=libdl.so.2 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e33fbd70  base: 0x00007fc6e33f7000   size: 0x0000000000005130\n    553332:     entry: 0x00007fc6e33f8270  phdr: 0x00007fc6e33f7040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libutil.so.1 [0];  needed by vim [0]\n    553332: find library=libutil.so.1 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libutil.so.1\n    553332:\n    553332: file=libutil.so.1 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e33f5db8  base: 0x00007fc6e33f2000   size: 0x0000000000004110\n    553332:     entry: 0x00007fc6e33f33f0  phdr: 0x00007fc6e33f2040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libm.so.6 [0];  needed by vim [0]\n    553332: find library=libm.so.6 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libm.so.6\n    553332:\n    553332: file=libm.so.6 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e2ffed78  base: 0x00007fc6e2e7c000   size: 0x0000000000183140\n    553332:     entry: 0x00007fc6e2e89490  phdr: 0x00007fc6e2e7c040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libselinux.so.1 [0];  needed by vim [0]\n    553332: find library=libselinux.so.1 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libselinux.so.1\n    553332:\n    553332: file=libselinux.so.1 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e33ec710  base: 0x00007fc6e33c3000   size: 0x000000000002c5f0\n    553332:     entry: 0x00007fc6e33cb830  phdr: 0x00007fc6e33c3040  phnum:                 11\n    553332:\n    553332:\n    553332: file=libtinfo.so.6 [0];  needed by vim [0]\n    553332: find library=libtinfo.so.6 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libtinfo.so.6\n    553332:\n    553332: file=libtinfo.so.6 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e33c1808  base: 0x00007fc6e3394000   size: 0x000000000002e980\n    553332:     entry: 0x00007fc6e33a33d0  phdr: 0x00007fc6e3394040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libacl.so.1 [0];  needed by vim [0]\n    553332: find library=libacl.so.1 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libacl.so.1\n    553332:\n    553332: file=libacl.so.1 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e3392be0  base: 0x00007fc6e3389000   size: 0x000000000000a080\n    553332:     entry: 0x00007fc6e338b3a0  phdr: 0x00007fc6e3389040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libgpm.so.2 [0];  needed by vim [0]\n    553332: find library=libgpm.so.2 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libgpm.so.2\n    553332:\n    553332: file=libgpm.so.2 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e3387b48  base: 0x00007fc6e3381000   size: 0x0000000000007460\n    553332:     entry: 0x00007fc6e33833c0  phdr: 0x00007fc6e3381040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libc.so.6 [0];  needed by vim [0]\n    553332: find library=libc.so.6 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libc.so.6\n    553332:\n    553332: file=libc.so.6 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e2e75b60  base: 0x00007fc6e2cb6000   size: 0x00000000001c57c0\n    553332:     entry: 0x00007fc6e2cda520  phdr: 0x00007fc6e2cb6040  phnum:                 13\n    553332:\n    553332:\n    553332: file=libpcre2-8.so.0 [0];  needed by /lib64/libselinux.so.1 [0]\n    553332: find library=libpcre2-8.so.0 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libpcre2-8.so.0\n    553332:\n    553332: file=libpcre2-8.so.0 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e2cb4c88  base: 0x00007fc6e2c27000   size: 0x000000000008e228\n    553332:     entry: 0x00007fc6e2c29490  phdr: 0x00007fc6e2c27040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libattr.so.1 [0];  needed by /lib64/libacl.so.1 [0]\n    553332: find library=libattr.so.1 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libattr.so.1\n    553332:\n    553332: file=libattr.so.1 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e337dc68  base: 0x00007fc6e3377000   size: 0x0000000000007010\n    553332:     entry: 0x00007fc6e33792a0  phdr: 0x00007fc6e3377040  phnum:                 10\n    553332:\n    553332:\n    553332: calling init: /lib64/libpthread.so.0\n    553332:\n    553332:\n    553332: calling init: /lib64/libc.so.6\n    553332:\n    553332:\n    553332: calling init: /lib64/libattr.so.1\n    553332:\n    553332:\n    553332: calling init: /lib64/libpcre2-8.so.0\n    553332:\n    553332:\n    553332: calling init: /lib64/libgpm.so.2\n    553332:\n    553332:\n    553332: calling init: /lib64/libacl.so.1\n    553332:\n    553332:\n    553332: calling init: /lib64/libtinfo.so.6\n    553332:\n    553332:\n    553332: calling init: /lib64/libdl.so.2\n    553332:\n    553332:\n    553332: calling init: /lib64/libselinux.so.1\n    553332:\n    553332:\n    553332: calling init: /lib64/libm.so.6\n    553332:\n    553332:\n    553332: calling init: /lib64/libutil.so.1\n    553332:\n    553332:\n    553332: calling init: /lib64/libcrypt.so.1\n    553332:\n    553332:\n    553332: calling init: /lib64/libpython3.7m.so.1.0\n    553332:\n    553332:\n    553332: initialize program: vim\n    553332:\n    553332:\n    553332: transferring control: vim\n    553332:\n    553332:\n    553332: file=libperl.so [0];  dynamically loaded by vim [0]\n    553332: find library=libperl.so [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libperl.so\n    553332:\n    553332: file=libperl.so [0];  generating link map\n    553332:   dynamic: 0x00007fc6d5b183c0  base: 0x00007fc6d5800000   size: 0x0000000000322e88\n    553332:     entry: 0x00007fc6d5843130  phdr: 0x00007fc6d5800040  phnum:                 10\n    553332:\n    553332:\n    553332: file=libresolv.so.2 [0];  needed by /lib64/libperl.so [0]\n    553332: find library=libresolv.so.2 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libresolv.so.2\n    553332:\n    553332: file=libresolv.so.2 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e2c20d88  base: 0x00007fc6e2c0a000   size: 0x0000000000019a80\n    553332:     entry: 0x00007fc6e2c0e710  phdr: 0x00007fc6e2c0a040  phnum:                 10\n    553332:\n    553332:\n    553332: calling init: /lib64/libresolv.so.2\n    553332:\n    553332:\n    553332: calling init: /lib64/libperl.so\n    553332:\n    553332: opening file=/lib64/libperl.so [0]; direct_opencount=1\n    553332:\n    553332:\n    553332: file=libnss_files.so.2 [0];  dynamically loaded by /lib64/libc.so.6 [0]\n    553332: find library=libnss_files.so.2 [0]; searching\n    553332:  search cache=/etc/ld.so.cache\n    553332:   trying file=/lib64/libnss_files.so.2\n    553332:\n    553332: file=libnss_files.so.2 [0];  generating link map\n    553332:   dynamic: 0x00007fc6e2c02d98  base: 0x00007fc6e2bf5000   size: 0x0000000000014758\n    553332:     entry: 0x00007fc6e2bf85f0  phdr: 0x00007fc6e2bf5040  phnum:                 10\n    553332:\n    553332:\n    553332: calling init: /lib64/libnss_files.so.2\n    553332:\n    553332: opening file=/lib64/libnss_files.so.2 [0]; direct_opencount=1\n    553332:\n    553332:\n    553332: calling fini: /lib64/libperl.so [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libresolv.so.2 [0]\n    553332:\n    553332:\n    553332: file=/lib64/libperl.so [0];  destroying link map\n    553332:\n    553332: file=/lib64/libresolv.so.2 [0];  destroying link map\n    553332:\n    553332: calling fini: vim [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libpython3.7m.so.1.0 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libcrypt.so.1 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libutil.so.1 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libm.so.6 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libselinux.so.1 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libdl.so.2 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libtinfo.so.6 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libacl.so.1 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libgpm.so.2 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libpcre2-8.so.0 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libpthread.so.0 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libattr.so.1 [0]\n    553332:\n    553332:\n    553332: calling fini: /lib64/libnss_files.so.2 [0]\n    553332:",
    "5614cff3e000-5614cff9c000 r--p 00000000 09:00 1478195                    /usr/bin/vim\n5614cff9c000-5614d01ab000 r-xp 0005e000 09:00 1478195                    /usr/bin/vim\n5614d01ab000-5614d021a000 r--p 0026d000 09:00 1478195                    /usr/bin/vim\n5614d021b000-5614d022a000 r--p 002dc000 09:00 1478195                    /usr/bin/vim\n5614d022a000-5614d0247000 rw-p 002eb000 09:00 1478195                    /usr/bin/vim\n5614d0247000-5614d0255000 rw-p 00000000 00:00 0\n56150a004000-56150a2e0000 rw-p 00000000 00:00 0                          [heap]\n7f3d9ea00000-7f3d9ea3a000 r--p 00000000 09:00 1186363                    /usr/lib64/libperl.so.5.28.2\n7f3d9ea3a000-7f3d9eb9e000 r-xp 0003a000 09:00 1186363                    /usr/lib64/libperl.so.5.28.2\n7f3d9eb9e000-7f3d9ed10000 r--p 0019e000 09:00 1186363                    /usr/lib64/libperl.so.5.28.2\n7f3d9ed10000-7f3d9ed1b000 r--p 0030f000 09:00 1186363                    /usr/lib64/libperl.so.5.28.2\n7f3d9ed1b000-7f3d9ed1d000 rw-p 0031a000 09:00 1186363                    /usr/lib64/libperl.so.5.28.2\n7f3d9ed1d000-7f3d9ed23000 rw-p 00000000 00:00 0\n7f3d9ee00000-7f3dabdaa000 r--p 00000000 09:00 1445291                    /usr/lib/locale/locale-archive\n7f3dabf2a000-7f3dabf2d000 r--p 00000000 09:00 1211625                    /usr/lib64/libnss_files-2.28.so\n7f3dabf2d000-7f3dabf34000 r-xp 00003000 09:00 1211625                    /usr/lib64/libnss_files-2.28.so\n7f3dabf34000-7f3dabf36000 r--p 0000a000 09:00 1211625                    /usr/lib64/libnss_files-2.28.so\n7f3dabf36000-7f3dabf37000 ---p 0000c000 09:00 1211625                    /usr/lib64/libnss_files-2.28.so\n7f3dabf37000-7f3dabf38000 r--p 0000c000 09:00 1211625                    /usr/lib64/libnss_files-2.28.so\n7f3dabf38000-7f3dabf39000 rw-p 0000d000 09:00 1211625                    /usr/lib64/libnss_files-2.28.so\n7f3dabf39000-7f3dabf3f000 rw-p 00000000 00:00 0\n7f3dabf3f000-7f3dabf43000 r--p 00000000 09:00 1218611                    /usr/lib64/libresolv-2.28.so\n7f3dabf43000-7f3dabf50000 r-xp 00004000 09:00 1218611                    /usr/lib64/libresolv-2.28.so\n7f3dabf50000-7f3dabf54000 r--p 00011000 09:00 1218611                    /usr/lib64/libresolv-2.28.so\n7f3dabf54000-7f3dabf55000 ---p 00015000 09:00 1218611                    /usr/lib64/libresolv-2.28.so\n7f3dabf55000-7f3dabf56000 r--p 00015000 09:00 1218611                    /usr/lib64/libresolv-2.28.so\n7f3dabf56000-7f3dabf57000 rw-p 00016000 09:00 1218611                    /usr/lib64/libresolv-2.28.so\n7f3dabf57000-7f3dabf5c000 rw-p 00000000 00:00 0\n7f3dabf5c000-7f3dabf5e000 r--p 00000000 09:00 1214599                    /usr/lib64/libattr.so.1.1.2448\n7f3dabf5e000-7f3dabf61000 r-xp 00002000 09:00 1214599                    /usr/lib64/libattr.so.1.1.2448\n7f3dabf61000-7f3dabf62000 r--p 00005000 09:00 1214599                    /usr/lib64/libattr.so.1.1.2448\n7f3dabf62000-7f3dabf63000 r--p 00005000 09:00 1214599                    /usr/lib64/libattr.so.1.1.2448\n7f3dabf63000-7f3dabf66000 rw-p 00000000 00:00 0\n7f3dabf66000-7f3dabf68000 r--p 00000000 09:00 1252280                    /usr/lib64/libpcre2-8.so.0.8.0\n7f3dabf68000-7f3dabfcb000 r-xp 00002000 09:00 1252280                    /usr/lib64/libpcre2-8.so.0.8.0\n7f3dabfcb000-7f3dabff2000 r--p 00065000 09:00 1252280                    /usr/lib64/libpcre2-8.so.0.8.0\n7f3dabff2000-7f3dabff3000 ---p 0008c000 09:00 1252280                    /usr/lib64/libpcre2-8.so.0.8.0\n7f3dabff3000-7f3dabff4000 r--p 0008c000 09:00 1252280                    /usr/lib64/libpcre2-8.so.0.8.0\n7f3dabff4000-7f3dabff5000 rw-p 0008d000 09:00 1252280                    /usr/lib64/libpcre2-8.so.0.8.0\n7f3dabff5000-7f3dac017000 r--p 00000000 09:00 1202975                    /usr/lib64/libc-2.28.so\n7f3dac017000-7f3dac164000 r-xp 00022000 09:00 1202975                    /usr/lib64/libc-2.28.so\n7f3dac164000-7f3dac1b0000 r--p 0016f000 09:00 1202975                    /usr/lib64/libc-2.28.so\n7f3dac1b0000-7f3dac1b1000 ---p 001bb000 09:00 1202975                    /usr/lib64/libc-2.28.so\n7f3dac1b1000-7f3dac1b5000 r--p 001bb000 09:00 1202975                    /usr/lib64/libc-2.28.so\n7f3dac1b5000-7f3dac1b7000 rw-p 001bf000 09:00 1202975                    /usr/lib64/libc-2.28.so\n7f3dac1b7000-7f3dac1bb000 rw-p 00000000 00:00 0\n7f3dac1bb000-7f3dac1bd000 r--p 00000000 09:00 1225486                    /usr/lib64/libgpm.so.2.1.0\n7f3dac1bd000-7f3dac1c0000 r-xp 00002000 09:00 1225486                    /usr/lib64/libgpm.so.2.1.0\n7f3dac1c0000-7f3dac1c1000 r--p 00005000 09:00 1225486                    /usr/lib64/libgpm.so.2.1.0\n7f3dac1c1000-7f3dac1c2000 r--p 00005000 09:00 1225486                    /usr/lib64/libgpm.so.2.1.0\n7f3dac1c2000-7f3dac1c3000 rw-p 00006000 09:00 1225486                    /usr/lib64/libgpm.so.2.1.0\n7f3dac1c3000-7f3dac1d1000 r--p 00000000 09:00 1222242                    /usr/lib64/libtinfo.so.6.1\n7f3dac1d1000-7f3dac1e0000 r-xp 0000e000 09:00 1222242                    /usr/lib64/libtinfo.so.6.1\n7f3dac1e0000-7f3dac1ed000 r--p 0001d000 09:00 1222242                    /usr/lib64/libtinfo.so.6.1\n7f3dac1ed000-7f3dac1f1000 r--p 00029000 09:00 1222242                    /usr/lib64/libtinfo.so.6.1\n7f3dac1f1000-7f3dac1f2000 rw-p 0002d000 09:00 1222242                    /usr/lib64/libtinfo.so.6.1\n7f3dac1f2000-7f3dac1f9000 r--p 00000000 09:00 1222213                    /usr/lib64/libselinux.so.1\n7f3dac1f9000-7f3dac213000 r-xp 00007000 09:00 1222213                    /usr/lib64/libselinux.so.1\n7f3dac213000-7f3dac21a000 r--p 00021000 09:00 1222213                    /usr/lib64/libselinux.so.1\n7f3dac21a000-7f3dac21b000 ---p 00028000 09:00 1222213                    /usr/lib64/libselinux.so.1\n7f3dac21b000-7f3dac21c000 r--p 00028000 09:00 1222213                    /usr/lib64/libselinux.so.1\n7f3dac21c000-7f3dac21d000 rw-p 00029000 09:00 1222213                    /usr/lib64/libselinux.so.1\n7f3dac21d000-7f3dac21f000 rw-p 00000000 00:00 0\n7f3dac21f000-7f3dac22c000 r--p 00000000 09:00 1203016                    /usr/lib64/libm-2.28.so\n7f3dac22c000-7f3dac2cc000 r-xp 0000d000 09:00 1203016                    /usr/lib64/libm-2.28.so\n7f3dac2cc000-7f3dac3a1000 r--p 000ad000 09:00 1203016                    /usr/lib64/libm-2.28.so\n7f3dac3a1000-7f3dac3a2000 r--p 00181000 09:00 1203016                    /usr/lib64/libm-2.28.so\n7f3dac3a2000-7f3dac3a3000 rw-p 00182000 09:00 1203016                    /usr/lib64/libm-2.28.so\n7f3dac3a3000-7f3dac3a9000 r--p 00000000 09:00 1211978                    /usr/lib64/libpthread-2.28.so\n7f3dac3a9000-7f3dac3b8000 r-xp 00006000 09:00 1211978                    /usr/lib64/libpthread-2.28.so\n7f3dac3b8000-7f3dac3be000 r--p 00015000 09:00 1211978                    /usr/lib64/libpthread-2.28.so\n7f3dac3be000-7f3dac3bf000 r--p 0001a000 09:00 1211978                    /usr/lib64/libpthread-2.28.so\n7f3dac3bf000-7f3dac3c0000 rw-p 0001b000 09:00 1211978                    /usr/lib64/libpthread-2.28.so\n7f3dac3c0000-7f3dac3c4000 rw-p 00000000 00:00 0\n7f3dac3c4000-7f3dac3c6000 r--p 00000000 09:00 1185341                    /usr/lib64/libcrypt.so.1.1.0\n7f3dac3c6000-7f3dac3db000 r-xp 00002000 09:00 1185341                    /usr/lib64/libcrypt.so.1.1.0\n7f3dac3db000-7f3dac3f5000 r--p 00017000 09:00 1185341                    /usr/lib64/libcrypt.so.1.1.0\n7f3dac3f5000-7f3dac3f6000 ---p 00031000 09:00 1185341                    /usr/lib64/libcrypt.so.1.1.0\n7f3dac3f6000-7f3dac3f7000 r--p 00031000 09:00 1185341                    /usr/lib64/libcrypt.so.1.1.0\n7f3dac3f7000-7f3dac400000 rw-p 00000000 00:00 0\n7f3dac400000-7f3dac461000 r--p 00000000 09:00 1186746                    /usr/lib64/libpython3.7m.so.1.0\n7f3dac461000-7f3dac63c000 r-xp 00061000 09:00 1186746                    /usr/lib64/libpython3.7m.so.1.0\n7f3dac63c000-7f3dac6e5000 r--p 0023c000 09:00 1186746                    /usr/lib64/libpython3.7m.so.1.0\n7f3dac6e5000-7f3dac6e6000 ---p 002e5000 09:00 1186746                    /usr/lib64/libpython3.7m.so.1.0\n7f3dac6e6000-7f3dac6ec000 r--p 002e5000 09:00 1186746                    /usr/lib64/libpython3.7m.so.1.0\n7f3dac6ec000-7f3dac755000 rw-p 002eb000 09:00 1186746                    /usr/lib64/libpython3.7m.so.1.0\n7f3dac755000-7f3dac776000 rw-p 00000000 00:00 0\n7f3dac776000-7f3dac778000 r--p 00000000 09:00 1224365                    /usr/lib64/libacl.so.1.1.2253\n7f3dac778000-7f3dac77d000 r-xp 00002000 09:00 1224365                    /usr/lib64/libacl.so.1.1.2253\n7f3dac77d000-7f3dac77f000 r--p 00007000 09:00 1224365                    /usr/lib64/libacl.so.1.1.2253\n7f3dac77f000-7f3dac780000 r--p 00008000 09:00 1224365                    /usr/lib64/libacl.so.1.1.2253\n7f3dac780000-7f3dac781000 rw-p 00009000 09:00 1224365                    /usr/lib64/libacl.so.1.1.2253\n7f3dac781000-7f3dac783000 rw-p 00000000 00:00 0\n7f3dac783000-7f3dac784000 r--p 00000000 09:00 1203746                    /usr/lib64/libutil-2.28.so\n7f3dac784000-7f3dac785000 r-xp 00001000 09:00 1203746                    /usr/lib64/libutil-2.28.so\n7f3dac785000-7f3dac786000 r--p 00002000 09:00 1203746                    /usr/lib64/libutil-2.28.so\n7f3dac786000-7f3dac787000 r--p 00002000 09:00 1203746                    /usr/lib64/libutil-2.28.so\n7f3dac787000-7f3dac788000 rw-p 00003000 09:00 1203746                    /usr/lib64/libutil-2.28.so\n7f3dac788000-7f3dac789000 r--p 00000000 09:00 1203007                    /usr/lib64/libdl-2.28.so\n7f3dac789000-7f3dac78b000 r-xp 00001000 09:00 1203007                    /usr/lib64/libdl-2.28.so\n7f3dac78b000-7f3dac78c000 r--p 00003000 09:00 1203007                    /usr/lib64/libdl-2.28.so\n7f3dac78c000-7f3dac78d000 r--p 00003000 09:00 1203007                    /usr/lib64/libdl-2.28.so\n7f3dac78d000-7f3dac78e000 rw-p 00004000 09:00 1203007                    /usr/lib64/libdl-2.28.so\n7f3dac78e000-7f3dac790000 rw-p 00000000 00:00 0\n7f3dac7e7000-7f3dac7eb000 r--p 00000000 00:00 0                          [vvar]\n7f3dac7eb000-7f3dac7ed000 r-xp 00000000 00:00 0                          [vdso]\n7f3dac7ed000-7f3dac7ee000 r--p 00000000 09:00 1182318                    /usr/lib64/ld-2.28.so\n7f3dac7ee000-7f3dac80e000 r-xp 00001000 09:00 1182318                    /usr/lib64/ld-2.28.so\n7f3dac80e000-7f3dac816000 r--p 00021000 09:00 1182318                    /usr/lib64/ld-2.28.so\n7f3dac816000-7f3dac817000 r--p 00028000 09:00 1182318                    /usr/lib64/ld-2.28.so\n7f3dac817000-7f3dac818000 rw-p 00029000 09:00 1182318                    /usr/lib64/ld-2.28.so\n7f3dac818000-7f3dac819000 rw-p 00000000 00:00 0\n7fffe8ca9000-7fffe8cca000 rw-p 00000000 00:00 0                          [stack]\nffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]",
    "// monitor.c -- monitor a program for dlopen calls\n\n#define _GNU_SOURCE\n#include <stdio.h>\n#include <stdlib.h>\n#include <dlfcn.h>\n\nvoid *\ndlopen(const char *file,int flags)\n{\n\n    static void *(*real_dlopen)(const char *filename, int flags) = NULL;\n    do {\n        if (real_dlopen != NULL)\n            break;\n\n        real_dlopen = dlsym(RTLD_NEXT,\"dlopen\");\n        if (real_dlopen != NULL)\n            break;\n\n        fprintf(stderr,\"dlopen: unable to locate real dlopen -- %s\\n\",\n            dlerror());\n        exit(1);\n    } while (0);\n\n    fprintf(stderr,\"dlopen: FAKE file='%s' flags=%8.8X\\n\",file,flags);\n\n    void *ptr = real_dlopen(file,flags);\n\n#if 0\n    monitor_maps(getpid(),file);\n#endif\n\n    return ptr;\n}",
    "// target.c -- main program that uses dlopen\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <dlfcn.h>\n\nint\nmain(void)\n{\n\n    void *dlptr = dlopen(\"./other.so\",RTLD_NOW | RTLD_GLOBAL);\n    if (dlptr == NULL) {\n        fprintf(stderr,\"target: dlopen fail -- %s\\n\",dlerror());\n        exit(1);\n    }\n\n    void (*symptr)(void) = dlsym(dlptr,\"other\");\n    if (symptr == NULL) {\n        fprintf(stderr,\"target: dlsym fail -- %s\\n\",dlerror());\n        exit(1);\n    }\n\n    symptr();\n\n    dlclose(dlptr);\n\n    return 0;\n}",
    "// other.c -- random shared library\n\n#include <stdio.h>\n\nvoid\nother(void)\n{\n\n    fprintf(stderr,\"other: i am other\\n\");\n}",
    "#!/usr/bin/perl\n# build -- build and run test\n\nmaster(@ARGV);\nexit(0);\n\nsub master\n{\n    my(@argv) = @_;\n\n    foreach $opt (@argv) {\n        $opt_debug = 1\n            if ($opt eq \"-d\");\n    }\n\n    doexec(\"gcc -c -shared -fpic monitor.c\");\n    doexec(\"gcc -o monitor.so -shared monitor.o -ldl\");\n\n    doexec(\"gcc -o target target.c -ldl\");\n    doexec(\"gcc -o other.so other.c -fPIC -shared\");\n\n    if ($opt_debug) {\n        push(@env,\"LD_DEBUG=all\");\n        push(@env,\"LD_DEBUG_OUTPUT=out/out\");\n    }\n\n    push(@env,\"LD_PRELOAD=./monitor.so\");\n\n    if ($opt_debug) {\n        rm -fr out\n        mkdir out\n    }\n\n    $env = join(\" \",@env);\n    doexec(\"env $env ./target\");\n}\n\nsub doexec\n{\n    my($cmd) = @_;\n\n    printf(STDERR \"doexec: EXEC %s\\n\",$cmd);\n    system($cmd);\n\n    $code = $? >> 8;\n    exit($code) if ($code);\n}",
    "doexec: EXEC gcc -c -shared -fpic monitor.c\ndoexec: EXEC gcc -o monitor.so -shared monitor.o -ldl\ndoexec: EXEC gcc -o target target.c -ldl\ndoexec: EXEC gcc -o other.so other.c -fPIC -shared\ndoexec: EXEC env LD_PRELOAD=./monitor.so ./target\ndlopen: FAKE file='./other.so' flags=00000102\nother: i am other",
    "hello world\\0foo\\0bar\\0",
    "hello world\\0foo\\0bar\\0\n01234567890 1234 5678 9",
    "$(PROG1): $(OBJ1)\n    $(CC) $(CFLAGS) -o $(PROG1) $(OBJ1)\n^^^ \nhere",
    ".global main                                                        // 1 \nmain:                                                                   // 2 \n    stp     x21, x30, [sp, -16]!    // push onto stack                  // 3 \n    mov     x21, x1                 // argc -> x0, argv -> x1           // 4 \n                                                                        // 5 \ntop:                                                                    // 6 \n    ldr     x0, [x21], 8            // argv++, old value in x0          // 7 \n    cbz     x0, bottom              // if *argv == NULL goto bottom     // 8 \n    bl      _puts                   // note that there is a `_`         // 9   \n    b       top                     // goto top                         // 10 \n                                                                        // 11 \nbottom:                                                                 // 12 \n    ldp     x21, x30, [sp], 16      // pop from stack                   // 13 \n    mov     x0, xzr                 // return 0                         // 14 \n    ret                                                                 // 15 \n                                                                        // 16 \n    .end",
    "bl    _puts  // with the addition of the leading `_`",
    "weak_alias(stub_name,default_name)",
    "extern __typeof (default_name) stub_name \\\n__attribute__ ((weak, alias (\"default_name\"))) \\\n__attribute__ ((__copy__ (default_name)));",
    "extern __typeof (_IO_puts) puts \\\n__attribute__ ((weak, alias (\"_IO_puts\"))) \\\n__attribute__ ((__copy__ (_IO_puts)));",
    "$ readelf --syms --wide /usr/lib/x86_64-linux-gnu/libc.a | egrep 'FUNC.*WEAK.*DEFAULT'  | wc -l\n1015",
    "$ readelf --dyn-syms --wide /usr/lib/x86_64-linux-gnu/libc.so.6 | egrep 'FUNC.*WEAK.*DEFAULT'  | wc -l\n749",
    "extern __typeof (__new_fclose) fclose \\\n    __attribute__ ((weak, alias (\"__new_fclose\"))) \\\n    __attribute__ ((__copy__ (__new_fclose)));;",
    "__asm__ (\".symver \" \"__new_fclose\" \",\" \"fclose\" \"@@\" \"GLIBC_2.2.5\");",
    "BreakBeforeBinaryOperators: NonAssignment\nAlignEscapedNewlines: Right\nAllowShortIfStatementsOnASingleLine: false\nColumnLimit: 0 # Disable the column limit for more aggressive breaking\nSortIncludes: false\nIndentPPDirectives: AfterHash",
    "#define FNV_PRIME_32 16777619u\n#define FNV_OFFSET_32 2166136261u\n\nint hash(char *key, int len)\n{\n    unsigned int h = FNV_OFFSET_32;\n    for(int i = 0; i < len; i++) {\n        h ^= (unsigned char)key[i];\n        h *= FNV_PRIME_32;\n    }\n\n    unsigned int index = h % 1000000;\n\n    if(index < 100000) {\n        index += 100000;\n    }\n    return index;\n}",
    "#include <openssl/sha.h>\n\nint hash(char *key, int len)\n{\n    unsigned char digest[SHA512_DIGEST_LENGTH]; // 64 bytes\n    SHA512((unsigned char*)key, len, digest);\n\n    unsigned long long hash64 = 0;\n    for (int i = 0; i < 8; i++) {\n        hash64 = (hash64 << 8) | digest[i];\n    }\n\n    unsigned int index = (unsigned int)(hash64 % 1000000ULL);\n    if(index < 100000)\n        index += 100000;\n\n    return index;\n}",
    "hash(65):\n    take square;      // 4225\n    take middle part; //  22\n    returns 22",
    "int hash(uint8 n) {\n    uint16 sq = n * n;\n    unint8 middle = sq >>> 4;\n    return middle;\n}",
    "for (int i = 0; i < len; i++) {\n        unsigned int val = (unsigned int)key[i];\n        sum += ((sum << 7) | val) ^ (sum & 0x7fu);\n    }",
    "#include <stdlib.h>\n...\nstruct List* myList = (struct List*)malloc(sizeof(struct List));\nmemset(myList, 0, sizeof(*myList));\n// or you can skip the #include and memset and do\nmyList->head = NULL;\nmyList->tail = NULL;",
    "struct Lnode *currentNode;\ncurrentNode = x->head;",
    "__m256 xf = _mm256_castsi256_ps (x); // Reinterpret is zero latency.\n__m128 xf0 = _mm256_castps256_ps128(xf) // Get low 128 bit is zero latency.\n__m128 xf1 = _mm256_extractf128_ps(xf, 1) // Get high 128 bit. Skylake: Latency=3,  Throughput=1.\n__m128 yf = _mm_shuffle_ps(yf0, yf1, _MM_SHUFFLE(2, 0, 2, 0)); // Unzip even. Skylake: Latency=1,  Throughput=0.5.\n__m128i y = _mm_castps_si128(yf); // Reinterpret is zero latency.",
    "\"permissions\":  \"[{\"emailAddress\":\"user1@domain.com\",\"role\":\"commenter\"} \u2026 ]\"",
    "cJSON json_permissions_string = cJSON_GetObjectItem(json, \"permissions\");\nif (!json_permissions_string || !cJSON_IsString(json_permissions_string)) {\n    // error handling\n    return;\n}\n\ncJSONpermissions_array = cJSON_Parse(json_permissions_string->valuestring);\nif (!permissions_array) {\n    // error handling\n    return;\n}\n\nint npermissions = cJSON_GetArraySize(permissions_array);\nprintf(\"number of permissions: %d\\n\", npermissions);\n\nfor (int i = 0; i < npermissions; i++) {\n    cJSON *perm_item = cJSON_GetArrayItem(permissions_array, i);\n    // process perm_item, e.g. cJSON_GetObjectItem(perm_item, \"emailAddress\"), etc.\n}\n\ncJSON_Delete(permissions_array);",
    "\"permissions\": [\n   { \"emailAddress\": \"user1@domain.com\", \"role\": \"commenter\" },\n   { \"emailAddress\": \"user2@domain.com\", \"role\": \"reader\" }\n]",
    "uint32_t temp = (((uint32_t)*address) << 16) | (*address);\n*address = (unsigned int)(temp >> num_rotates);",
    "int a = 3;\nint b = 3;\nint ExpectedTestResult = TRUE;\nif ((a == b) == ExpectedTestResult)\n    printf(\"No problem found.\\n\");\nelse\n    printf(\"Problem found.\\n\");",
    "pointer[4]",
    "*(pointer + 4)",
    "int main()\n{\n    int *pointer = malloc(sizeof(int) * 5);\n    int *orig = pointer;\n    pointer++;\n    pointer++;\n    pointer++;\n    pointer++;\n    *pointer = 5;\n\n    printf(\"%i\", *pointer);\n    free(orig);\n\n    return 0;\n}",
    "int main()\n{\n    int *pointer = malloc(sizeof(int) * 5);\n    int *orig = pointer;\n    pointer+=4;\n    *pointer = 5;\n\n    printf(\"%i\", *pointer);\n    free(orig);\n\n    return 0;\n}",
    "int main()\n{\n    int *pointer = malloc(sizeof(int) * 5);\n    pointer[4] = 5;\n\n    printf(\"%i\", pointer[4]);\n    free(pointer);\n\n    return 0;\n}",
    "char * kbfr=kmalloc(count,GFP_KERNEL);\nkbfr[strlen(kbfr)-1]='\\0';\nint ispeed =0;\ncopy_from_user(kbfr,buff,count);\nif(kbfr==NULL)\n    return -ENOMEM;",
    "#include <fortify-string.h>\n\nchar * kbfr=kmalloc(count,GFP_KERNEL);\nint ispeed =0;\nif(kbfr==NULL)       // Check before copy\n    return -ENOMEM;\ncopy_from_user(kbfr,buff,count);\nint ix = strnlen(kbfr, count);\nif (ix > 0)          // check for 0\n    kbfr[ix-1] = '\\0';   // always terminate",
    "#define _POSIX_C_SOURCE 202405L\n#include <signal.h>\n\n....\n\nvoid my_chld_handler(int signo, siginfo_t *info, void *context) {\n  switch (info->si_code) {\n  case CLD_EXITED:\n  case CLD_KILLED: \n  case CLD_DUMPED:\n    break;\n  default: /* ignore TRAPPED STOPPED CONTINUED */\n    return;\n  }\n  ... handle child termination ...\n}\n\n....\nsa.sa_flags = SA_SIGINFO;\nsa.sa_sigaction = my_chld_handler;\nsigaction(SIGCHLD, &sa, NULL);\n....",
    "#include \"mock_stm32l4xx_hal_uart.h\"",
    "HAL_UART_Receive_ExpectAndReturn(&huart5, &temp, 1, BLUETOOTH_RX_TIMEOUT, HAL_OK);",
    "HAL_UART_Receive_AddCallback(your_stub_function);",
    "int some_function(void)\n{\n    int result;\n\n    if (HAL_UART_Receive(&huart5, &temp, 1, BLUETOOTH_RX_TIMEOUT) == HAL_OK)\n        result = 0;\n    else\n        result = 1;\n\n    return result;\n}",
    "#include \"unity.h\"\n#include \"mock_stm32l4xx_hal_uart.h\"\n\nvoid test_some_function_success(void)\n{\n    uint8_t dummy_buffer[1];\n\n    // We expect HAL_UART_Receive() to be called with these arguments\n    // If it is called, we will mock it and return HAL_OK to the code under test\n    HAL_UART_Receive_ExpectAndReturn(&huart5, dummy_buffer, 1, BLUETOOTH_RX_TIMEOUT, HAL_OK);\n\n    // However, we don't care what the pData argument is\n    HAL_UART_Receive_IgnoreArg_pData();\n\n    // Now call the function to test.\n    // If it doesn't call HAL_UART_Receive() the test will fail\n    int result = some_function();\n\n    // Our function should return 0 since the result was HAL_OK\n    TEST_ASSERT_EQUAL(0, result);\n}\n\nvoid test_some_function_fails(void)\n{\n    uint8_t dummy_buffer[1];\n\n    // We expect HAL_UART_Receive() to be called with these arguments\n    // If it is called, we will mock it and return HAL_ERROR to the code under test\n    HAL_UART_Receive_ExpectAndReturn(&huart5, dummy_buffer, 1, BLUETOOTH_RX_TIMEOUT, HAL_ERROR);\n\n    // However, we don't care what the pData argument is\n    HAL_UART_Receive_IgnoreArg_pData();\n\n    // Now call the function to test.\n    // If it doesn't call HAL_UART_Receive() the test will fail\n    int result = some_function();\n\n    // Our function should return 1 since the HAL function failed\n    TEST_ASSERT_EQUAL(1, result);\n}",
    "[cfati@CFATI-5510-0:e:\\Work\\Dev\\StackExchange\\StackOverflow\\q079357913]> sopr.bat\n### Set shorter prompt to better fit when pasted in StackOverflow (or other) pages ###\n\n[prompt]>\n[prompt]> :: --- Current dir ---\n[prompt]> dir /b\ncode\ndata\n\n[prompt]>\n[prompt]> :: ------ code dir ------\n[prompt]> dir /b code\napp00\nbin\ncode00.sln\nDebug\ndll00\nlibzip-win-build\nx64\nzlib-win-build\n\n[prompt]>\n[prompt]> :: --------- dll00 dir ---------\n[prompt]> dir /b code\\dll00\ndll00.vcxproj\ndll00.vcxproj.filters\ndll00.vcxproj.user\ninclude\nsrc\nWin32-Debug\nx64-Debug\n\n[prompt]>\n[prompt]> dir /b code\\dll00\\include\ndll00.hpp\n\n[prompt]>\n[prompt]> dir /b code\\dll00\\src\ndll00.cpp\n\n[prompt]>\n[prompt]> :: --------- app00 dir ---------\n[prompt]> dir /b code\\app00\napp00.vcxproj\napp00.vcxproj.filters\napp00.vcxproj.user\nsrc\nWin32-Debug\nx64-Debug\n\n[prompt]>\n[prompt]> dir /b code\\app00\\src\nmain00.cpp",
    "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.12.35527.113\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"app00\", \"app00\\app00.vcxproj\", \"{5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}\"\n    ProjectSection(ProjectDependencies) = postProject\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB} = {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}\n    EndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"dll00\", \"dll00\\dll00.vcxproj\", \"{BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}\"\n    ProjectSection(ProjectDependencies) = postProject\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA} = {B56D17BC-072B-42F3-844A-870A07AFBAAA}\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098} = {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}\n    EndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libzip-static\", \"libzip-win-build\\build-VS2022\\libzip-static\\libzip-static.vcxproj\", \"{C490F8C7-D8E8-43C9-8D09-9BC8AB705098}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libz-static\", \"zlib-win-build\\build-VS2022\\libz-static\\libz-static.vcxproj\", \"{B56D17BC-072B-42F3-844A-870A07AFBAAA}\"\nEndProject\nGlobal\n    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n        Debug|x64 = Debug|x64\n        Debug|x86 = Debug|x86\n        Release|x64 = Release|x64\n        Release|x86 = Release|x86\n    EndGlobalSection\n    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Debug|x64.ActiveCfg = Debug|x64\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Debug|x64.Build.0 = Debug|x64\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Debug|x86.ActiveCfg = Debug|Win32\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Debug|x86.Build.0 = Debug|Win32\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Release|x64.ActiveCfg = Release|x64\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Release|x64.Build.0 = Release|x64\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Release|x86.ActiveCfg = Release|Win32\n        {5C60F6F8-F3B7-4B08-9BB3-5FE6CEAA1F61}.Release|x86.Build.0 = Release|Win32\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Debug|x64.ActiveCfg = Debug|x64\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Debug|x64.Build.0 = Debug|x64\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Debug|x86.ActiveCfg = Debug|Win32\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Debug|x86.Build.0 = Debug|Win32\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Release|x64.ActiveCfg = Release|x64\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Release|x64.Build.0 = Release|x64\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Release|x86.ActiveCfg = Release|Win32\n        {BD1F46B7-A799-43BC-AD53-58A2BE95ADFB}.Release|x86.Build.0 = Release|Win32\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Debug|x64.ActiveCfg = Debug|x64\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Debug|x64.Build.0 = Debug|x64\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Debug|x86.ActiveCfg = Debug|Win32\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Debug|x86.Build.0 = Debug|Win32\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Release|x64.ActiveCfg = Release|x64\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Release|x64.Build.0 = Release|x64\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Release|x86.ActiveCfg = Release|Win32\n        {C490F8C7-D8E8-43C9-8D09-9BC8AB705098}.Release|x86.Build.0 = Release|Win32\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Debug|x64.ActiveCfg = Debug|x64\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Debug|x64.Build.0 = Debug|x64\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Debug|x86.ActiveCfg = Debug|Win32\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Debug|x86.Build.0 = Debug|Win32\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Release|x64.ActiveCfg = Release|x64\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Release|x64.Build.0 = Release|x64\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Release|x86.ActiveCfg = Release|Win32\n        {B56D17BC-072B-42F3-844A-870A07AFBAAA}.Release|x86.Build.0 = Release|Win32\n    EndGlobalSection\n    GlobalSection(SolutionProperties) = preSolution\n        HideSolutionNode = FALSE\n    EndGlobalSection\nEndGlobal",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <VCProjectVersion>17.0</VCProjectVersion>\n    <Keyword>Win32Proj</Keyword>\n    <ProjectGuid>{bd1f46b7-a799-43bc-ad53-58a2be95adfb}</ProjectGuid>\n    <RootNamespace>dll00</RootNamespace>\n    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <UseDebugLibraries>true</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <UseDebugLibraries>false</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <UseDebugLibraries>true</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <UseDebugLibraries>false</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Label=\"Shared\">\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <TargetName>lib$(ProjectName)</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <TargetName>lib$(ProjectName)</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n    <TargetName>lib$(ProjectName)</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n    <TargetName>lib$(ProjectName)</TargetName>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include;$(SolutionDir)libzip-win-build\\lib;$(SolutionDir)libzip-win-build\\win32</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalLibraryDirectories>$(SolutionDir)$(Configuration)\\</AdditionalLibraryDirectories>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libzip-static.lib;libz-static.lib;%(AdditionalDependencies)</AdditionalDependencies>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include;$(SolutionDir)libzip-win-build\\lib;$(SolutionDir)libzip-win-build\\win32</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OptimizeReferences>true</OptimizeReferences>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalLibraryDirectories>$(SolutionDir)$(Configuration)\\</AdditionalLibraryDirectories>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libzip-static.lib;libz-static.lib;%(AdditionalDependencies)</AdditionalDependencies>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include;$(SolutionDir)libzip-win-build\\lib;$(SolutionDir)libzip-win-build\\win32</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalLibraryDirectories>$(SolutionDir)$(Platform)\\$(Configuration)\\</AdditionalLibraryDirectories>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libzip-static.lib;libz-static.lib;%(AdditionalDependencies)</AdditionalDependencies>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include;$(SolutionDir)libzip-win-build\\lib;$(SolutionDir)libzip-win-build\\win32</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OptimizeReferences>true</OptimizeReferences>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalLibraryDirectories>$(SolutionDir)$(Platform)\\$(Configuration)\\</AdditionalLibraryDirectories>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libzip-static.lib;libz-static.lib;%(AdditionalDependencies)</AdditionalDependencies>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"src\\dll00.cpp\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"include\\dll00.hpp\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup>\n    <Filter Include=\"Source Files\">\n      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\n      <Extensions>cpp;c;cc;cxx;c++;cppm;ixx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\n    </Filter>\n    <Filter Include=\"Header Files\">\n      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\n      <Extensions>h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd</Extensions>\n    </Filter>\n    <Filter Include=\"Resource Files\">\n      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\n      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\n    </Filter>\n  </ItemGroup>\n  <ItemGroup>\n    <ClCompile Include=\"src\\dll00.cpp\">\n      <Filter>Source Files</Filter>\n    </ClCompile>\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"include\\dll00.hpp\">\n      <Filter>Header Files</Filter>\n    </ClInclude>\n  </ItemGroup>\n</Project>",
    "#pragma once\n\n#include <string>\n\n#if defined(_WIN32)\n#  define F_OK 0\n#  include <io.h>\n#else\n#  define _access access\n#  include <unistd.h>\n#endif\n\n#if defined(_WIN32)\n#  if defined(DLL00_EXPORTS)\n#    define DLL00_EXPORT_API __declspec(dllexport)\n#  else\n#    define DLL00_EXPORT_API __declspec(dllimport)\n#  endif\n#else\n#  define DLL00_EXPORT_API\n#endif\n\n\nnamespace dll00 {\n\n#if defined(__cplusplus)\nextern \"C\" {\n#endif\n\nDLL00_EXPORT_API int zipFile(const std::string &archive, const std::string &file);\n\n#if defined(__cplusplus)\n}\n#endif\n\n}",
    "#define DLL00_EXPORTS\n#include <dll00.hpp>\n\n#include <cerrno>\n#include <cstdio>\n\n#include <zip.h>\n\n\n#define ZIP_ERROR(ERR, NAME, TXT, RET) { \\\n    zip_error_t error; \\\n    zip_error_init_with_code(&error, ERR); \\\n    fprintf(stderr, TXT \"\\nFile: [%s]\\nError: [%s]\\n\", NAME, zip_error_strerror(&error)); \\\n    zip_error_fini(&error); \\\n    return RET; \\\n}\n\nnamespace dll00 {\n\nint zipFile(const std::string& archive, const std::string& file)\n{\n    if (_access(file.c_str(), F_OK) < 0) {\n        return -1;\n    }\n    zip_t *pza = nullptr;\n    int err = 0;\n    if ((pza = zip_open(archive.c_str(), ZIP_CREATE, &err)) == nullptr) {\n        ZIP_ERROR(err, archive.c_str(), \"Could not open archve\", -1);\n    }\n\n    zip_source_t *pzs = nullptr;\n    zip_error_t zerr;\n    if ((pzs = zip_source_file_create(file.c_str(), 0, ZIP_LENGTH_TO_END, &zerr)) == nullptr) {\n        zip_close(pza);\n        ZIP_ERROR(zerr.zip_err, file.c_str(), \"Could not open file\", -1);\n    }\n    zip_int64_t idx = -1;\n    if ((idx = zip_file_add(pza, file.c_str(), pzs, ZIP_FL_OVERWRITE | ZIP_FL_ENC_UTF_8)) < 0) {\n        zip_source_free(pzs);\n        zip_close(pza);\n        zip_error_t* pzert = zip_get_error(pza);\n        if (pzert) {\n            ZIP_ERROR(pzert->zip_err, file.c_str(), \"Could not add file to archive\", -1);\n        } else {\n            fprintf(stderr, \"Could not add file to archive\\n\");\n            return -1;\n        }\n    }\n    zip_close(pza);\n    pza = nullptr;\n    fprintf(stdout, \"Added file [%s] to archive [%s]\\n\", file.c_str(), archive.c_str());\n    return 0;\n}\n\n}",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <VCProjectVersion>17.0</VCProjectVersion>\n    <Keyword>Win32Proj</Keyword>\n    <ProjectGuid>{5c60f6f8-f3b7-4b08-9bb3-5fe6ceaa1f61}</ProjectGuid>\n    <RootNamespace>app00</RootNamespace>\n    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <UseDebugLibraries>false</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <UseDebugLibraries>true</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <UseDebugLibraries>false</UseDebugLibraries>\n    <PlatformToolset>v143</PlatformToolset>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Label=\"Shared\">\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <IntDir>$(ProjectDir)$(Platform)-$(Configuration)\\</IntDir>\n    <OutDir>$(SolutionDir)bin\\$(Platform)-$(Configuration)\\</OutDir>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OptimizeReferences>true</OptimizeReferences>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libdll00.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <AdditionalLibraryDirectories>$(OutDir)</AdditionalLibraryDirectories>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libdll00.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <AdditionalLibraryDirectories>$(OutDir)</AdditionalLibraryDirectories>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <SDLCheck>true</SDLCheck>\n      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <ConformanceMode>true</ConformanceMode>\n      <AdditionalIncludeDirectories>$(SolutionDir)dll00\\include</AdditionalIncludeDirectories>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OptimizeReferences>true</OptimizeReferences>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <AdditionalDependencies>$(CoreLibraryDependencies);libdll00.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <AdditionalLibraryDirectories>$(OutDir)</AdditionalLibraryDirectories>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"src\\main00.cpp\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup>\n    <Filter Include=\"Source Files\">\n      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\n      <Extensions>cpp;c;cc;cxx;c++;cppm;ixx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\n    </Filter>\n    <Filter Include=\"Header Files\">\n      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\n      <Extensions>h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd</Extensions>\n    </Filter>\n    <Filter Include=\"Resource Files\">\n      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\n      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\n    </Filter>\n  </ItemGroup>\n  <ItemGroup>\n    <ClCompile Include=\"src\\main00.cpp\">\n      <Filter>Source Files</Filter>\n    </ClCompile>\n  </ItemGroup>\n</Project>",
    "#include <string>\n#include <cstdio>\n\n#include <dll00.hpp>\n\n\nint main(int argc, char **argv)\n{\n    if (argc < 3) {\n        printf(\"Archive name and (existing) file name must be passed\\n\");\n        return -1;\n    }\n    if (_access(argv[1], F_OK) < 0) {\n        printf(\"Archive name not found. Creating new one\\n\");\n    }\n    int err = dll00::zipFile(argv[1], argv[2]);\n    if (err) {\n        printf(\"zipfile returned %d\\n\", err);\n    }\n    printf(\"\\nDone.\\n\\n\");\n    return 0;\n}",
    "#include <sys/mman.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n\n#define FILE_PATH \"testfile\"\n#define INITIAL_SIZE 4096\n#define EXTENDED_SIZE 8192\n\nvoid handle_error(const char *msg) {\n    perror(msg);\n    _exit(1);\n}\n\nint main() {\n    // Create or open file\n    int fd = open(FILE_PATH, O_RDWR | O_CREAT, 0666);\n    if (fd == -1) handle_error(\"open\");\n\n    // Set the initial file size\n    if(ftruncate(fd, INITIAL_SIZE) == -1) handle_error(\"ftruncate\");\n    // Map the initial region\n    void *map = mmap(NULL, INITIAL_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    if (map == MAP_FAILED) handle_error(\"mmap\");\n    // Write data to the mapped region\n    strncpy((char *)map, \"Hello,mmap!\", INITIAL_SIZE);\n    // Synchronize changes to disk\n    if (msync(map, INITIAL_SIZE, MS_SYNC) == -1) handle_error(\"msync\");\n    // Unmap the region\n    if (munmap(map, INITIAL_SIZE) == -1) handle_error(\"munmap\");\n    // Extend the file size\n    if (ftruncate(fd, EXTENDED_SIZE) == -1) handle_error(\"munmap\");\n    // Remap the file with the new size\n    map = mmap(NULL, EXTENDED_SIZE, PROT_READ | PROT_WRITE,MAP_SHARED, fd, 0);\n    if (map == MAP_FAILED) handle_error(\"mmap\");\n    // Write data to the extended region\n    strncpy((char *)map + INITIAL_SIZE, \"Extend region!\", EXTENDED_SIZE - INITIAL_SIZE);\n    // Synchronize changes to disk\n    if (msync(map, EXTENDED_SIZE, MS_SYNC) == -1) handle_error(\"msync\");\n    // cleanup\n    if (munmap(map, EXTENDED_SIZE) == -1) handle_error(\"munmap\");\n    close(fd);\n\n    printf(\"\\ntest completed sucessfully\\n\");\n    return 0;\n}",
    "$ time ./msync_mmap_test\n\ntest completed sucessfully\n\nreal    0m0,015s\nuser    0m0,003s\nsys 0m0,000s",
    "#define _GNU_SOURCE\n\n\n#include <sys/mman.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdio.h>\n\nint main()\n{\n    int fd = open(\"testfile_mmap_test\", O_RDWR | O_CREAT, 0666);\n    if(fd == -1){\n        perror(\"open\");\n        return 1;\n    }\n\n    size_t size = 4096;\n    ftruncate(fd, size);\n\n    void *map = mmap(NULL, size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    if(map == MAP_FAILED) {\n        perror(\"mmap\");\n        close(fd);\n        return 1;\n    }\n\n    //Access the file\n    sprintf((char *)map, \"Hello, mmap!\");\n    printf(\"File contents: %s\\n\", (char *)map);\n\n    size_t new_size = 8192;\n    ftruncate(fd, new_size);\n\n    // remap to new size\n    map = mremap(map, size, new_size, MREMAP_MAYMOVE);\n    if (map == MAP_FAILED) {\n        perror(\"mremap\");\n        close(fd);\n        return 1;\n    }\n\n    //Use new region\n    sprintf((char *)map + 4096, \"Extended region\");\n    printf(\"File contents (extended): %s\\n\", (char *)map + 4096);\n\n    //clean up\n    munmap(map, new_size);\n    close(fd);\n    return 0;\n}",
    "$ time ./mmap_test \nFile contents: Hello, mmap!\nFile contents (extended): Extended region\n\nreal    0m0,003s\nuser    0m0,003s\nsys 0m0,000s",
    "#define _GNU_SOURCE\n#include <sys/mman.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n\n#define FILE_PATH \"testfile_no_msync\"\n#define INITIAL_SIZE 4096\n#define EXTENDED_SIZE 8192\n\nvoid handle_error(const char *msg) {\n    perror(msg);\n    _exit(1);\n}\n\nint main() {\n    // Create or open the file\n    int fd = open(FILE_PATH, O_RDWR | O_CREAT, 0666);\n    if (fd == -1) handle_error(\"open\");\n\n    // Set the initial file size\n    if (ftruncate(fd, INITIAL_SIZE) == -1) handle_error(\"ftruncate\");\n\n    // Map the initial region\n    void *map = mmap(NULL, INITIAL_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    if (map == MAP_FAILED) handle_error(\"mmap\");\n\n    // Write data to the mapped region\n    strncpy((char *)map, \"Hello, mmap!\", INITIAL_SIZE);\n\n    // Unmap the region without msync\n    if (munmap(map, INITIAL_SIZE) == -1) handle_error(\"munmap\");\n\n    // Extend the file size\n    if (ftruncate(fd, EXTENDED_SIZE) == -1) handle_error(\"ftruncate\");\n\n    // Remap the file with the new size\n    map = mmap(NULL, EXTENDED_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    if (map == MAP_FAILED) handle_error(\"mmap\");\n\n    // Write data to the extended region\n    strncpy((char *)map + INITIAL_SIZE, \"Extended region!\", EXTENDED_SIZE - INITIAL_SIZE);\n\n    // Cleanup\n    if (munmap(map, EXTENDED_SIZE) == -1) handle_error(\"munmap\");\n    close(fd);\n\n    printf(\"\\nTest completed successfully without msync\\n\");\n    return 0;\n}",
    "$ time ./no_msync \n\nTest completed successfully without msync\n\nreal    0m0,003s\nuser    0m0,003s\nsys 0m0,000s",
    "munmap\n    ftruncate\n    mmap",
    "#include <stdio.h>\n#include <setjmp.h>\n\njmp_buf routineA, routineB;\n\nint* last_i;\n\nvoid routine_a()\n{\n    int i;\n    for (i = 0; i < 10; ++i)\n    {\n        printf(\"A stored at address %p: %d\\n\", &i, i);\n        if (!setjmp(routineA)) {\n            if (i == 0) { last_i=&i; return; }\n            longjmp(routineB, 1);\n        }\n    }\n    last_i=&i;\n}\n\nvoid routine_b()\n{\n    int i;\n    for (i = 0; i < 10; ++i)\n    {\n        printf(\"B stored at address %p: %d\\n\", &i, i);\n        if (!setjmp(routineB))  longjmp(routineA, 1);\n    }\n    last_i=&i;\n}\n\nint main()\n{\n    routine_a();\n    printf(\"A::i is now dead. The memory location might contain %d still.\\n\", *last_i);\n    routine_b();\n    printf(\"B::i is now dead. The memory location might contain %d still.\\n\", *last_i);\n    return 0;\n}",
    "A stored at address 0x7ffc26a56dec: 0\nA::i is now dead. The memory location might contain 0 still.\nB stored at address 0x7ffc26a56dec: 0\nA stored at address 0x7ffc26a56dec: 1\nB stored at address 0x7ffc26a56dec: 2\nA stored at address 0x7ffc26a56dec: 3\nB stored at address 0x7ffc26a56dec: 4\nA stored at address 0x7ffc26a56dec: 5\nB stored at address 0x7ffc26a56dec: 6\nA stored at address 0x7ffc26a56dec: 7\nB stored at address 0x7ffc26a56dec: 8\nA stored at address 0x7ffc26a56dec: 9\nB::i is now dead. The memory location might contain 10 still.",
    "typedef struct Context {\n    int counter;\n} Context;\nstatic Context context = {0};\n\nint productionFunction() {\n    context.counter++;\n    return context.counter;\n}",
    "#define BEGIN_TEST \\\n{ \\\n    Context _storedContext = context;\n#define END_TEST \\\n    context = _storedContext; \\\n}\n\nvoid test1() {\n    BEGIN_TEST\n    TEST_ASSERT_EQUAL(1, productionFunction());\n    TEST_ASSERT_EQUAL(2, productionFunction());\n    END_TEST\n}",
    "int main() {\n    if (fork() == 0) {\n        RUN_TEST(test1);\n        return 0;\n    }\n    RUN_TEST(test2);\n}",
    "alignas(32) uint8_t bitmap[128][128]; // all 8 bits are used, so 0..255\nalignas(32) uint8_t widths[16][16];   // any integer type is fine\n\nvoid measure_cell(int i, int j)\n{\n    int const x = i * 8;\n    int const y = j * 8;\n\n    __m256i v = _mm256_load_si256((__m256i *) &bitmap[y][x]);\n    for (int k = 1; k < 8; ++k)\n        v = _mm256_or_si256(v, _mm256_load_si256((__m256i *) &bitmap[y + k][x]));\n\n    union { int i; uint8_t b[4]; } amask;\n    amask.i = _mm256_movemask_epi8(_mm256_cmpeq_epi8(v, _mm256_setzero_si256()));\n\n    for (int k = 0; k < 4; ++k)\n        widths[j][i + k] = _tzcnt_u32(amask.b[k] | 1 << 8);\n}\n\nint main()\n{\n    // ...\n\n    /* Calculate for 4x1 chunks of cells */\n    for (int j = 0; j < 16; ++j)\n        for (int i = 0; i < 16; i += 4)\n            measure_cell(i, j);\n\n    // ...\n}",
    "for(s = s00;;s++) switch(*s) {\n        case '-':\n            sign = 1;\n            /* no break */\n        case '+':\n            if (*++s)\n                goto break2;\n            /* no break */\n        case 0:\n            goto ret0;\n        case '\\t':\n        case '\\n':\n        case '\\v':\n        case '\\f':\n        case '\\r':\n        case ' ':\n            continue;\n        default:\n            goto break2;\n        }\n break2:",
    "/*\n     * Skip white space and pick up leading +/- sign if any.\n     * If base is 0, allow 0x for hex and 0 for octal, else\n     * assume decimal; if base is already 16, allow 0x.\n     */\n    do {\n        c = *s++;\n    } while (isspace_l(c, loc));\n    if (c == '-') {\n        neg = 1;\n        c = *s++;\n    } else if (c == '+')\n        c = *s++;\n    if ((base == 0 || base == 16) &&\n        c == '0' && (*s == 'x' || *s == 'X')) {\n        c = s[1];\n        s += 2;\n        base = 16;\n    }\n    if (base == 0)\n        base = c == '0' ? 8 : 10;",
    "gc = create_gc()\n    XMapWindow(dpy, main_win) ;\n\n    while ( !XNextEvent(dpy, &ev) ) {\n        if ( ev.type == Expose ) {\n             XDraw(...)\n             XFill(...)\n        } ;\n    } ;",
    "XSelectInput(dsp, main_win, ExposureMask);",
    "// Create the widget.\nGtkWidget *widget = some_widget_new ();\n\n// Take ownership, \"sink\" the floating reference.\ng_object_ref_sink (widget);\n\n// Check if widget setup was successful\nif (setup_widget (widget))\n  // If it was, parent the widget.\n  add_child (parent, widget);\n\n// Decrease the refcount\ng_object_unref (widget);",
    "static void frame_storage (void)\n{\n   meminfo();\n   if (CHKw(Curwin, View_MEMORY)) {\n      show_special(fmtmk(MEMORY_line1\n         , kb_main_total, kb_main_used, kb_main_free, kb_main_buffers));\n      show_special(fmtmk(MEMORY_line2\n         , kb_swap_total, kb_swap_used, kb_swap_free, kb_main_cached));\n      Msg_row += 2;\n   }\n}",
    "#define MEMINFO_FILE \"/proc/meminfo\"",
    "void meminfo(void){\n  char namebuf[16]; /* big enough to hold any row name */\n  mem_table_struct findme = { namebuf, NULL};\n  mem_table_struct *found;\n  char *head;\n  char *tail;\n  static const mem_table_struct mem_table[] = {\n  {\"Active\",       &kb_active},\n  {\"Buffers\",      &kb_main_buffers},\n  {\"Cached\",       &kb_main_cached},\n  {\"Committed_AS\", &kb_committed_as},\n  {\"Dirty\",        &kb_dirty},\n  {\"HighFree\",     &kb_high_free},\n  {\"HighTotal\",    &kb_high_total},\n  {\"Inact_clean\",  &kb_inact_clean},\n  {\"Inact_dirty\",  &kb_inact_dirty},\n  {\"Inact_target\", &kb_inact_target},\n  {\"Inactive\",     &kb_inactive},\n  {\"LowFree\",      &kb_low_free},\n  {\"LowTotal\",     &kb_low_total},\n  {\"Mapped\",       &kb_mapped},\n  {\"MemFree\",      &kb_main_free},\n  {\"MemShared\",    &kb_main_shared},\n  {\"MemTotal\",     &kb_main_total},\n  {\"PageTables\",   &kb_pagetables},\n  {\"ReverseMaps\",  &nr_reversemaps},\n  {\"Slab\",         &kb_slab},\n  {\"SwapCached\",   &kb_swap_cached},\n  {\"SwapFree\",     &kb_swap_free},\n  {\"SwapTotal\",    &kb_swap_total},\n  {\"Writeback\",    &kb_writeback}\n  };",
    "asm (\"incl %0\":\"+m\"(global_counter));",
    "static enum { NUM_COLORS = sizeof(colors) / sizeof(colors[0]) };\nstatic ColorButtons color_buttons[NUM_COLORS];",
    "static ColorButtons color_buttons[sizeof(colors) / sizeof(colors[0])];\nstatic const size_t NUM_COLORS = sizeof(colors) / sizeof(colors[0]);",
    "constexpr size_t NUM_COLORS = sizeof(colors) / sizeof(colors[0]);\nstatic ColorButtons color_buttons[NUM_COLORS];",
    "#define NUM_COLORS  (sizeof(colors) / sizeof(colors[0]))",
    "typedef struct /*untagged*/ {\n    char name[20];\n} NAME_1;\n\nstatic void ex6(void) {\n    NAME_1 name, name2;\n    // fflush(stdin);// clean buffr input, UB on some systems\n    printf(\"Name: \");\n    fgets(name.name, 20 , stdin); // empty name?\n    fgets(name2.name, 20 , stdin); // expected name\n    printf(\"Name: %sName2: %s\", name.name, name2.name); // name already includes newline\n}",
    "Protocol: 'HTTP/1.1'",
    "Protocol: 'HTTP/1.1\u240d'",
    "//Extract protocol\ncount = 0;\nfor (req = ++p; *p && *p != '\\n'; p++) {\n    count++;\n}",
    "#!/bin/bash\n/usr/bin/gcc -DMY_DEFINITION=whatever $*",
    "==14636== Memcheck, a memory error detector\n==14636== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==14636== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==14636== Command: ./x1\n==14636== \n0x5205040\n==14636== \n==14636== HEAP SUMMARY:\n==14636==     in use at exit: 10 bytes in 1 blocks\n==14636==   total heap usage: 1 allocs, 0 frees, 10 bytes allocated\n==14636== \n==14636== LEAK SUMMARY:\n==14636==    definitely lost: 0 bytes in 0 blocks\n==14636==    indirectly lost: 0 bytes in 0 blocks\n==14636==      possibly lost: 0 bytes in 0 blocks\n==14636==    still reachable: 10 bytes in 1 blocks\n==14636==         suppressed: 0 bytes in 0 blocks\n==14636== Rerun with --leak-check=full to see details of leaked memory\n==14636== \n==14636== For lists of detected and suppressed errors, rerun with: -s\n==14636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
    "#if HAVE_INLINE\n#define always_inline   always_inline\n#else\n#define always_inline   always_inline_not_supported\n#endif\n\n__attribute__ ((cold))\n__attribute__ ((noreturn))\n__attribute__ ((always_inline))\nvoid\ntest(void *);",
    "x.c:11:1: warning: \u2018always_inline_not_supported\u2019 attribute directive ignored [-Wattributes]\n test(void *);\n ^~~~",
    "#if !HAVE_INLINE\n#define always_inline   always_inline_not_supported\n#endif\n\n__attribute__ ((cold))\n__attribute__ ((noreturn))\n__attribute__ ((always_inline))\nvoid\ntest(void *);",
    "// If using any other STM32H7 Series, uncomment the line below\n#define FLASHWORD       8",
    "cmake_minimum_required(VERSION 3.30)\nproject(example LANGUAGES C)\n\n##\n# Module 1\n\nadd_library(module1)\nadd_library(example::module1 ALIAS module1)\n\ntarget_sources(module1 PRIVATE src/module1/module1.c)\ntarget_sources(\n    module1\n    PUBLIC\n    FILE_SET HEADERS\n    BASE_DIRS src\n    FILES src/module1/module1.h\n)\n\ntarget_link_libraries(module1 PRIVATE example::module2)\n\n##\n# Module 2\n\nadd_library(module2)\nadd_library(example::module2 ALIAS module2)\n\ntarget_sources(module2 PRIVATE src/module2/module2.c)\ntarget_sources(\n    module2\n    PUBLIC\n    FILE_SET HEADERS\n    BASE_DIRS src\n    FILES src/module2/module2.h\n)\n\n##\n# Main executable\n\nadd_executable(example)\n\ntarget_sources(example PRIVATE src/main.c)\n\ntarget_link_libraries(example PRIVATE example::module1)",
    "% mkdir -p src/module{1,2}\n% touch src/module1/module1.{c,h}\n% touch src/module2/module2.{c,h}\n% touch src/main.c",
    "% vim src/module2/module2.c\n% cat src/module2/module2.c \n#include \"module2/module2.h\"\n\nint module2_impl() {\n    return 42;\n}\n\n% vim src/module2/module2.h\n% cat src/module2/module2.h\n#ifndef MODULE2_H\n#define MODULE2_H\n\nint module2_impl();\n\n#endif\n\n% vim src/module1/module1.c\n% cat src/module1/module1.c\n#include \"module1/module1.h\"\n#include \"module2/module2.h\"\n\nint module1_impl() {\n    return 3 * module2_impl();\n}\n\n% vim src/module1/module1.h\n% cat src/module1/module1.h\n#ifndef MODULE1_H\n#define MODULE1_H\n\nint module1_impl();\n\n#endif\n\n% vim src/main.c\n% cat src/main.c\n#include <stdio.h>\n#include \"module1/module1.h\"\n\nint main () {\n    printf(\"Module 1 returns: %d\\n\", module1_impl());\n}",
    "% cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=Release\n-- The C compiler identification is AppleClang 16.0.0.16000026\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Configuring done (0.3s)\n-- Generating done (0.0s)\n-- Build files have been written to: /Users/areinking/tmp/build\n% cmake --build build\n[1/6] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc  -I/Users/areinking/tmp/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.2.sdk -MD -MT CMakeFiles/module2.dir/src/module2/module2.c.o -MF CMakeFiles/module2.dir/src/module2/module2.c.o.d -o CMakeFiles/module2.dir/src/module2/module2.c.o -c /Users/areinking/tmp/src/module2/module2.c\n[2/6] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc  -I/Users/areinking/tmp/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.2.sdk -MD -MT CMakeFiles/module1.dir/src/module1/module1.c.o -MF CMakeFiles/module1.dir/src/module1/module1.c.o.d -o CMakeFiles/module1.dir/src/module1/module1.c.o -c /Users/areinking/tmp/src/module1/module1.c\n[3/6] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc  -I/Users/areinking/tmp/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.2.sdk -MD -MT CMakeFiles/example.dir/src/main.c.o -MF CMakeFiles/example.dir/src/main.c.o.d -o CMakeFiles/example.dir/src/main.c.o -c /Users/areinking/tmp/src/main.c\n[4/6] : && /opt/homebrew/bin/cmake -E rm -f libmodule2.a && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar qc libmodule2.a  CMakeFiles/module2.dir/src/module2/module2.c.o && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib libmodule2.a && /opt/homebrew/bin/cmake -E touch libmodule2.a && :\n[5/6] : && /opt/homebrew/bin/cmake -E rm -f libmodule1.a && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar qc libmodule1.a  CMakeFiles/module1.dir/src/module1/module1.c.o && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib libmodule1.a && /opt/homebrew/bin/cmake -E touch libmodule1.a && :\n[6/6] : && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.2.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names  CMakeFiles/example.dir/src/main.c.o -o example  libmodule1.a  libmodule2.a && :\n% ./build/example \nModule 1 returns: 126",
    "add_executable(${PROJECT_NAME} main.c)\ninclude_directories(${CMAKE_SOURCE_DIR}/src)\nadd_subdirectory(module1)\nadd_subdirectory(module2/module2_1)\ntarget_link_libraries(${PROJECT_NAME} PRIVATE module1)",
    "int alignas(8) a;",
    "alignas(16) struct my_struct* foo;",
    "if (permissions < 0 || permissions > 7) {\n        char error_message[100] = {0};\n        sprintf(error_message, \"Invalid permissions: %i. Permissions must be between 0 and 7. Permissions set to 1.\", permissions);\n        result.code = -1;\n        result.message = error_message;\n        user_permissions = 1;\n    }",
    "char *error_message = malloc(100);\nsprintf(error_message, \"Invalid permissions: %i. Permissions must be between 0 and 7. Permissions set to 1.\", permissions);\nresult.message = error_message;",
    "bool matrix[CHUNK_WIDTH][CHUNK_HEIGHT];",
    "struct Chunk {\n    int id;\n    unsigned int x;\n    unsigned int y;\n    unsigned short width;\n    unsigned short height;\n    bool **matrix;\n};",
    "int factorical(int n) \n{\n    int lookup[] = { 1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800,\n                    39916800, 479001600, 6227020800, 87178291200,\n                    1307674368000, 20922789888000, 355687428096000,\n                    6402373705728000, 121645100408832000, 2432902008176640000\n    };\n\n    return lookup[n]\n}",
    "unsigned long factorial(unsigned n)\n{\n    if ( n == 0 || n == 1 ) // Or just if ( n == 0 )\n        return 1; \n\n    return n * factorial( n-1 );\n}",
    "// A wrapper because C does not support default values\nunsigned long factorial(unsigned n)\n{\n    return factorial_aux(n, 1);\n}\n\nunsigned long factorial_aux(unsigned n, unsigned long res)\n{\n    if ( n == 0 || n == 1 ) \n        return res; \n\n    return factorial( n-1, n*res ); // Tail recursive\n}",
    "factorial                          factorial_v2\n \n push   rbp                         push   rbp\n mov    rbp,rsp                     mov    rbp,rsp\n sub    rsp,0x10                    sub    rsp,0x10\n mov    DWORD PTR [rbp-0x4],edi     mov    DWORD PTR [rbp-0x4],edi\n cmp    DWORD PTR [rbp-0x4],0x0     cmp    DWORD PTR [rbp-0x4],0x0\n jle    24 <factorial+0x24>         jle    29 <factorial_v2+0x29>\n mov    eax,DWORD PTR [rbp-0x4]     mov    eax,DWORD PTR [rbp-0x4]\n sub    eax,0x1                     sub    eax,0x1\n mov    edi,eax                     mov    edi,eax\n call   1e <factorial+0x1e>         call   1e <factorial_v2+0x1e>\n                                    mov    edx,DWORD PTR [rbp-0x4]   \n imul   eax,DWORD PTR [rbp-0x4]     imul   eax,edx\n                                    mov    DWORD PTR [rbp-0x4],eax\n jmp    29 <factorial+0x29>         jmp    30 <factorial_v2+0x30>\n                                    mov    DWORD PTR [rbp-0x4],0x1\n mov    eax,0x1                     mov    eax,DWORD PTR [rbp-0x4]\n leave                              leave\n ret                                ret",
    "void make_projects_list(GtkWidget *projects_grid)\n    {\n    int n = 20;\n\n    GSList *group = NULL;\n    for (int i =0; i<n; i++)\n        {\n\n        GtkWidget *radio;\n        char label[3];\n        snprintf(label, 3, \"%d\", i);\n        radio = gtk_radio_button_new_with_label(group, label);\n        group = gtk_radio_button_get_group(GTK_RADIO_BUTTON(radio));\n\n        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (radio), i==0?1:0);\n        gtk_grid_insert_row(GTK_GRID(projects_grid), i);\n        gtk_grid_attach(GTK_GRID(projects_grid), radio, 1, i, 1,1);\n        }\n    }",
    "gpointer key = NULL, value = NULL;\ngchar *matching_key = NULL;\nGHashTableIter iter;\n\ng_hash_table_iter_init (&iter, hash_table);\nwhile (g_hash_table_iter_next (&iter, &key, &value)) {\n  if (g_str_equal (value, value_to_match)) {\n    matching_key = key;\n    break;\n  }\n}",
    "IoTHubDeviceClient_LL_SetOption(device_ll_handle, OPTION_KEEP_ALIVE, &keepalive);",
    "LOG(INFO) << \"Creating IoTHub Device handle\";  \nif ((device_ll_handle = IoTHubDeviceClient_LL_CreateFromConnectionString(connection_string.c_str(), iothub_transport)) == NULL)\n{\n    LOG(ERROR) << \"failed to create IoTHub client \" << user_ctx.iothub_uri << \"!\";\n    return nullptr;\n}\nelse\n{\n    iothub_info.stop_running = false;\n    iothub_info.connected = false;\n\n    (void)IoTHubDeviceClient_LL_SetConnectionStatusCallback(device_ll_handle, iothub_connection_status, &iothub_info);\n\n    // Enable MQTT Keep-Alive  \n    int keepalive = 20;\n    if (IoTHubDeviceClient_LL_SetOption(device_ll_handle, OPTION_KEEP_ALIVE, &keepalive) != IOTHUB_CLIENT_OK)\n    {\n        LOG(ERROR) << \"Failed to set keep-alive option!\";\n    }\n\n    // Enable logging  \n    bool traceOn = true;\n    IoTHubDeviceClient_LL_SetOption(device_ll_handle, OPTION_LOG_TRACE, &traceOn);\n\n    //Setting the auto URL Encoder (recommended for MQTT). Please use this option unless  \n    //you are URL Encoding inputs yourself.  \n    //ONLY valid for use with MQTT  \n    bool urlEncodeOn = true;\n    (void)IoTHubDeviceClient_LL_SetOption(device_ll_handle, OPTION_AUTO_URL_ENCODE_DECODE, &urlEncodeOn);\n\n    // Set the X509 certificates in the SDK  \n    if ((IoTHubDeviceClient_LL_SetOption(device_ll_handle, OPTION_X509_CERT, x509_certificate.c_str()) != IOTHUB_CLIENT_OK) ||\n        (IoTHubDeviceClient_LL_SetOption(device_ll_handle, OPTION_X509_PRIVATE_KEY, x509_key.c_str()) != IOTHUB_CLIENT_OK))\n    {\n        LOG(ERROR) << \"Failure to set options for x509, aborting\";\n    }\n\n    (void)IoTHubDeviceClient_LL_SetMessageCallback(device_ll_handle, receive_msg_callback, &iothub_info);\n    LOG(INFO) << \"Opened IoTHub connection via connection string \" << connection_string;\n    return device_ll_handle;\n}",
    "sprintf((char*)buffer_tx_pc, \"Timestamp: %llu\\n\\r\", \n    (unsigned long long) systick_timestamp);",
    "int read_twice(int* x) {\n  int tmp = *x;\n    //barrier();\n    __atomic_thread_fence(__ATOMIC_RELEASE); // Doesn't block LoadLoad\n  tmp += *x;\n  return tmp;\n}",
    "# x86-64 clang 19, NO barrier()\nread_twice(int*):\n        mov     eax, dword ptr [rdi]\n        add     eax, eax\n        ret",
    "# x86-64 clang 19, WITH barrier()\nread_twice_barrier(int*):\n        mov     eax, dword ptr [rdi]\n        add     eax, dword ptr [rdi]\n        ret",
    "struct rusage {\n       struct timeval ru_utime; /* user CPU time used */\n       struct timeval ru_stime; /* system CPU time used */\n       long   ru_maxrss;        /* maximum resident set size */\n       long   ru_ixrss;         /* integral shared memory size */\n       long   ru_idrss;         /* integral unshared data size */\n       long   ru_isrss;         /* integral unshared stack size */\n       long   ru_minflt;        /* page reclaims (soft page faults) */\n       long   ru_majflt;        /* page faults (hard page faults) */\n       long   ru_nswap;         /* swaps */\n       long   ru_inblock;       /* block input operations */\n       long   ru_oublock;       /* block output operations */\n       long   ru_msgsnd;        /* IPC messages sent */\n       long   ru_msgrcv;        /* IPC messages received */\n       long   ru_nsignals;      /* signals received */\n       long   ru_nvcsw;         /* voluntary context switches */\n       long   ru_nivcsw;        /* involuntary context switches */\n   };",
    "#include <sys/resource.h>\n#include <stdio.h>\n\nvoid print_memory_usage() {\n    struct rusage usage;\n    if (getrusage(RUSAGE_SELF, &usage) == 0) {\n        printf(\"Max Resident Set Size (KB): %ld\\n\", usage.ru_maxrss);\n    } else {\n        perror(\"getrusage\");\n    }\n}\n\nint main() {\n    print_memory_usage();\n    return 0;\n}",
    "#include <unistd.h>\n#include <stdio.h>\n\nvoid print_virtual_memory_size() {\n    long page_size = sysconf(_SC_PAGESIZE);\n    long num_pages = sysconf(_SC_PHYS_PAGES);\n    if (page_size != -1 && num_pages != -1) {\n        printf(\"Virtual Memory Size (bytes): %ld\\n\", page_size * num_pages);\n    } else {\n        perror(\"sysconf\");\n    }\n}\n\nint main() {\n    print_virtual_memory_size();\n    return 0;\n}",
    "if (dim1 != 0 && dim2 != 0 && dim3 != 0) {\n    v[0][0][0] = 5.7;\n}",
    "// int rightrot(int b, int n) {\nint rightrot(unsigned b, int n) {",
    "/* the idea is to consider that the integer can be divided at bit n\n * and the right left and right part exchanged.\n *  {      32 - n      }{   n      }\n *  xxxxxxxxxxxxxxxxxxxxyyyyyyyyyyyy\n *  ||||||||\\\\\\\\\\\\\\\\\\\\\\\\////////////\n *  |||||||\\ \\\\\\\\\\\\\\\\\\\\XX//////////\n *  ||||||\\ \\ \\\\\\\\\\\\\\\\XXXX////////\n *  |||||\\ \\ \\ \\\\\\\\\\\\XXXXXX//////\n *  ||||\\ \\ \\ \\ \\\\\\\\XXXXXXXX////\n *  |||\\ \\ \\ \\ \\ \\\\XXXXXXXXXX//\n *  ||\\ \\ \\ \\ \\ \\ XXXXXXXXXXXX\n *  |\\ \\ \\ \\ \\ \\ X/XXXXXXXXXX\\\\\n *  \\ \\ \\ \\ \\ \\ X/X/XXXXXXXX\\\\\\\\\n *   \\ \\ \\ \\ \\ X/X/X/XXXXXX\\\\\\\\\\\\\n *    \\ \\ \\ \\ X/X/X/X/XXXX\\\\\\\\\\\\\\\\\n *     \\ \\ \\ X/X/X/X/X/XX\\\\\\\\\\\\\\\\\\\\\n *      \\ \\ X/X/X/X/X/X/\\\\\\\\\\\\\\\\\\\\\\\\\n *       \\ X/X/X/X/X/X/\\||||||||||||\n *        X/X/X/X/X/X/\\|||||||||||||\n *       //X/X/X/X/X/\\||||||||||||||\n *      ////X/X/X/X/\\|||||||||||||||\n *     //////X/X/X/\\||||||||||||||||\n *    ////////X/X/\\|||||||||||||||||\n *   //////////X/\\||||||||||||||||||\n *  ////////////\\|||||||||||||||||||\n *  yyyyyyyyyyyyxxxxxxxxxxxxxxxxxxxx\n */\n#define WORD_SIZE_BITS     (32)\nuint32_t rotate_right32(uint32_t b, unsigned char n)\n{\n    n %= WORD_SIZE_BITS; /* rotating will produce the same result after 32 rots */\n    return (b >> n) || (b << (WORD_SIZE_BITS - n));\n} /* rotate_right32 */",
    "# Compiler and Flags\nCC = gcc\nCFLAGS = -Wall\n\n# Detect display server type\nDISPLAY_SERVER := $(shell \\\n    if [ \"$$XDG_SESSION_TYPE\" = \"wayland\" ]; then echo \"wayland\"; \\\n    elif [ \"$$XDG_SESSION_TYPE\" = \"x11\" ]; then echo \"x11\"; \\\n    elif [ -n \"$$WAYLAND_DISPLAY\" ]; then echo \"wayland\"; \\\n    elif [ -n \"$$DISPLAY\" ]; then echo \"x11\"; \\\n    else echo \"unknown\"; fi \\\n)\n\n# Add flags based on the display server\nifeq ($(DISPLAY_SERVER), wayland)\n    CFLAGS += -DWINDOW_SERVER_WAYLAND\nendif\n\nifeq ($(DISPLAY_SERVER), x11)\n    CFLAGS += -DWINDOW_SERVER_X11\nendif\n\n# Target\nall: detect_display\n\ndetect_display: detect_display.c\n    $(CC) $(CFLAGS) -o detect_display detect_display.c\n\nclean:\n    rm -f detect_display",
    "void populateMatrix(int **A, int n, int m) {\nprintf(\"Populate matrix:\\n\");\n\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n        int isDuplicate;\n        do {\n            isDuplicate = 0;\n            printf(\"Enter value for element [%d][%d]: \", i, j);\n            scanf(\"%d\", &A[i][j]);\n\n            // Check for duplicates in the current row up to column j\n            for (int col = 0; col < j; col++) {\n                if (A[i][col] == A[i][j]) {\n                    isDuplicate = 1;\n                    printf(\"Duplicate found in the current row. Please enter a different number.\\n\");\n                    break;\n                }\n            }\n\n            // Check for duplicates in previous rows\n            for (int row = 0; row < i && !isDuplicate; row++) {\n                for (int col = 0; col < m; col++) {\n                    if (A[row][col] == A[i][j]) {\n                        isDuplicate = 1;\n                        printf(\"Duplicate found in previous rows. Please enter a different number.\\n\");\n                        break;\n                    }\n                }\n                if (isDuplicate) break;\n            }\n        } while (isDuplicate);\n    }\n}",
    "int main() {\nint n = 3, m = 3;\nint *A[n];\nfor (int i = 0; i < n; i++) {\n    A[i] = (int *)malloc(m * sizeof(int));\n}\n\npopulateMatrix(A, n, m);\n\n// Print the matrix\nprintf(\"The populated matrix is:\\n\");\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n        printf(\"%d \", A[i][j]);\n    }\n    printf(\"\\n\");\n}\n\n// Free allocated memory\nfor (int i = 0; i < n; i++) {\n    free(A[i]);\n}\n\nreturn 0;\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n\nvoid showMatrix(int **A, int row, int col) {\n    for (int rw = 0; rw < row; rw++) {\n        for (int cl = 0; cl < col; cl++){\n            printf ( \"%4d\", A[rw][cl]);\n        }\n        printf ( \"\\n\");\n    }\n}\n\nint **freeMatrix ( int **A, int row) {\n    for ( int r = 0; r < row; ++r) {\n        free ( A[r]);\n    }\n    free ( A);\n    return NULL;\n}\n\nint **allocateMatrix( int row,int col) {\n    int **A = NULL;\n\n    if ( NULL == ( A = calloc ( sizeof *A, row))) {\n        fprintf ( stderr, \"problem calloc A\\n\");\n        return A;\n    }\n    for ( int r = 0; r < row; ++r) {\n        if ( NULL == ( A[r] = calloc ( sizeof **A, col))) {\n            fprintf ( stderr, \"problem calloc A[r]\\n\");\n            A = freeMatrix ( A, row);\n            return A;\n        }\n    }\n    return A;\n}\n\nint checkMatrix(int **A, int row,int col, int r, int c) {\n    for (int rw = 0; rw <= r; rw++) {\n        for (int cl = 0; cl < col; cl++){\n            if ( rw == r && cl >= c) { // current row but equal or beyond current column\n                return 0;\n            }\n            if ( A[rw][cl] == A[r][c]) {\n                printf(\"Duplicate,insert another number!.\\n\");\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n\nvoid fillMatrix(int **A, int row,int col) {\n    int result = 0;\n\n    printf(\"populate matrix:\\n\");\n\n    for (int r = 0; r < row; r++) {\n        for (int c = 0; c < col; c++)  {\n            do {\n                result =scanf(\"%d\", &A[r][c]);\n                scanf ( \"%*[^\\n]\"); // scan aed discard everything up to newline\n                if ( 0 == result) {\n                    continue;\n                }\n                if ( EOF == result) {\n                    fprintf ( stderr, \"EOF\\n\");\n                    return;\n                }\n            } while ( checkMatrix ( A, row, col, r, c));\n        }\n    }\n}\n\nint main ( void) {\n    int **A = NULL;\n    int row = 5;\n    int col = 4;\n\n    if ( ( A = allocateMatrix ( row, col))) {\n        fillMatrix ( A, row, col);\n        showMatrix ( A, row, col);\n        freeMatrix ( A, row);\n    }\n}",
    "export void samePointerDifferentOffsets(uniform const int16 **uniform imageList,\n                                        uniform int   chosenIndex,\n                                        varying int   offsets)\n{\n    \n    imageList:\n    uniform const int16 *basePtr = imageList[chosenIndex];\n\n    // basePtr is uniform. Indexing it by varying `offsets` -> gather\n    varying int16 data = basePtr[offsets];\n\n    print(\"lane=% : offsets=% : data=%\\n\", programIndex, offsets, data);\n}",
    "#include <stdio.h>\n\nint main ( void) {\n    char *asterisks = \"* * * * * * * * * * * * * * * * * * * * * * * *\";\n    char *prompt = \"* How would you like to proceed:              *\";\n    int choice = 0;\n    int result = 0;\n\n    printf ( \"\\033[1;1H\"); // move to row 1 col 1\n    printf ( \"\\033[2J\");//clear screen\n    printf ( \"\\033[11;1H\"); // move to row 11 col 1\n    printf ( \"%s\", asterisks);\n    printf ( \"\\033[13;1H\"); // move to row 13 col 1\n    printf ( \"%s\", asterisks);\n    do {\n        printf ( \"\\033[12;1H\"); // move to row 12 col 1\n        printf ( \"%s\", prompt);\n        printf ( \"\\033[12;34H\"); // move to row 12 col 34\n        result = scanf ( \"%d\", &choice);\n        scanf ( \"%*[^\\n]\"); // scan and discard everything not a newline\n        if ( EOF == result) {\n            fprintf ( stderr, \"problem EOF\\n\");\n            return 1;\n        }\n    } while ( 0 == result);\n}",
    "#include <stdio.h>\n#include <ncurses.h>\n\nint main( void) {\n    char *asterisks = \"* * * * * * * * * * * * * * * * * * * * * * * *\";\n    char *prompt = \"* How would you like to proceed:              *\";\n    int choice = 0;\n    int result = 0;\n    initscr ( );\n    mvprintw ( 11, 1,\"%s\", asterisks);\n    mvprintw ( 13, 1,\"%s\", asterisks);\n    do {\n        mvprintw ( 12, 1,\"%s\", prompt);\n        move ( 12, 34);\n        refresh ( );\n        result = scanw ( \"%d\", &choice);\n        if ( ERR == result) {\n            break;\n        }\n    } while ( 1 != result);\n    endwin ( );\n    return 0;\n}",
    "physCircle *circles = NULL; // Initialize to NULL\nsize_t numCircles = 0;",
    "circles = realloc(circles, sizeof(physCircle)*(numCircles+1));\nif (circles == NULL) {\n    // Bad error\n    exit(1);\n}\n++numCircles;",
    "physCircle *ptmp = realloc(circles, sizeof(physCircle)*(numCircles+1));\nif (ptmp == NULL) {\n    // Bad error\n\n    // Add error handling here\n} else {\n    circles = ptmp;  // Update circles as realloc succeeded\n    ++numCircles;\n    // Do something with the new circle\n}",
    "#define MAX_CIRCLES 10000\n\nint main(void) {\n    static physCircle circles[MAX_CIRCLES];\n    size_t numCircles = 0;\n\n    ...",
    "#define MAX_CIRCLES 10000\n\nint main(void) {\n    physCircle *circles = malloc(MAX_CIRCLES * sizeof *circles);\n    if (circles == NULL) exit(1);\n    size_t numCircles = 0;\n\n    ...",
    "if(numCircles == 0) {\n    circles = malloc(sizeof(physCircle) * (numCircles + 1));\n} else {\n    physCircle *temp = realloc(circles, sizeof(physCircle) * (numCircles + 1));\n    if (!temp) {\n        // You have an opportunity to handle the error.\n    }\n    else {\n        circles = temp;\n    }\n}",
    "if(numCircles == 0) {\n    circles = malloc(sizeof(physCircle) * (circlesCapacity + 1));\n} else if (numCircles >= circlesCapacity) {\n    physCircle *temp = realloc(circles, sizeof(physCircle) * circlesCapacity * 2);\n    if (!temp) {\n        // You have an opportunity to handle the error.\n    }\n    else {\n        circles = temp;\n        circlesCapacity *= 2;\n    }\n}",
    "#ifdef __APPLE__\n#define DEFINE_FUNC(func) \\\n    .global _##func; \\\n    _##func\n#define END_FUNC(...) /*_*/\n#else\n#define DEFINE_FUNC(func)\\\n    .global func;   \\\n    .type func,%function; \\\n    func\n#define END_FUNC(func)\\\n    .size func,.-func;\n#endif\n\nDEFINE_FUNC(test_func):\n    mov x0, x1\n    ret\nEND_FUNC(test_func)",
    "// After extended\n.global _test_func; _test_func:\n    mov x0, x1\n    ret\n\n// After compiled\n.global _test_func\n    mov, x0, x1\n    ret",
    ".macro define_func func\n    .global _\\func\n    _\\func:\n.endm\n\n#ifdef __APPLE__\n#define DEFINE_FUNC(func) define_func func\n#define END_FUNC(...) /*_*/\n#else\n#define DEFINE_FUNC(func)\\\n    .global func;   \\\n    .type func,%function; \\\n    func:\n#define END_FUNC(func)\\\n    .size func,.-func;\n#endif\n\nDEFINE_FUNC(test_func)\n    mov x0, x1\n    ret\nEND_FUNC(test_func)",
    "char result[ARRAY_SIZE];\n// convertWholeNumberToBinary(294, result); \nsnprintf(buf, sizeof result, \"%b\", 294);",
    "#include <stdio.h>\n\nconst int ARRAY_SIZE = 100;\n\nvoid reverseCharArray(char *x, int len) {\n    for (int end = len - 1, beg = 0; beg < end; end--, beg++) {\n        char temp = x[beg];\n        x[beg] = x[end];\n        x[end] = temp;\n    }\n}\n\nvoid convertWholeNumberToBinary(unsigned int x, char *result) {\n    int i = 0;\n    while (x != 0) {\n        result[i++] = '0' + (x % 2);\n        x /= 2;\n    }\n\n    result[i] = '\\0';\n    reverseCharArray(result, i);\n}\n\nint main() {\n    char result[ARRAY_SIZE];\n    convertWholeNumberToBinary(294, result); \n    printf(\"%s\\n\", result);\n    return 0;\n}",
    "#define TFT_CS           5\n#define TFT_RST         32\n#define TFT_DC          33\n\nAdafruit_ST7789 tft = Adafruit_ST7789(TFT_CS, TFT_DC, TFT_RST);",
    "void insertArr(struct array *arr, int index, int item) {\n//\n        for(int i = arr->items; i >= index; i--) {      // not arr->capacity - 1\n            // below is the conditional jump or move that depended on\n            // uninitialised value(s):\n            if(0 == arr->data[i] && 0 == arr->data[i - 1])\n                continue;\n  \n            arr->data[i] = arr->data[i - 1];\n        }\n//\n}",
    "void printArr(struct array *arr, int limit) {\n//\n    for(int i = 0; i < arr->items; i++) {                   // not arr->capacity\n//\n}",
    "void sortArr(struct array *arr, bool reverse) {\n//\n            for(int j = 0; j < (arr->items - 1 - i); j++) { // not arr->capacity\n//\n}",
    "==95439== Conditional jump or move depends on uninitialised value(s)\n==95439==    at 0x202002: insertArr (so19.c:188)\n==95439==    by 0x201B93: main (so19.c:40)",
    "(gdb) list\n183                     printf(\"Reallocation for arr->data failed when inserting.\\n\");\n184                     exit(1);\n185                 }\n186             }\n187             for(int i = arr->capacity - 1; i >= index; i--) {\n188                 if(0 == arr->data[i] && 0 == arr->data[i - 1])\n189                     continue;\n190       \n191                 arr->data[i] = arr->data[i - 1];\n192             }",
    "(gdb) mc xb &arr->data[i] sizeof(arr->data[i])\n                  ff      ff      ff      ff\n0x5460064:      0x00    0x00    0x00    0x00",
    "(gdb) mc xb &arr->data[i-1] sizeof(arr->data[i-1])\n                  ff      ff      ff      ff\n0x5460060:      0x00    0x00    0x00    0x00",
    "printf(\"%d: pid1=%d pid2=%d pid3=%d\\n\",getpid(),pid1,pid2,pid3);",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <string.h>\n#include <signal.h>\n#include <time.h>\n#if 1\n#include <errno.h>\n#include <stdarg.h>\n#include <sys/file.h>\n#include <sys/ipc.h>\n#include <sys/msg.h>\n#endif\n\n#ifndef USE_PIDM\n#define USE_PIDM    1\n#endif\n\n#ifndef USE_FIFO\n#define USE_FIFO    0\n#endif\n\n#define countof(_x)     (sizeof(_x) / sizeof(_x[0]))\n\n#define GOTSIG(_who) \\\n    prtf(_who \": sig=%d si_pid=%d/%d\\n\", \\\n        sig,info->si_pid,info->si_pid - pidm)\n\n#define BUFFER_SIZE 1024\n\n#if USE_FIFO\n#if 0\n#define FIFO_1 \"/tmp/fifo_1\"\n#define FIFO_2 \"/tmp/fifo_2\"\n#define FIFO_3 \"/tmp/fifo_3\"\n#else\nconst char *fifolist[4] = {\n    NULL,\n    \"/tmp/fifo_1\",\n    \"/tmp/fifo_2\",\n    \"/tmp/fifo_3\",\n};\n#endif\n#else\nint msg_fd;\n#endif\n\ntypedef struct {\n#if USE_FIFO == 0\n    long msg_id;\n#endif\n    int signal_type;\n    pid_t sender_pid;\n    char message[256];\n    int line_count;\n} Message;\n\nvolatile sig_atomic_t is_suspended = 0;\nvolatile sig_atomic_t should_exit = 0;\ntime_t start_time;\n\n#if 0\npid_t pid1, pid2, pid3;\n#else\npid_t pidlist[4];\n#define pidm    pidlist[0]\n#define pid1    pidlist[1]\n#define pid2    pidlist[2]\n#define pid3    pidlist[3]\n#endif\n\npid_t pidself;                  // cached value of getpid()\nint xidself;                    // 0-3\nint xidnew;                     // 0-3\n\n#define prtattr(_lvl) \\\n    __attribute__((__format__(__printf__,_lvl,_lvl + 1)))\n\ndouble tsczero;\n\ndouble\ntscgetf(void)\n{\n    struct timespec ts;\n    double sec;\n\n    clock_gettime(CLOCK_MONOTONIC,&ts);\n\n    sec = ts.tv_nsec;\n    sec /= 1e9;\n    sec += ts.tv_sec;\n\n    sec -= tsczero;\n\n    return sec;\n}\n\n#define prtfault(_fmt...) \\\n    do { \\\n        prtf(_fmt); \\\n        exit(1); \\\n    } while (0)\n\n// prtf -- signal safe printf\nvoid prtattr(1)\nprtf(const char *fmt,...)\n{\n    va_list ap;\n    char buf[1000];\n    char *bp = buf;\n\n    // printf uses the heap but sprintf doesn't [99.44% of the time ;-)]\n\n    // show which pid said what\n    bp += sprintf(bp,\"[%.9f X:%d P:%d] \",tscgetf(),xidself,pidself);\n\n    va_start(ap,fmt);\n    bp += vsprintf(bp,fmt,ap);\n    va_end(ap);\n\n    flock(1,LOCK_EX);\n    write(1,buf,bp - buf);\n    flock(1,LOCK_UN);\n}\n\nvoid\npropagate_signal(int sig, pid_t sender_pid)\n{\n#if 0\n    if (sender_pid == pid1) {\n        prtf(\"Propagating signal from Process 1 (PID: %d) to Process 2 and Process 3\\n\", sender_pid);\n        kill(pid2, sig);\n        kill(pid3, sig);\n    }\n    else if (sender_pid == pid2) {\n        prtf(\"Propagating signal from Process 2 (PID: %d) to Process 1 and Process 3\\n\", sender_pid);\n        kill(pid1, sig);\n        kill(pid3, sig);\n    }\n    else if (sender_pid == pid3) {\n        prtf(\"Propagating signal from Process 3 (PID: %d) to Process 1 and Process 2\\n\", sender_pid);\n        kill(pid1, sig);\n        kill(pid2, sig);\n    }\n#endif\n\n#if 0\n    kill(0,sig);\n#endif\n\n#if 1\n    prtf(\"propagate_signal: sig=%d\\n\",sig);\n    union sigval sigval;\n    sigval.sival_int = 0;\n    sigqueue(pidm,SIGHUP,sigval);\n#endif\n}\n\nvoid\nhandle_s1(int sig,siginfo_t *info,void *vp)\n{\n    GOTSIG(\"handle_s1\");\n    should_exit = 1;\n    prtf(\"Received termination signal (S1)\\n\");\n    propagate_signal(SIGUSR1, pidself);\n}\n\nvoid\nhandle_s2(int sig,siginfo_t *info,void *vp)\n{\n    GOTSIG(\"handle_s2\");\n    is_suspended = 1;\n    prtf(\"Received suspension signal (S2)\\n\");;\n#if 0\n    propagate_signal(SIGUSR2, pidself);\n#else\n    kill(SIGUSR2,pidself);\n#endif\n}\n\nvoid\nhandle_s3(int sig,siginfo_t *info,void *vp)\n{\n    GOTSIG(\"handle_s3\");\n    is_suspended = 0;\n    prtf(\"Received resume signal (S3)\\n\");\n#if 0\n    propagate_signal(SIGCONT, pidself);\n#else\n    kill(SIGCONT,pidself);\n#endif\n}\n\nvoid\nhandle_s4(int sig,siginfo_t *info,void *vp)\n{\n    Message msg;\n\n    GOTSIG(\"handle_s4\");\n#if USE_FIFO\n// NOTE/BUG: this won't be fifo_1, fifo_2, fifo_3\n#if 0\n    char fifo_path[20];\n    sprintf(fifo_path, \"/tmp/fifo_%d\", getpid());\n#endif\n#if 0\n    const char *fifo_path = fifolist[xidself];\n#else\n    const char *fifo_path = fifolist[xidself ? xidself : 3];\n#endif\n\n#if USE_FIFO >= 2\n    prtf(\"handle_s4: open fifo_path='%s'\\n\",fifo_path);\n    int fifo_fd = open(fifo_path, O_RDONLY);\n#else\n    int fifo_fd = open(fifo_path, O_RDONLY | O_NONBLOCK);\n#endif\n\n    if (fifo_fd >= 0) {\n        prtf(\"handle_s4: read ...\\n\");\n        if (read(fifo_fd, &msg, sizeof(msg)) > 0) {\n            prtf(\"Received message from process %d: %s\\n\",\n                msg.sender_pid, msg.message);\n            propagate_signal(SIGINT, pidself);\n            if (msg.line_count > 0) {\n                prtf(\"Line count information received: %d\\n\", msg.line_count);\n            }\n        }\n\n        close(fifo_fd);\n    }\n    else\n        prtfault(\"handle_s4: xidself=%d fifo_path='%s' open failed -- %s\\n\",\n            xidself,fifo_path,strerror(errno));\n#else\n    prtf(\"handle_s4: msgrcv xidself=%d ...\\n\",xidself);\n    if (msgrcv(msg_fd, &msg, sizeof(msg), xidself, 0) > 0) {\n        prtf(\"Received message from process %d: %s\\n\",\n            msg.sender_pid, msg.message);\n        propagate_signal(SIGINT, pidself);\n        if (msg.line_count > 0) {\n            prtf(\"Line count information received: %d\\n\", msg.line_count);\n        }\n    }\n#endif\n}\n\nvoid\nhandle_hup(int sig,siginfo_t *info,void *vp)\n{\n\n    GOTSIG(\"handle_hup\");\n\n    for (int idx = 0;  idx < countof(pidlist);  ++idx) {\n        pid_t pidcur = pidlist[idx];\n\n        // don't send to self\n        if (pidcur == pidself)\n            continue;\n\n        // don't send to originator\n        if (pidcur == info->si_pid)\n            continue;\n\n        prtf(\"handle_hup: sending to idx=%d pidcur=%d\\n\",idx,pidcur);\n        kill(pidcur,sig);\n    }\n}\n\nvoid\nsend_message_to_others(int signal_type, const char *msg, int line_count)\n{\n    Message message;\n\n    message.signal_type = signal_type;\n    message.sender_pid = getpid();\n    message.line_count = line_count;\n    strncpy(message.message, msg, 255);\n\n#if USE_FIFO\n#if 0\n    char fifo_path[20];\n#else\n    const char *fifo_path;\n#endif\n\n    for (int i = 1; i <= 3; i++) {\n        fifo_path = fifolist[i];\n        prtf(\"send_message_to_others: open fifo_path='%s'\\n\",fifo_path);\n#if USE_FIFO >= 2\n        int fd = open(fifo_path, O_WRONLY);\n#else\n        int fd = open(fifo_path, O_WRONLY | O_NONBLOCK);\n#endif\n\n        if (fd >= 0) {\n            int xlen = write(fd, &message, sizeof(message));\n            prtf(\"send_message_to_others: i=%d xlen=%d sizeof=%zu\\n\",\n                i,xlen,sizeof(message));\n            close(fd);\n        }\n        else\n            prtfault(\"send_message_to_others: i=%d fifo_path='%s' open failed -- %s\\n\",\n                i,fifo_path,strerror(errno));\n    }\n#else\n    for (int i = 1; i <= 3; i++) {\n        message.msg_id = i;\n        int xlen = msgsnd(msg_fd, &message, sizeof(message), 0);\n        prtf(\"send_message_to_others: i=%d xlen=%d sizeof=%zu\\n\",\n            i,xlen,sizeof(message));\n    }\n#endif\n}\n\nvoid\nsetup_handler(int signo,void (*handler)(int,siginfo_t *,void *))\n{\n    struct sigaction act;\n\n    memset(&act,0,sizeof(act));\n    act.sa_sigaction = handler;\n    sigaction(signo,&act,NULL);\n}\n\nvoid\nstart_child(void)\n{\n\n    xidself = xidnew;\n    pidself = getpid();\n\n    prtf(\"start_child: started\\n\");\n}\n\nint\nmain(int argc, char *argv[])\n{\n\n    if (argc != 2) {\n        fprintf(stderr, \"Usage: %s <file_path>\\n\", argv[0]);\n        exit(1);\n    }\n\n    tsczero = tscgetf();\n\n    // master/parent pid\n    pidm = getpid();\n    pidself = pidm;\n    prtf(\"main: pidm=%d\\n\",pidm);\n\n#if USE_FIFO\n    for (int idx = 1;  idx < countof(fifolist);  ++idx) {\n        const char *file = fifolist[idx];\n        unlink(file);\n        int err = mkfifo(file, 0666);\n\n        if (err < 0)\n            prtfault(\"mkfifo: %s -- %s\\n\",file,strerror(errno));\n    }\n#else\n    msg_fd = msgget(IPC_PRIVATE,IPC_CREAT | 0600);\n    if (msg_fd < 0)\n        prtfault(\"main: msgget fail -- %s\\n\",strerror(errno));\n#endif\n\n#if 0\n    signal(SIGUSR1, handle_s1);\n    signal(SIGUSR2, handle_s2);\n    signal(SIGCONT, handle_s3);\n    signal(SIGINT, handle_s4);\n#else\n    setup_handler(SIGUSR1, handle_s1);\n    setup_handler(SIGUSR2, handle_s2);\n    setup_handler(SIGCONT, handle_s3);\n    setup_handler(SIGINT, handle_s4);\n    setup_handler(SIGHUP, handle_hup);\n#endif\n\n    int pipe1[2], pipe2[2];\n\n    start_time = time(NULL);\n\n    if (pipe(pipe1) == -1 || pipe(pipe2) == -1) {\n        perror(\"pipe\");\n        exit(1);\n    }\n\n    ++xidnew;\n    pid1 = fork();\n\n    if (pid1 == 0) {\n        start_child();\n\n        close(pipe1[0]);\n        close(pipe2[0]);\n        close(pipe2[1]);\n\n        FILE *file = fopen(argv[1], \"r\");\n        if (file == NULL) {\n            perror(\"fopen\");\n            exit(1);\n        }\n\n        char buffer[BUFFER_SIZE];\n        size_t bytes_read;\n        int line_number = 0;\n\n        while (fgets(buffer, BUFFER_SIZE, file) != NULL && !should_exit) {\n            while (is_suspended) {\n                usleep(100000);\n            }\n            bytes_read = strlen(buffer);\n            if (write(pipe1[1], buffer, bytes_read) != bytes_read) {\n                perror(\"write to pipe\");\n                break;\n            }\n            line_number++;\n            prtf(\"Read line %d: %s\", line_number, buffer);\n            send_message_to_others(4, \"Read new line\", line_number);\n            usleep(100000);\n        }\n\n        prtf(\"Finished reading file (read %d lines)\\n\", line_number);\n        fclose(file);\n        close(pipe1[1]);\n        exit(0);\n    }\n\n    ++xidnew;\n    pid2 = fork();\n\n    if (pid2 == 0) {\n        start_child();\n\n        close(pipe1[1]);\n        close(pipe2[0]);\n\n        char ch;\n        int line_count = 0;\n        ssize_t bytes_read;\n        int last_reported_count = 0;\n\n        while ((bytes_read = read(pipe1[0], &ch, 1)) > 0 && !should_exit) {\n            while (is_suspended) {\n                usleep(100000);\n            }\n            if (ch == '\\n') {\n                line_count++;\n                if (line_count != last_reported_count) {\n                    prtf(\"Counted line %d\\n\", line_count);\n                    write(pipe2[1], &line_count, sizeof(line_count));\n                    send_message_to_others(4, \"Counted line\", line_count);\n                    last_reported_count = line_count;\n                }\n            }\n        }\n\n        prtf(\"Finishing operation\\n\");\n        close(pipe1[0]);\n        close(pipe2[1]);\n        exit(0);\n    }\n\n#if USE_PIDM\n    pid3 = pidm;\n    if (1) {\n        prtf(\"main: starting pid3 as parent\\n\");\n#else\n    ++xidnew;\n    pid3 = fork();\n    if (pid3 == 0) {\n        start_child();\n#endif\n\n        close(pipe1[0]);\n        close(pipe1[1]);\n        close(pipe2[1]);\n\n        int last_count = 0;\n        int final_count;\n\n        while (read(pipe2[0], &final_count, sizeof(final_count)) > 0 &&\n            !should_exit) {\n            while (is_suspended) {\n                usleep(100000);\n            }\n            if (final_count != last_count) {\n                prtf(\"Updated line count: %d\\n\", final_count);\n                send_message_to_others(4, \"Updated line count\", final_count);\n                last_count = final_count;\n            }\n        }\n\n        prtf(\"Finishing operation. Final line count: %d\\n\", last_count);\n#if USE_PIDM == 0\n        exit(0);\n#endif\n    }\n\n#if 0\n    waitpid(pid1, NULL, 0);\n    waitpid(pid2, NULL, 0);\n#else\n    while (1) {\n        prtf(\"Waiting\\n\");\n        pid_t pidreap = wait(NULL);\n        if (pidreap < 0)\n            break;\n        prtf(\"Reaping %d/%d\\n\",pidreap,pidreap - pidm);\n    }\n#endif\n\n    close(pipe2[0]);\n#if USE_FIFO\n    for (int idx = 1;  idx < countof(fifolist);  ++idx)\n        unlink(fifolist[idx]);\n#endif\n\n    return 0;\n}",
    "#if 0\n// old code\n#else\n// new code\n#endif\n\n#if 1\n// new code\n#endif",
    "hello world\ngoodbye galaxy\nuniverse eternal",
    "[0.000004085 X:0 P:595644] main: pidm=595644\n[0.000346837 X:1 P:595645] start_child: started\n[0.000381570 X:0 P:595644] main: starting pid3 as parent\n[0.000421851 X:2 P:595646] start_child: started\n[0.000479973 X:1 P:595645] Read line 1: hello world\n[0.000487642 X:2 P:595646] Counted line 1\n[0.000503542 X:1 P:595645] send_message_to_others: i=1 fifo_path='/tmp/fifo_1' open failed -- No such device or address\n[0.000517247 X:2 P:595646] send_message_to_others: i=1 fifo_path='/tmp/fifo_1' open failed -- No such device or address\n[0.000538922 X:0 P:595644] Updated line count: 1\n[0.000566704 X:0 P:595644] send_message_to_others: i=1 fifo_path='/tmp/fifo_1' open failed -- No such device or address",
    "[0.000001998 X:0 P:595688] main: pidm=595688\n[0.000619131 X:0 P:595688] main: starting pid3 as parent\n[0.000642203 X:1 P:595689] start_child: started\n[0.000678053 X:2 P:595690] start_child: started\n[0.000774182 X:1 P:595689] Read line 1: hello world\n[0.000813729 X:2 P:595690] Counted line 1\n[0.000879997 X:0 P:595688] Updated line count: 1\n[0.001350095 X:1 P:595689] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.001352684 X:2 P:595690] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.001355468 X:0 P:595688] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.001363248 X:1 P:595689] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.001364265 X:2 P:595690] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.001365704 X:0 P:595688] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.001370134 X:2 P:595690] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.001370989 X:0 P:595688] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.001372129 X:1 P:595689] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.101520156 X:1 P:595689] Read line 2: goodbye galaxy\n[0.101565808 X:1 P:595689] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.101581843 X:1 P:595689] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.101597385 X:1 P:595689] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.101611671 X:2 P:595690] Counted line 2\n[0.101636212 X:2 P:595690] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.101641843 X:0 P:595688] Updated line count: 2\n[0.101649104 X:2 P:595690] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.101658820 X:0 P:595688] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.101660533 X:2 P:595690] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.101669473 X:0 P:595688] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.101678881 X:0 P:595688] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.201782499 X:1 P:595689] Read line 3: universe eternal\n[0.201823202 X:1 P:595689] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.201838128 X:1 P:595689] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.201846063 X:1 P:595689] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.201873574 X:2 P:595690] Counted line 3\n[0.201902347 X:2 P:595690] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.201915274 X:2 P:595690] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.201922945 X:2 P:595690] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.201969388 X:0 P:595688] Updated line count: 3\n[0.201994417 X:0 P:595688] send_message_to_others: i=1 xlen=0 sizeof=280\n[0.202010472 X:0 P:595688] send_message_to_others: i=2 xlen=0 sizeof=280\n[0.202022218 X:0 P:595688] send_message_to_others: i=3 xlen=0 sizeof=280\n[0.301994886 X:1 P:595689] Finished reading file (read 3 lines)\n[0.302076881 X:2 P:595690] Finishing operation\n[0.302118434 X:0 P:595688] Finishing operation. Final line count: 3\n[0.302132616 X:0 P:595688] Waiting\n[0.302194757 X:0 P:595688] Reaping 595689/1\n[0.302204503 X:0 P:595688] Waiting\n[0.302265047 X:0 P:595688] Reaping 595690/2\n[0.302272118 X:0 P:595688] Waiting",
    "[0.000004437 X:0 P:656979] main: pidm=656979\n[0.000427016 X:0 P:656979] main: starting pid3 as parent\n[0.000458723 X:1 P:656980] start_child: started\n[0.000517052 X:2 P:656981] start_child: started\n[0.000606265 X:1 P:656980] Read line 1: hello world\n[0.000614574 X:1 P:656980] send_message_to_others: open fifo_path='/tmp/fifo_1'\n[0.000637244 X:2 P:656981] Counted line 1\n[0.000663545 X:2 P:656981] send_message_to_others: open fifo_path='/tmp/fifo_1'\n[0.000667690 X:0 P:656979] Updated line count: 1\n[0.000681505 X:0 P:656979] send_message_to_others: open fifo_path='/tmp/fifo_1'",
    "size_t getNumberOfUsers (void); \n  // returns the number of registred users\n\nstruct User* getUser (size_t i); \n  // returns a pointer to a specific requested user, otherwise NULL if it doesn't exist",
    "static const s *thisInfo;",
    "thisInfo = &info[0]; // ok\nthisInfo = &info[1]; // ok\nthisInfo->a = 0;     // compiler error: assignment of member 'a' in read-only object",
    "user@HP-stream11-392758:~/Desktop$ readelf --dyn-syms ./GFXterm | grep GLIBC\n6: 0000000000000000      0 FUNC    GLOBAL DEFAULT  UND dlsym@GLIBC_2.2.5 (2)\n21: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND wcrtomb@GLIBC_2.2.5 (3)\n57: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND wcscoll@GLIBC_2.2.5 (3)\n112: 0000000000000000    0 FUNC    GLOBAL DEFAULT  UND dlclose@GLIBC_2.2.5 (2)\n185: 0000000000000000    0 FUNC    GLOBAL DEFAULT  UND setenv@GLIBC_2.2.5 (3)\n[...]",
    "static int\nveq_zero(uint8x16_t v)\n{\n#ifdef __arm__\n    union { uint8x8_t v; double d; } narrowed;\n\n    /* narrow each byte to a nibble */\n    narrowed.v = vshrn_n_u16(vreinterpretq_u16_u8(v), 4);\n\n    /* check if that vector is all zero */\n    return (narrowed.d == 0.0);\n#else /* AArch64 */\n    uint8x8_t narrowed;\n\n    /* narrow each byte to a nibble */\n    narrowed = vshrn_n_u16(vreinterpretq_u16_u8(v), 4);\n\n    /* check if that vector is all zero */\n    return (vdupd_lane_f64(vreinterpret_f64_u16(narrowed), 0) == 0.0);\n#endif\n}",
    "m = modff(x, &e);\nif (m < 0.0f) {\n    m += 1.0f; // fractional part\n    e -= 1.0f; // integral part\n}",
    "x         fastexp(x)       exp(x)\n----------------------------------------\n-2.00000000 => 0.13306235     0.13533528\n-1.79999995 => 0.16054048     0.16529890\n-1.60000002 => 0.19829696     0.20189651\n-1.39999998 => 0.24633193     0.24659697\n-1.20000005 => 0.29292828     0.30119420\n-1.00000000 => 0.35886729     0.36787944\n-0.80000001 => 0.44536310     0.44932896\n-0.60000002 => 0.53846931     0.54881162\n-0.40000001 => 0.65119916     0.67032004\n-0.20000000 => 0.80504274     0.81873075\n 0.00000000 => 1.00000000     1.00000000\n 0.20000000 => 1.18716359     1.22140276\n 0.40000001 => 1.45655441     1.49182471\n 0.60000002 => 1.80817270     1.82211884\n 0.80000001 => 2.17952919     2.22554096\n 1.00000000 => 2.64171839     2.71828183\n 1.20000005 => 3.26836252     3.32011708\n 1.39999998 => 4.04080629     4.05519987\n 1.60000002 => 4.81200027     4.95303254\n 1.79999995 => 5.91210270     6.04964718\n 2.00000000 => 7.34111547     7.38905610",
    "int fd = shm_open(\"/mem\", O_RDWR|O_CREAT, S_IRUSR|S_IWUSR);",
    "shm = shared_memory.SharedMemory(name=\"mem\", create=False)",
    "def __init__(self, name: str, size: int):\n        if os.name != \"nt\":\n            name = name.lstrip('/') # Remove leading '/' on POSIX systems\n                                    # because SharedMemory.__init__ will add it back\n        self.name = name\n        self.size = size  # Store intended size separately\n        self._shm = None\n...",
    "int n;\nwhile (n != EOF) {   \n    switch ( n = getchar() ) {\n       ...\n    }\n\n    puts(\"\\nInserire un altro valore per l'area\");\n}",
    "while ( 1 ) {   \n    int n = getchar();\n    if ( n == EOF )\n        break;\n\n    switch ( n ) {\n       ...\n    }\n\n    puts(\"\\nInserire un altro valore per l'area\");\n}",
    "while (n != EOF)\n{  \n    printf(\"%s\", \"\\nInserisci uno dei valori seguenti per il calcolo dell'area  di:\\n\");\n    puts(\"1 - Cerchio\\n\");\n    puts(\"2 - Quadrato\\n\");\n    puts(\"3 - Sfera\\n\");\n\n    n = getchar();                                              // gets user option;        \n    if (n != EOF) getchar(); // if user press another than CTRL+Z                                       , throws away 'enter' key\n\n    switch (n)\n    {\n        case '1':                                    \n            puts(\"\\nInserisci il raggio del cerchio: \");\n            scanf(\"%f\", &x);\n            getchar();                                          //  throws away 'enter' key\n\n            A = (float)M_PI*x*x;\n            printf(\"L'area del cerchio e': \\n%f\", A);                    \n            break;\n        \n        case '2':   \n            puts(\"\\nInserisci il lato del quadrato: \");\n            scanf(\" %f\", &x);\n            getchar();                                          //  throws away 'enter' key\n            A = x*x;\n            printf(\"L'area del quadrato e': \\n%f\", A);\n            n = 0;\n            break;\n        \n        case '3':\n            puts(\"\\nInserisci il raggio della sfera: \");\n            scanf(\" %f\", &x);\n            getchar();                                          //  throws away 'enter' key\n            A = (float)M_PI*x*x*4;\n            printf(\"L'area della sfera e': \\n%f\", A);\n            n = 0;\n            break;\n\n        case '\\n': //ignora i newline\n        case '\\t': //ignora le tabulazioni\n        case ' ': //ignora gli spazi in input\n            break;\n\n        default:\n            puts(\"Non e' stato inserito un valore valido\\n\");\n            if (n == EOF) // Fixed\n            {\n                puts(\"Inserito valore per la terminazione del programma. (CTRL+Z)\");\n            }\n    }                 \n}",
    "x264_param_t param;\nx264_param_default(&param);\n\n\nx264_t* handler = x264_encoder_open(&param);\n\nx264_t* handler_copy = x264_encoder_open(&param);",
    "while (1) {\n        int ret = dequeueLF(&(args->queue), &value);\n\n        if (ret == 0) {\n            unsigned long old_count = atomic_fetch_add(&(args->sync.total_items_consumed), 1);\n\n            syslog(LOG_DEBUG, \"thread(%lu) dequeue succeed! new total_items_consumed: %lu\",\n                   (unsigned long) pthread_self(), old_count + 1);\n        } else {\n            unsigned long consumed_count = atomic_load(&(args->sync.total_items_consumed));\n\n            syslog(LOG_DEBUG, \"thread(%lu) dequeue failed with total_items_consumed: %lu\",\n                   (unsigned long) pthread_self(), consumed_count);\n            if (consumed_count >= args->total_items) {\n                syslog(LOG_DEBUG, \"thread(%lu) observed all expected items consumed; terminating\",\n                       (unsigned long) pthread_self());\n                break;\n            }\n        }\n    }",
    "void *threadMessageReceiver(void *sfd) {\n    ...\n    char buffer[1024];\n    int client_sfd = *(int *)sfd;\n    ssize_t char_count;\n\n    free(sfd);\n    while (true) {\n        if ((char_count = recv(client_sfd, buffer, strlen(buffer), 0)) < 0) { // BUG !!!\n     ...\n    }\n    return 0;\n}",
    "void *threadMessageReceiver(void *sfd) {\n    ...\n    char buffer[1024];\n    int client_sfd = *(int *)sfd;\n    ssize_t char_count;\n\n    free(sfd);\n    while (true) {\n        if ((char_count = recv(client_sfd, buffer, sizeof(buffer)-1, 0)) < 0) {\n     ...\n    }\n    return 0;\n}",
    "// Resolve the server address and port\n    iResult = getaddrinfo(\"127.0.0.1\", DEFAULT_PORT, &hints, &result);\n    if ( iResult != 0 ) {\n        printf(\"getaddrinfo failed with error: %d\\n\", iResult);\n        WSACleanup();\n        return 1;\n    }",
    "hints.ai_family = AF_UNSPEC;",
    "hints.ai_family = AF_INET;",
    "SSL_CTX_load_verify_locations(ctx, \"/certs/ca.crt\", NULL);",
    "puts((union { nullptr_t n; void *v; }) { nullptr } .v ? \"True\" : \"False\");",
    "static_assert(sizeof(void *) == sizeof(nullptr_t));\nvoid* null_ptr1 = NULL;    \nnullptr_t null_ptr2 = nullptr;\n\nif (memcmp(&null_ptr1, &null_ptr2, sizeof(void*)) == 0) \n    printf(\"binary rep. of NULL and nullptr is the same.\\n\");\nelse \n    printf(\"binary rep. of NULL and nullptr is not the same.\\n\");",
    "char s[2] = \"v\";  // s[0] == 'v', s[1] == '\\0'\n\nchar a;\na = s;",
    "char *temp = &s[0];\na = temp;  // No dereference of the pointer, it's the pointer itself that is assigned from",
    "#include <stdio.h>\n#define S_WIDTH 40\n#define S_HEIGHT 10\n#define F_CHARS 11\n#define F_WIDTH 5\n#define F_HEIGHT 5\nchar font[] = \n\" xx  xxx   xxx xxx  xxxx xxxx  xx  x  x x       x x  x \"\\\n\"x  x x  x x    x  x x    x    x    x  x x       x x x  \"\\\n\"xxxx xxx  x    x  x xx   xxx  x xx xxxx x       x xx   \"\\\n\"x  x x  x x    x  x x    x    x  x x  x x    x  x x x  \"\\\n\"x  x xxx   xxx xxx  xxxx x     xx  x  x x     xx  x  x \";\n\nchar screen[S_WIDTH*S_HEIGHT];\nvoid myprint(int x, int y, char* strings){\n    while (*strings != 0){ // until not null terminated\n        // get corresponding char in font array\n        int font_start_index = 0+(*strings-65)*F_WIDTH;\n        // iterate over the current font\n        for (int i=0;i<F_WIDTH;i++){\n            for (int a=0;a<F_HEIGHT;a++){\n                // Get current character to draw\n                int font_index = font_start_index+i+a*F_WIDTH*F_CHARS;\n                char font_character = *(font+font_index);\n                // Figure out where to draw it\n                int screen_index = x+i+(y+a)*S_WIDTH;\n                *(screen+screen_index) = font_character;\n            }\n\n        }\n        x+=F_WIDTH;\n        strings++;\n    }\n}\nint main(){\n    // Clear screen\n    for(int i=0;i<S_WIDTH*S_HEIGHT;i++){\n        screen[i] = '.';\n    }\n    // Call my print with a user defined message\n    myprint(5,2,\"A\");\n    // Print the screen\n    char * spos = screen;\n    for(int i=0; i<S_HEIGHT; i++){\n        for(int j=0; j<S_WIDTH; j++){\n            printf(\"%c\",*spos++);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}",
    "/usr/bin/ld: removing unused section '.text.foo' in file '/tmp/ccXZWJ2X.o'",
    "int a_c04aa06a_cde4_11ef_b4d8_0023ae68f329(void)  /* function parameters don't need to be touched */",
    "cat main.rs \nuse std::env;\nuse std::fs;\nuse std::ffi::CString;\n\nextern \"C\" {\n    fn print_file(aString: *const i8, size: usize);\n}\n\nfn main() {\n    let args: Vec<String> = env::args().collect();\n\n    if args.len() != 2\n    {\n        eprintln!(\"usage: {} FILE-TO-DISPLAY\", &args[0]);\n        return;\n    }\n\n    let file_contents = match fs::read_to_string(&args[1]) \n    {\n        Ok(contents) => contents,\n        Err(err) => {\n            eprintln!(\"Failed to read {}, REASON:{}\", &args[1], err);\n            return;\n        }\n    }; \n\n    let c_string = match CString::new(file_contents)\n    {\n        Ok(c_string) => c_string,\n        Err(err) => {\n            eprintln!(\"unexpected CString error {}\", err);\n            return;\n        }\n    };\n\n    unsafe {\n        print_file(c_string.as_ptr(), c_string.to_bytes().len());\n    }\n}\n\n\n#\n# test with\n#\n./main someinputfile",
    "#define Stringize(x)        StringizeHelper(x)",
    "#define StringizeHelper(x)  #x",
    "#define Width   10\n\n#define StringizeHelper(x)  #x\n#define Stringize(x)        StringizeHelper(x)\n\n#include <stdio.h>\n\nint main(void)\n{\n    printf(\"x%\" Stringize(Width) \"sz\\n\", \"y\");\n}",
    "#define Width   10\n\n#include <stdio.h>\n\nint main(void)\n{\n    printf(\"x%*sz\\n\", Width, \"y\");\n}",
    "char* hello_world = \"Hello, \" \"World!\";",
    "char* hello_world = \"Hello, World!\";",
    "#define COLUMNMACROCONSTANT \"20\" // Define it as a string literal\n// ... other code\n\nfprintf(..., \"%\" COLUMNMACROCONSTANT \"s\", ...);",
    "#include <assert.h>\n#include <stddef.h>\n#include <stdalign.h>\n\ntypedef long double big;\n\nstruct S_alt {\n  int char_data_size;  // Consider `size_t char_data_size;`\n  max_align_t data[];\n};\n\nbig* f_s_alt(struct S_alt *s) {\n  return (big*) s->data;\n}",
    "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(int argc, char **argv) {\n    int v1;\n    int *p;\n    v1 = 123;\n    {\n        int v2;\n        p = &v2; // Keeps track of v2 memory\n        v2 = 321;\n        printf(\"v1=%d v2=%d\\n\", v1, v2);\n    }\n\n    // Access to v2 memory, which is out of scope,\n    // still prints the good value: \"*p=321\n    printf(\"*p=%d\\n\", *p);\n\n    return EXIT_SUCCESS;\n}",
    "/**\n  * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (SysTick): \n  *         Counter is in free running mode to generate periodic interrupts.\n  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.\n  * @retval status:  - 0  Function succeeded.\n  *                  - 1  Function failed.\n  */\nuint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)\n{\n   return SysTick_Config(TicksNumb);\n}",
    "HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);",
    "|\n    |    8 |     **new = (int*) malloc(sizeof(int));\n    |      |                    ^~~~~~~~~~~~~~~~~~~\n    |      |                    |\n    |      |                    (1) allocated here\n    |    9 | \n    |   10 |     ***new = 2137;\n    |      |       ~~~~          \n    |      |       |\n    |      |       (2) \u2018malloc(4)\u2019 leaks here; was allocated at (1)",
    "==23502== Memcheck, a memory error detector\n==23502== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==23502== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==23502== Command: ./x1\n==23502== \n2137\n==23502== \n==23502== HEAP SUMMARY:\n==23502==     in use at exit: 0 bytes in 0 blocks\n==23502==   total heap usage: 3 allocs, 3 frees, 20 bytes allocated\n==23502== \n==23502== All heap blocks were freed -- no leaks are possible\n==23502== \n==23502== For lists of detected and suppressed errors, rerun with: -s\n==23502== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
    "--with-arch=armv7-a+fp",
    "# This should match the one on your raspi\nENV GCC_VERSION gcc-12.2.0\nENV GLIBC_VERSION glibc-2.36\nENV BINUTILS_VERSION binutils-2.40\nARG DEBIAN_FRONTEND=noninteractive\n\n\n# Install some tools and compilers + clean up\nRUN apt-get update && \\\n    apt-get install -y rsync git wget gcc g++ cmake gdb gdbserver bzip2 texinfo && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Use GCC 8 as the default\n# RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 999 \\\n#  && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 999 \\\n#  && update-alternatives --install /usr/bin/cc  cc  /usr/bin/gcc-8 999 \\\n#  && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 999",
    "// Calculating the  local sums, min, max\n   int local_sum = 0, local_min = local_data[0], local_max = local_data[0], local_square_sum = 0;\n   for (int i = 0; i < local_size; i++)\n   {\n       local_sum += local_data[i];\n       local_square_sum += local_data[i]*local_data[i];\n       if (local_data[i] < local_min) local_min = local_data[i];\n       if (local_data[i] > local_max) local_max = local_data[i];\n   }\n\n\n   // MPI_Reduce to find the global min, max and to get the global sum\n   int global_sum, global_min, global_max, global_square_sum;\n   double global_variance;\n   MPI_Reduce(&local_sum, &global_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);\n   MPI_Reduce(&local_square_sum, &global_square_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);\n   MPI_Reduce(&local_min, &global_min, 1, MPI_INT, MPI_MIN, 0, MPI_COMM_WORLD);\n   MPI_Reduce(&local_max, &global_max, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);\n\n\n   // Calculation for Mean\n   if (RANK == 0)\n   {\n       Mean = (double)global_sum / n;\n       global_variance = (double)global_square_sum / n - Mean * Mean;\n       Min = global_min;\n       Max = global_max;\n       Range = Max - Min;\n       printf(\"Mean : %.2f, Min : %d, Max : %d, Range : %.2f\\n\", Mean, Min, Max, Range);\n       printf(\"Variance : %.2f\\n\", global_variance);\n   }",
    "//                                           vvvvvvvvv ---> bad\n        for(node *ptr = table[i]; ptr != NULL; ptr = ptr->next) {\n            if (ptr->next == NULL) {\n                break;\n            }\n            free(ptr);\n        }",
    "node *next;\n        for(node *ptr = table[i]; ptr != NULL; ptr = next) {\n            next = ptr->next;\n            free(ptr);\n        }",
    "word_read[strcspn(word_read, \"\\n\")] = '\\0';",
    "(toupper(word[0]) - 'A')%((unsigned)N)",
    "unsigned int size(void) {\n    int counter = 0;\n    ...\n    return counter;\n}",
    "printf(\"%d\", 333);",
    "printf(\"%d\\n\", 333);",
    "#include <stdio.h>\n#include <usb.h>\nmain(){\n    struct usb_bus *bus;\n    struct usb_device *dev;\n    usb_init();\n    usb_find_busses();\n    usb_find_devices();\n    for (bus = usb_busses; bus; bus = bus->next)\n        for (dev = bus->devices; dev; dev = dev->next){\n            printf(\"Trying device %s/%s\\n\", bus->dirname, dev->filename);\n            printf(\"\\tID_VENDOR = 0x%04x\\n\", dev->descriptor.idVendor);\n            printf(\"\\tID_PRODUCT = 0x%04x\\n\", dev->descriptor.idProduct);\n        }\n}",
    "$ udevadm info -q path -n /dev/usb/hiddev0\n/devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.6/1-4.6:1.0/usbmisc/hiddev0",
    "$ udevadm info [-q <type>] -p /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.6/1-4.6:1.0/usbmisc/hiddev0",
    "P: /devices/pci0000:00/0000:00:14.0/usb1/1-5/1-5.6/1-5.6:1.0/usbmisc/hiddev1\nN: usb/hiddev1\nL: 0\nE: DEVPATH=/devices/pci0000:00/0000:00:14.0/usb1/1-5/1-5.6/1-5.6:1.0/usbmisc/hiddev1\nE: DEVNAME=/dev/usb/hiddev1\nE: MAJOR=180\nE: MINOR=1\nE: SUBSYSTEM=usbmisc",
    "#include <assert.h>\n#include <stdio.h>\n#include <sys/stat.h>\n\n#include <libudev.h>\n\nint main() {\n    struct stat stat_buf;\n\n    // Stat a device file\n    int r = stat(\"/dev/bus/usb/xxx/yyy\", &stat_buf);\n    assert(r >= 0 && \"stat() failed.\");\n\n    // Init a udev context\n    struct udev* udev_ctx = udev_new();\n    assert(udev_ctx != NULL && \"udev_new() failed.\");\n\n    // Store the st_mode as a character for udev\n    char type;\n    if (S_ISBLK(stat_buf.st_mode)) {\n        type = 'b';\n    } else if (S_ISCHR(stat_buf.st_mode)) {\n        type = 'c';\n    } else {\n        assert(0 && \"Unknown device type.\");\n    }\n\n    // Get a device using type and st_rdev\n    struct udev_device* device = udev_device_new_from_devnum(udev_ctx, type, stat_buf.st_rdev);\n    assert(device != NULL && \"Unable to get a udev device.\");\n\n    printf(\n        \"ID_MODEL: %s\\n\",\n        udev_device_get_property_value(device, \"ID_MODEL\")\n    );\n\n    udev_device_unref(device);\n    udev_unref(udev_ctx);\n}",
    "s1 = s2;          // atomic?",
    "char *rgba_str = gdk_rgba_to_string(rgba);\n\n    unsigned int r, g, b;\n    // rgba_str has the form \"rgb(r,g,b)\" or \"rgba(r,g,b,a)\", where r, g, b, a are\n    // decimal integers in the range 0 - 255.\n    int fields = sscanf(rgba_str, \"%*[^(](%u,%u,%u\", &r, &g, &b);\n\n    // the caller of gdk_rgba_to_string() is responsible for freeing the result\n    free(rgba_str);\n\n    if (fields < 3) {\n        // handle malformed rgba_str ...\n    }\n\n    // if paranoid then validate that r, g, and b are within the expected range ...\n\n    char result[8];\n\n    sprintf(result, \"#%02x%02x%02x\", r, g, b);",
    "unsigned int r, g, b;\n\n    r = (unsigned int) (0.5 + rgba->red * 255);\n    g = (unsigned int) (0.5 + rgba->green * 255);\n    b = (unsigned int) (0.5 + rgba->blue * 255);\n\n    char result[8];\n\n    sprintf(result, \"#%02x%02x%02x\", r, g, b);",
    "struct tm gmt_tmp, ist_tmp;\n...\nlocaltime_r(&gmt, &gmt_tmp);\nlocaltime_r(&ist, &ist_tmp);\n...\nstrftime (sgmt, 99, \"%A, %d %B %Y, %X\", &gmt_tmp);\nstrftime (sist, 99, \"%A, %d %B %Y, %X\", &ist_tmp);",
    "#include <stdio.h>\n#include <time.h>\n\nint main() {\n    time_t gmt, ist;\n    struct tm gmt_tm, ist_tm; // Separate instances\n    char sgmt[100], sist[100];\n\n    time(&gmt);\n    ist = gmt + 19800; // IST is 5h 30m ahead\n\n    gmt_tm = *gmtime(&gmt); // Copy GMT result\n    ist_tm = *localtime(&ist); // Copy IST result\n\n    strftime(sgmt, sizeof(sgmt), \"%A, %d %B %Y, %X\", &gmt_tm);\n    strftime(sist, sizeof(sist), \"%A, %d %B %Y, %X\", &ist_tm);\n\n    printf(\"Current GMT: %s\\n\", sgmt);\n    printf(\"Current IST: %s\\n\", sist);\n\n    return 0;\n}",
    "printf(\"%d \", ++x || ++y && ++z);",
    "int result;    \nif (++x != 0)\n{\n    result = 1;\n}\nelse if (++y == 0)\n{\n    result = 0;\n}\nelse if (++z == 0)\n{\n    result = 0;\n}\nelse\n{\n    result = 1;\n}\nprintf(\"%d \", result);",
    "extern _Atomic grid_point_t my_p0;\nextern _Atomic grid_point_t my_p1;",
    "#include <stdatomic.h>\n\nextern _Atomic grid_point_t my_p0;\nextern _Atomic grid_point_t my_p1;\n\nint main(void) {\n    // build a line based on some external points\n\n    grid_point_t p0 = atomic_load_explicit(&my_p0, memory_order_relaxed);\n    grid_point_t p1 = atomic_load_explicit(&my_p1, memory_order_relaxed);\n\n    grid_line_t my_line = build_line(p0, p1);\n\n    // ...\n}",
    "int c = a;      ?   a is rvalue  \n    /*\n      a is an rvalue, isn't that inconsistent with what we said before and not an lvalue itself? I hadn't noticed this basic problem",
    "#include <stdbool.h>\n#include <string.h>\n\nvoid squeeze(char *s1, char *s2) {\n    bool table[256] = {0};\n\n    for (char *ch = s2; *ch; ch++) {\n        table[(unsigned char)*ch] = true;\n    }\n\n    size_t j = 0;\n    \n    for (char *ch = s1; *ch; ch++) {\n        if (!table[(unsigned char)*ch]) {\n            s1[j++] = *ch;\n        }\n    }\n\n    s1[j] = '\\0';\n}",
    "53955, 59994\n61974, 82962, 75933, 63954\n62964, 71973, 83952, 74943",
    "85555 -> 85555 - 55558 = 29997\n29997 -> 99972 - 27999 = 71973   # 3rd cycle above starts here\n71973 -> 97731 - 13779 = 83952\n83952 -> 98532 - 23589 = 74943\n74943 -> 97443 - 34479 = 62964\n62964 -> 96642 - 24669 = 71973   # and it repeats",
    "// Break if the sequence converges or doesn't change\n        if (nextN == n) {\n            break;\n        }",
    "void QuickSort(int a[], int lo, int hi)\n{\n    if(lo >= hi)\n        return;\n    int p = a[lo+(hi-lo)/2];\n    int i = lo-1;\n    int j = hi+1;\n    while(1){\n        while (a[++i] < p);\n        while (a[--j] > p);\n        if(i >= j)\n            break;\n        int t = a[i];\n        a[i] = a[j];\n        a[j] = t;\n    }\n    i = j++;\n    QuickSort(a, lo, i);\n    QuickSort(a, j, hi);\n}",
    "(v4i32)__builtin_msa_fsqrt_w((v4f32)va)",
    "builtin_msa_ftint_u_w(__builtin_msa_fsqrt_w(__builtin_msa_ffint_u_w(va)))",
    "void render_enemies(struct EnemyCluster *enemy_cluster, SDL_Renderer *renderer,\n                    struct QTNode *q_tree);",
    "struct QTNode;\n\nvoid render_enemies(struct EnemyCluster *enemy_cluster, SDL_Renderer *renderer,\n                    struct QTNode *q_tree);",
    "void PrintList(struct ListNode *node) {\n   printf( \"List:\" );\n\n   while ( node ) {\n      printf( \" %d\", node->val );\n      node = node->next;\n   }\n\n   printf( \"\\n\" );\n}",
    "void RemoveIf3(struct ListNode** head, RemoveFn * Remove)\n{\n    struct ListNode** ptr_current_node  = head;\n    struct ListNode* entry;\n    while(*ptr_current_node) {\n        entry = *ptr_current_node;\n        if (Remove(entry)) {\n            *ptr_current_node = entry->next;\n            free(entry);\n        } else {\n            *ptr_current_node = entry->next;\n        }\n    }\n\n}",
    "struct ListNode** ptr_current_node  = head;",
    "void RemoveIf3(struct ListNode** head, RemoveFn * Remove)\n{\n    struct ListNode* entry;\n    while( *head != NULL ) {\n        entry = *head;\n        if (Remove(entry)) {\n            *head = entry->next;\n            free(entry);\n        } else {\n            *head = entry->next;\n        }\n    }\n}",
    "void PrintList(struct ListNode* head)\n{\n    while(head->next) {\n        printf(\"%d, \", head->val);\n        head = head->next;\n    }\n    if(head) printf(\"%d\\n\", head->val);\n}",
    "ptr_current_node = &entry->next;",
    "*head = entry->next;",
    "void PrintList( const struct ListNode *head )\n{\n    for ( ; head != NULL; head = head->next ) \n    {\n        printf( head->next ? \"%d, \" : \"%d\\n\", head->val );\n    }\n}",
    "void RemoveList( struct ListNode **head )\n{\n    for ( struct ListNode *current = *head; current != NULL; ) \n    {\n        struct ListNode *next = current->next;\n        free( current );\n        current = next;\n    }\n\n    *head = NULL;\n}",
    "void RemoveList( struct ListNode **head )\n{\n    while ( *head ) \n    {\n        struct ListNode *next = ( *head )->next;\n        free( *head );\n        *head = next;\n    }\n}",
    "#include <stdio.h>\n\nint main(void) {\n    FILE *cfPtr = NULL;\n\n    if ((cfPtr = fopen(\"clients.txt\", \"w\")) == NULL) {\n        puts(\"File could not be opened\");\n        return 1;\n    }\n\n    puts(\"Enter the account, name, and balance\");\n    puts(\"Enter EOF to end input.\");\n    printf(\"%s\", \"? \");\n    int account = 0;\n    char name[30] = \"\";\n    double balance = 0.0;\n    scanf(\"%d%29s%lf\", &account, name, &balance);\n        \n    while (!feof(stdin)) {\n        fprintf(cfPtr,\"%d %s %.2f\\n\", account, name, balance);\n        fflush(cfPtr);\n        printf(\"%s\", \"? \");\n        scanf(\"%d%29s%lf\", &account, name, &balance);\n    }\n\n    fclose(cfPtr);\n}",
    "#include <stdio.h>\n#include <string.h> // Declares memcpy.\n\nint main(void)\n{\n   char name[4] = {'x', '%', 'Q', 0};\n   int t;                       // Define a temporary variable.\n   memcpy(&t, name, sizeof t);  // Copy bytes into t.\n   printf(\"%d\\n\", t);           // Show value of t.\n}",
    "/*\nThis program demonstrates a simple example of a remote code execution\nvulnerability. The program connects to a remote server, reads a buffer from\nthe server and executes it.\n\nTo test it, create the following elo.asm file:\n\n    bits 64      ; 64-bit mode\n    xor eax, eax ; zero out eax\n    inc eax      ; eax = 1\n    mov ebx, 4   ; syscall number for sys_exit\n    int 0x80     ; call sys_exit\n\nThen set up a server that serves the shellcode, for example:\n\n    ncat -p 31337 -k -l --sh-exec \"nasm elo.asm  -o /dev/stdout\"\n\nThen run the program and it will execute the shellcode.\n\nWARNING: This program is vulnerable to remote code execution and should not be\nused in production. It is only for educational purposes.\n\n*/\n\n\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\n#include <stdlib.h>\n#include <errno.h>\n#include <sys/mman.h>\n#include <unistd.h>\n#include <stdio.h>\n\n#define BUF_SIZE 4096\n\nint main()\n{\n\n        // Let's allocate a buffer with read, write and execute permissions.\n        // This way we can write the shellcode to the buffer and execute it.\n        // We explicitly set PROT_EXEC to allow the buffer to be executed,\n        // bypassing W^X protection.\n        char * buf = mmap (0, BUF_SIZE, PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n        if (buf == MAP_FAILED) {\n                perror(\"mmap\");\n                exit(1);\n        }\n\n        // Create a socket. This can fail if e.g. the system is out of file\n        // descriptors.\n        int fd = socket(AF_INET, SOCK_STREAM, 0);\n        if (fd == -1) {\n                perror(\"socket\");\n                exit(1);\n        }\n\n        // Allocate a struct addrinfo and set the fields to connect to the\n        // server. This can fail if e.g. the system is out of memory.\n        struct addrinfo* sa = malloc(sizeof(struct addrinfo));\n        if (sa == NULL) {\n                perror(\"malloc\");\n                exit(1);\n        }\n        sa->ai_family = AF_INET;\n        sa->ai_flags = 0;\n        sa->ai_socktype = SOCK_STREAM;\n        sa->ai_protocol = 0;\n        sa->ai_addr->sa_family = AF_INET;\n\n        // Resolve the address of the server. This can fail if e.g. the address\n        // is not found.\n        int ret = getaddrinfo(\"localhost\", \"31337\",  NULL, &sa);\n        if (ret != 0) {\n                perror(\"getaddrinfo\");\n                exit(1);\n        }\n\n        // Connect to the server. This can fail if e.g. the server is not\n        // reachable.\n        ret = connect(fd, sa->ai_addr, sa->ai_addrlen);\n        if (ret == -1) {\n                perror(\"connect\");\n                exit(1);\n        }\n\n        // Read the shellcode from the server. This can fail if e.g. the server\n        // disconnects.\n        ret = read(fd, buf, BUF_SIZE);\n        if (ret == -1) {\n                perror(\"read\");\n                exit(1);\n        }\n\n        // Execute the shellcode. We cast the buffer to a function pointer and\n        // call it. If this fails, the shellcode is likely invalid.\n        void (*f)(void);\n        f = buf;\n        f();\n}",
    "__atomic_fetch_add(&self->reference_count, 1, __ATOMIC_RELAXED);",
    "static TupleLists *PySolveProblem(...",
    "return PyTuple_Pack(2, list, historyList);",
    "#include <stdint.h>\n#include <stdlib.h>\n#include <stdatomic.h>\n\ntypedef struct Header {\n    uint8_t is_shared;\n    uint8_t is_alloc;\n    uint64_t reference_count;\n} Header;\n\n#define HDR_VALUES(_share,_alloc) \\\n    { .is_shared = _share, .is_alloc = _alloc }\n\n#define HDR_SHARED(_sym) \\\n    Header _sym = HDR_VALUES(1,0)\n\n#define HDR_PRIVATE(_sym) \\\n    Header _sym = HDR_VALUES(0,0)\n\nHDR_SHARED(my_shared_header);\nHDR_PRIVATE(my_private_header);\n\nHeader *\nHeader_new(Header *self,uint8_t is_shared)\n{\n\n    if (self == NULL) {\n        self = malloc(sizeof(*self));\n        self->is_alloc = 1;\n    }\n    else\n        self->is_alloc = 0;\n\n    self->is_shared = is_shared;\n\n    self->reference_count = 0;\n\n    return self;\n}\n\nvoid\nHeader_acquire(Header * const self)\n{\n    if (!self->is_shared) {\n        ++self->reference_count;\n    }\n    else {\n        atomic_fetch_add_explicit(&self->reference_count, 1, __ATOMIC_RELAXED);\n    }\n}\n\nuint8_t\nHeader_release(Header * const self)\n{\n    if (!self->is_shared) {\n        return !--self->reference_count;\n    }\n\n    uint64_t const reference_count =\n        atomic_fetch_sub_explicit(&self->reference_count, 1, __ATOMIC_RELEASE);\n\n#if 0\n    if (reference_count == 2) {\n        atomic_thread_fence(__ATOMIC_ACQUIRE);\n        self->is_shared = 0;\n    }\n#endif\n\n    return reference_count == 1;\n}\n\nuint8_t\nHeader_is_unique(Header const *const self)\n{\n#if 0\n    return !self->is_shared && self->reference_count == 1;\n#else\n    uint8_t ret;\n    if (self->is_shared)\n        ret = 0;\n    else\n        ret = self->reference_count == 1;\n    return ret;\n#endif\n}",
    "if (reference_count == 2) {",
    "self->is_shared = 0;",
    "void HFree(Header * self)\n{\n    if (Header_release(self))\n    {\n        delete self;\n    }\n}\n\nuint32_t __stdcall thread_proc(Header * self)\n{\n    wchar_t sz[16];\n    swprintf_s(sz, _countof(sz), L\"[%x]\", GetCurrentThreadId());\n    MessageBoxW(0, sz, L\"thread_proc\", MB_ICONINFORMATION);\n    HFree(self);\n    return 0;\n}\n\nvoid StartThread(Header * self)\n{\n    Header_acquire(self);\n    self->is_shared = TRUE;\n\n    // winapi, but does not change the essence\n    if (HANDLE hThread = CreateThread(0, 0, (PTHREAD_START_ROUTINE)thread_proc, self, 0, 0))\n    {\n        NtClose(hThread);\n    }\n    else\n    {\n        HFree(self);\n    }\n}\n\nvoid demo()\n{\n    if (Header* self = new Header)// c++, but does not change the essence\n    {\n        self->reference_count = 1;\n        self->is_shared = FALSE;\n\n        int n = 2;\n        do \n        {\n            MessageBoxW(0, L\"StartThread\", L\"demo\", MB_ICONINFORMATION);\n            StartThread(self);\n        } while (--n);\n\n        MessageBoxW(0, L\"1\", L\"demo\", MB_ICONINFORMATION);\n\n        HFree(self);\n        MessageBoxW(0, L\"exit\", L\"demo\", MB_ICONINFORMATION);\n    }\n}",
    "typedef struct Header {\n    long reference_count;\n} Header;\n\nvoid Header_acquire(Header *self) \n{\n    __atomic_fetch_add(&self->reference_count, 1, __ATOMIC_RELAXED);\n}\n\nvoid Header_release( Header * self) \n{\n    if (1 == __atomic_fetch_sub(&self->reference_count, 1, __ATOMIC_RELEASE)) {\n        delete self;// free memory\n    }\n}\n\nuint32_t __stdcall thread_proc(Header * self)\n{\n    wchar_t sz[16];\n    swprintf_s(sz, _countof(sz), L\"[%x]\", GetCurrentThreadId());\n    MessageBoxW(0, sz, L\"thread_proc\", MB_ICONINFORMATION);\n    Header_release(self);\n    return 0;\n}\n\nvoid StartThread(Header * self)\n{\n    Header_acquire(self);\n\n    if (HANDLE hThread = CreateThread(0, 0, (PTHREAD_START_ROUTINE)thread_proc, self, 0, 0))\n    {\n        NtClose(hThread);\n    }\n    else\n    {\n        Header_release(self);\n    }\n}\n\nvoid demo()\n{\n    if (Header* self = new Header)// c++, but does not change the essence\n    {\n        self->reference_count = 1;\n\n        int n = 2;\n        do \n        {\n            StartThread(self);\n        } while (--n);\n\n        MessageBoxW(0, L\"1\", L\"demo\", MB_ICONINFORMATION);\n\n        Header_release(self);\n        MessageBoxW(0, L\"exit\", L\"demo\", MB_ICONINFORMATION);\n    }\n}",
    "void foo(int array[])\nvoid foo(int *array)",
    "void foo(int array[])\nvoid foo(int *const array)",
    "use Devel::Peek qw( Dump );\n\nmy @a = \"a\" .. \"z\";\nDump( @a, 0 );\n\nfor ( 1 .. 3 ) {\n   shift @a;\n   Dump( @a, 0 );\n}\n\npush @a, \"!\";\nDump( @a, 0 );",
    "SV = PVAV(0x558c6cb91068) at 0x558c6cbbe1c0\n  REFCNT = 1\n  FLAGS = ()\n  ARRAY = 0x558c6cbaff30             # Pointer to the buffer\n  FILL = 25                          # Index to the last used element\n  MAX = 25                           # Index to the last allocated element\n  FLAGS = (REAL)\nSV = PVAV(0x558c6cb91068) at 0x558c6cbbe1c0\n  REFCNT = 1\n  FLAGS = ()\n  ARRAY = 0x558c6cbaff38 (offset=1)  # Pointer to the buffer (offset is calculated)\n  ALLOC = 0x558c6cbaff30             # Actual start of buffer (existed but not shown earlier)\n  FILL = 24                          # This had to be adjusted\n  MAX = 24                           # This had to be adjusted   \n  FLAGS = (REAL)\nSV = PVAV(0x558c6cb91068) at 0x558c6cbbe1c0\n  REFCNT = 1\n  FLAGS = ()\n  ARRAY = 0x558c6cbaff40 (offset=2)\n  ALLOC = 0x558c6cbaff30\n  FILL = 23\n  MAX = 23\n  FLAGS = (REAL)\nSV = PVAV(0x558c6cb91068) at 0x558c6cbbe1c0\n  REFCNT = 1\n  FLAGS = ()\n  ARRAY = 0x558c6cbaff48 (offset=3)\n  ALLOC = 0x558c6cbaff30\n  FILL = 22\n  MAX = 22\n  FLAGS = (REAL)\nSV = PVAV(0x558c6cb91068) at 0x558c6cbbe1c0\n  REFCNT = 1\n  FLAGS = ()\n  ARRAY = 0x558c6cbe75d0             # New buffer. All 20 remaining elements got copied.\n  FILL = 23\n  MAX = 48                           # We can no hold more. \n  FLAGS = (REAL)",
    "destroy_semaphore(&boat_semaphore);\ndestroy_semaphore(&boat_queue);\ndestroy_semaphore(&boat_ready);",
    "destroy_semaphore(boat_semaphore);\ndestroy_semaphore(boat_queue);\ndestroy_semaphore(boat_ready);",
    "info_args_command(const char *args, int from_tty)",
    "get_selected_frame()",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <termios.h>\n#include <unistd.h>\n\nint main(void) {\n  struct termios defaults = {0};\n  if (tcgetattr(STDIN_FILENO, &defaults)) return EXIT_FAILURE;\n  struct termios unbuffered = defaults;\n  unbuffered.c_lflag &= ~ICANON; // unset the ICANON (canonical mode) bits in c_lflag\n  if (tcsetattr(STDIN_FILENO, TCSANOW, &unbuffered)) return EXIT_FAILURE;\n\n  int c;\n  while ((c = getchar()) != 'q')\n    putchar(c);\n\n  tcsetattr(STDIN_FILENO, TCSANOW, &defaults);\n\n  return EXIT_SUCCESS;\n}",
    "if (test != 0 && test != 1)",
    "int main (void) {\n    int test = 0;\n\n    printf(\"enter number\\n\");\n    scanf(\"%d\", &test);\n\n    if (test != 0 && test != 1)\n    {\n            printf(\"Not 0 nor 1\\n\");\n    }\n    else\n    {\n            printf(\"0 or 1\\n\");\n    }\n\n    return 0;}",
    "struct MouseInfo { /* 7 members */ };\nstruct DisplayInfo { /* 16 members */ };\nstruct KeyboardInfo { /* 3 members */ };\nstruct AllInfo {\n    struct MouseInfo *m;\n    struct DisplayInfo *d;\n    struct KeyboardInfo *k;\n};",
    "int main(void) {\n    struct AllInfo *a = initAll();\n    mouse(a->m);\n    circle(a->d, a->m);\n    AllRelease(a);\n}",
    "while(ch = fgetc(in) != EOF)",
    "while( ch = ( fgetc(in) != EOF ) )",
    "while (  ( ch = fgetc( in ) ) != EOF )",
    "#include <stdio.h>\n\nint main( void )\n{\n    enum { N = 100 };\n    char buff[N];\n  \n    FILE *in = fopen( \"my_file.txt\", \"r\" );\n    \n    if ( in == NULL ) return 2;\n\n    int ch;\n    int i = 0;\n  \n    while ( i < N - 1 && ( ch = fgetc( in ) ) != EOF )\n    {\n        buff[i++] = ch;\n    }\n\n    buff[i] = '\\0';\n  \n    puts( buff );  \n        \n    fclose( in );\n    \n    return 0;\n}",
    "if ( in == NULL ) \n{\n    puts( \"File not found.\" );\n    return 2;\n}",
    "fdopen( fileno( stdout ), ... )",
    "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\n#include <sys/stat.h>\n#include <errno.h>\n\n#ifdef __linux__\n#define DIRECTORY_NAME \"TDL_File\"\n#include <unistd.h>\n#define _access access\n#define _strdup strdup\n#define _mkdir(_file)   mkdir(_file,0755)\n#define CLEAR   do { } while (0)\n#else\n#include <direct.h>\n#include <io.h>\n#define DIRECTORY_NAME \"C:\\\\Users\\\\abood\\\\OneDrive\\\\Desktop\\\\TDL File\"\n#define CLEAR   system(\"cls\")\n#endif\n\n#if 0\n#define INDEX_FILE \"index_data.txt\"\n#else\n#define INDEX_FILE \"index_data\"\n#endif\n#define MAX_FILENAME_LENGTH 256\n\nchar input[100];\nint choice = 0;\nchar listName[MAX_FILENAME_LENGTH];\nchar line[255];\nFILE *fh;\nbool keepGoing = true;\nchar fullPath[MAX_FILENAME_LENGTH];\n\n// NOTE/BUG: [inconsistently] using globals like this is problematic (a source\n// of bugs)\n#if 0\nchar **fileArray = NULL;\nint size = 0;\nint capacity = 0;\n#else\nstruct arr {\n    char **data;\n    int size;\n    int capacity;\n};\n#endif\n\nvoid\ndisplayFiles(const struct arr *arr)\n{\n    printf(\"\\nFiles and their indexes:\\n\");\n    if (arr->size == 0) {\n        printf(\"No files available.\\n\");\n        return;\n    }\n    for (int i = 0; i < arr->size; i++) {\n        printf(\"Index %d: %s\\n\", i, arr->data[i]);\n    }\n}\n\nvoid\naddFileToArray(struct arr *arr, const char *fileName)\n{\n    if (fileName == NULL || strlen(fileName) == 0) {\n        printf(\"Error: Invalid file name.\\n\");\n        return;\n    }\n\n    // Check if size is smaller or equals to the current capacity of elements\n    if (arr->size >= arr->capacity) {\n        // double the capacity number\n        arr->capacity *= 2;\n\n        // Resize the array\n        char **newArray = realloc(arr->data, arr->capacity * sizeof(char *));\n\n        // Check if realloc succeeded\n        if (newArray == NULL) {\n            perror(\"Failed to reallocate memory\");\n            exit(EXIT_FAILURE);\n        }\n\n        arr->data = newArray;\n    }\n\n    // Attempt to duplicate the file name and store it in the array\n    arr->data[arr->size] = _strdup(fileName);\n    if (arr->data[arr->size] == NULL) {\n        perror(\"Failed to duplicate file name\");\n        exit(EXIT_FAILURE);\n    }\n\n    // Increase the size of the file array\n    arr->size++;\n}\n\nvoid\nfreeFileArray(struct arr *arr)\n{\n    if (arr->data != NULL) {\n        for (int i = 0; i < arr->size; i++) {\n            free(arr->data[i]);\n        }\n\n        free(arr->data);\n        arr->data = NULL;\n\n#if 1\n        arr->size = 0;\n        arr->capacity = 0;\n#endif\n    }\n}\n\nvoid\nprependDirectory(char *fullPath, const char *fileName)\n{\n    snprintf(fullPath, MAX_FILENAME_LENGTH, \"%s/%s.txt\",\n        DIRECTORY_NAME, fileName);\n}\n\nvoid\nsaveIndexes(const struct arr *arr)\n{\n    char indexPath[MAX_FILENAME_LENGTH];\n\n    // Prepend directory to index file name\n    prependDirectory(indexPath, INDEX_FILE);\n\n    FILE *file = fopen(indexPath, \"w\");\n\n    if (!file) {\n        perror(\"Failed to open index file for writing\");\n        return;\n    }\n\n    for (int i = 0; i < arr->size; i++) {\n        fprintf(file, \"%s\\n\", arr->data[i]);\n    }\n\n    fclose(file);\n}\n\nvoid\nFcreateList(struct arr *arr)\n{\n    scanf(\"%s\", listName);\n    getchar();\n\n    // Prepend directory to file name\n    prependDirectory(fullPath, listName);\n\n    fh = fopen(fullPath, \"w\");\n    if (fh == NULL) {\n        printf(\"Error creating file '%s' -- %s\\n\",fullPath,strerror(errno));\n        return;\n    }\n\n    CLEAR;\n    fclose(fh);\n\n    addFileToArray(arr, fullPath);\n    printf(\"File '%s' created and stored at index %d.\\n\",\n        fullPath, arr->size - 1);\n\n    CLEAR;\n\n    // Display all files with their indexes\n    displayFiles(arr);\n\n    // Save indexes to the persistent file\n    saveIndexes(arr);\n\n    // Free allocated memory\n    freeFileArray(arr);\n}\n\nvoid\nensureDirectoryExists(void)\n{\n\n    // Check if directory exists\n    if (_access(DIRECTORY_NAME, 0) == -1) {\n        // Create the directory if it doesn't exist\n        if (_mkdir(DIRECTORY_NAME) != 0) {\n            perror(\"Failed to create directory\");\n            exit(EXIT_FAILURE);\n        }\n    }\n}\n\nvoid\ninitializeFileArray(struct arr *arr)\n{\n    // The Array starts with 2\n    arr->capacity = 2;\n\n    // Allocate memory for the array of pointers\n    arr->data = malloc(arr->capacity * sizeof(char *));\n\n    // Check if malloc succeeded\n    if (arr->data == NULL) {\n        perror(\"Failed to allocate memory for file array\");\n        exit(EXIT_FAILURE);\n    }\n\n// NOTE/FIX: don't rely on caller doing this\n#if 1\n    arr->size = 0;\n#endif\n}\n\nvoid\nloadIndexes(struct arr *arr)\n{\n    char indexPath[MAX_FILENAME_LENGTH];\n\n    // Prepend directory to index file name\n    prependDirectory(indexPath, INDEX_FILE);\n\n    FILE *file = fopen(indexPath, \"r\");\n\n    if (!file) {\n        printf(\"No existing index file found. Initializing empty file array.\\n\");\n        // Ensure the file array is initialized\n        initializeFileArray(arr);\n#if 0\n        arr->size = 0;\n#endif\n        return;\n    }\n\n    char buffer[MAX_FILENAME_LENGTH];\n\n#if 0\n    arr->size = 0;\n#endif\n    initializeFileArray(arr);\n\n    while (fgets(buffer, sizeof(buffer), file)) {\n        buffer[strcspn(buffer, \"\\n\")] = '\\0';\n        addFileToArray(arr, buffer);\n    }\n\n    fclose(file);\n}\n\nint\nmain(void)\n{\n\n// NOTE/FIX: eliminate [critical] globals\n#if 1\n    static struct arr fileArray;\n    struct arr *arr = &fileArray;\n#endif\n\n    ensureDirectoryExists();\n\n    loadIndexes(arr);\n\n    do {\n        printf(\"1. Create a new List\\n\");\n        printf(\"2. Add a new Task\\n\");\n        printf(\"3. Show your List\\n\");\n\n        scanf(\"%d\", &choice);\n        getchar();\n\n        switch (choice) {\n        case 1:\n            printf(\"Type a name for your list\\n\");\n            FcreateList(arr);\n            printf(\"List has been created successfully\\n\");\n            break;\n        case 2:\n            printf(\"Blank\\n\");\n            break;\n        case 3:\n            printf(\"Blank\\n\");\n            break;\n        default:\n            printf(\"Error opening the file\\n\");\n            break;\n        }\n\n        printf(\"\\nPress A to return to main Menu. Press any other Key To Exit: \");\n#if 0\n        scanf(\" %c\", &input);\n#else\n        scanf(\" %c\", input);\n#endif\n\n        CLEAR;\n    } while (input[0] == 'A' || input[0] == 'a');\n\n    return 0;\n}",
    "#if 0\n// old code\n#else\n// new code\n#endif\n\n#if 1\n// new code\n#endif",
    "STR(if)\nSTR(then)\nSTR(else)\nSTR(elseif)",
    "#ifndef STR_ENUM_H\n#define STR_ENUM_H\n#define STR(x) #x\nconst char* str[] = {\n    #include \"strlist.h\"\n    \"\" };\n#undef STR\n#endif",
    "#define STR(x) str_##x,\nenum strenum = {\n   #include \"strlist.h\"\n    str_max };\n#undef STR\nextern const char* str[];",
    "#include \"strdef.h\"\n...\nvoid *gettok() {\n  ...\n  return str[str_if];\n\n...\ntok = gettok();\n...\nif (tok == str[str_if]) {...}",
    "void *gettok() {\n  ...\n  return intern(\"if\");\n}\n...\ntok = gettok();\n...\nif (tok == intern(\"if\")) {...}",
    "#include <inttypes.h>\n\n#define TEN_M ((uint32_t)1024 * 1024)  // or 1000000 or some other multiple of 64\n#define BLOCK 64\n#define TEN_M_BLOCKS (TEN_M/BLOCK)\n\n#define DP_BUF_RSV_SIZE       ((uint32_t)(0.3 * TEN_M_BLOCKS) * 64) // 0.3M\n#define DP_BUF_UL_SIZE        ((uint32_t)(3.5 * TEN_M_BLOCKS) * 64) // 3.5M\n#define DP_BUF_DL_SIZE        ((uint32_t)(3.7 * TEN_M_BLOCKS) * 64) // 3.7M\n#define DP_BUF_COMMON_SIZE    (TEN_M - DP_BUF_RSV_SIZE - DP_BUF_UL_SIZE - DP_BUF_DL_SIZE) // Remainder",
    "#define MAX_SZ 10485760UL\n#define BLOCK_SZ 64UL\n\n#define DP_BUF_RSV_SIZE     (256 * 16 * BLOCK_SZ)\n#define DP_BUF_UL_SIZE      (3072 * 16 * BLOCK_SZ)\n#define DP_BUF_DL_SIZE      (4096 * 16 * BLOCK_SZ)\n#define DP_BUF_COMMON_SIZE  (2048 * 16 * BLOCK_SZ)\n\n#if ((DP_BUF_RSV_SIZE + DP_BUF_UL_SIZE + DP_BUF_DL_SIZE + DP_BUF_COMMON_SIZE) > MAX_SZ)\n#error Too large\n\n// Eventually\n#elif ((DP_BUF_RSV_SIZE + DP_BUF_UL_SIZE + DP_BUF_DL_SIZE + DP_BUF_COMMON_SIZE) % BLOCK_SZ)\n#error Not multiple of 64\n#endif",
    "#define VAR(_typ, _nam)  _typ##_##_nam",
    "int VAR(int, a);",
    "int int_a;",
    "#define VAR(_typ) _typ##",
    "cpp mysource.c",
    "gcc -E mysource.c",
    "$ gcc -E - <<EOF  # - is used to represent standard input\n> #define VAR(int) int\n>    VAR(int)a;\n> VAR(\"hello\")world;\n> EOF\n# 0 \"<stdin>\"\n# 0 \"<built-in>\"\n# 0 \"<command-line>\"\n# 1 \"/usr/include/stdc-predef.h\" 1 3 4\n# 0 \"<command-line>\" 2\n# 1 \"<stdin>\"\n\n    int a;\n\"hello\"world;\n$ _",
    "// test.c\n// Is `char` signed?\n\n#include <stdio.h>                     // printf\n\nint main(void)\n{\n  char c = (char)128;\n  printf(\"c is %d, so char is %s\\n\",\n         (int)c,\n         (c > 0? \"unsigned\" : \"signed\"));\n  return 0;\n}\n\n// EOF",
    "$ clang -Wall -fsigned-char test.c && ./a.out\nc is -128, so char is signed\n$ clang -Wall -fno-signed-char test.c && ./a.out\nc is 128, so char is unsigned\n$ clang -Wall --signed-char test.c && ./a.out\nc is -128, so char is signed\n$ clang -Wall -funsigned-char test.c && ./a.out\nc is 128, so char is unsigned\n$ clang -Wall -fno-unsigned-char test.c && ./a.out\nc is -128, so char is signed\n$ clang -Wall --unsigned-char test.c && ./a.out\nc is 128, so char is unsigned",
    "def _signed_char : Flag<[\"--\"], \"signed-char\">, Alias<fsigned_char>;",
    "// -fsigned-char is default.\n  if (const Arg *A = Args.getLastArg(options::OPT_fsigned_char,\n                                     options::OPT_fno_signed_char,\n                                     options::OPT_funsigned_char,\n                                     options::OPT_fno_unsigned_char)) {\n    if (A->getOption().matches(options::OPT_funsigned_char) ||\n        A->getOption().matches(options::OPT_fno_signed_char)) {\n      CmdArgs.push_back(\"-fno-signed-char\");\n    }\n  } else if (!isSignedCharDefault(T)) {\n    CmdArgs.push_back(\"-fno-signed-char\");\n  }",
    "defm signed_char : BoolFOption<\"signed-char\",\n  LangOpts<\"CharIsSigned\">, DefaultTrue,\n         // ^^^^^^^^^^^^\n         //  effect is to control this language option\n  NegFlag<SetFalse, [], [ClangOption, CC1Option], \"char is unsigned\">,\n                                   // ^^^^^^^^^\n                                   // recognized by clang -cc1\n  PosFlag<SetTrue, [], [ClangOption], \"char is signed\">>,\n  ShouldParseIf<!strconcat(\"!\", open_cl.KeyPath)>;",
    "buff_size = buffer_hgt * buffer_wdth * sizeof(TCHAR);",
    "#define _CRT_SECURE_NO_WARNINGS\n#define WIN32_LEAN_AND_MEAN \n    \n#include <windows.h>\n#include <stdio.h>\n#include <stdlib.h>\n    \nvoid fail(const char *msg) {\n    printf(\"%s\\n\", msg);\n    exit(1);\n}\n    \nint main(void) \n{\n    int i;\n    HANDLE hConsole;\n    LPTSTR buf;\n    COORD coord = {0, 0};\n    DWORD nread = 0, buflen, width, depth;\n    CONSOLE_SCREEN_BUFFER_INFO info = {0};\n\n    // fill the console buffer\n    for(i = 10000; i > 0; i--)\n        printf(\"%d\\n\", i);\n    fflush(stdout);\n    \n    // get the console handle\n    hConsole = GetStdHandle(STD_OUTPUT_HANDLE);\n    if(hConsole == INVALID_HANDLE_VALUE)\n        fail(\"Unable to get console handle\");\n    \n    // get the console sizing\n    if(!GetConsoleScreenBufferInfo(hConsole, &info))\n        fail(\"Cannot get console size\");\n    width = info.dwSize.X;\n    depth = info.dwSize.Y;\n    \n    // allocate memory\n    buflen =  width * depth;\n\n    // GS UPDATE: factor in sizeof(TCHAR)\n    buf = malloc(buflen * sizeof(TCHAR));  \n    if(buf == NULL)\n        fail(\"Cannot allocate buffer memory\");\n    \n    // collect the console buffer\n    // Note that parameter buflen still wants to be a product of only  \n    //  width and height -- sizeof(TCHAR) is Not a factor.\n    if(!ReadConsoleOutputCharacter(hConsole, buf, buflen, coord, &nread))\n        fail(\"Cannot read console buffer\");\n    \n    // results\n    printf(\"width  = %lu\\n\", width);\n    printf(\"depth  = %lu\\n\", depth);\n    printf(\"buflen = %lu\\n\", buflen);\n    printf(\"nread  = %lu\\n\", (size_t)nread);\n    printf(\"sizeof(TCHAR) = %lu\\n\", sizeof(TCHAR)); //GS Added\n    \n    // output to file . . . removed\n    free(buf);\n    return 0;\n}",
    "*((volatile unsigned int *)0xDEADBEEF) = 0x00;",
    "void* gcLocalRealloc(gc_t *gc, void* ptr, size_t SIZE) {\n    if (SIZE == 0) {\n        gcFree(ptr);\n        return ptr = NULL;\n    }\n    \n    assert(SIZE > 0);\n    if (ptr == NULL) return gcLocalMalloc(gc, SIZE);\n\n    int old_size = gcLocalPop(gc, ptr);\n    void* old = ptr;\n    \n    ptr = realloc(ptr, SIZE);\n\n    if (ptr != NULL) {\n        gcLocalPush(gc, ptr, SIZE);\n        return ptr;\n    } else {\n        gcLocalPush(gc, old, old_size);\n        return old;\n    }\n}",
    "gcLocalPop(gc);  /* we are not interested in the old value */\n    gcLocalPush(gc, ptr);",
    "void *gcLocalPop(GarbageCollector gc);",
    "__attribute__((naked))\nvoid syscall_create_thread(void (*f) (void *), void * args, unsigned int arg_size) \n{\n    asm(\"mov r7, #\" TOSTRING(SYSCALL_ID_CREATE_THREAD) :::\"r7\");\n    asm(\"SVC #0\");\n    asm(\"RET\");\n}",
    "#include <stdlib.h>\n#define STRINGIFY(x) #x\n#define TOSTRING(x) STRINGIFY(x)\n#define SYSCALL_ID_CREATE_THREAD 2\n\n__attribute__((naked))\nvoid syscall_create_thread(void (*f) (void *), void * args, unsigned int arg_size) \n{\n    asm(\"mov r7, #\" TOSTRING(SYSCALL_ID_CREATE_THREAD) :::\"r7\");\n    asm(\"SVC #0\");\n    asm(\"RET\");\n}\n\n\nvoid callback(void* args)\n{\n    return;\n}\n\nvoid caller() {\n    int arg = 8;\n    syscall_create_thread(callback, &arg, sizeof (int));\n}",
    "callback:\n        bx      lr\nsyscall_create_thread:\n        mov r7, #2\n        SVC #0\n        RET\ncaller:\n        str     lr, [sp, #-4]!\n        sub     sp, sp, #12\n        mov     r3, #8\n        str     r3, [sp, #4]\n        mov     r2, #4              // r2=sizeof(int)\n        add     r1, sp, r2          // r1 = address of the local `arg` variable\n        ldr     r0, .L5             // r0 = address of callback function\n        bl      syscall_create_thread\n        add     sp, sp, #12\n        ldr     lr, [sp], #4\n        bx      lr\n.L5:\n        .word   callback",
    "PHP_FUNCTION(my_openssl_public_decrypt) {\n    zend_string *data, *public_key;\n    zval func_name, result;\n    zval params[3];\n    zval decrypted_zval;\n\n    if (zend_parse_parameters(ZEND_NUM_ARGS(), \"SS\", &data, &public_key) == FAILURE) {\n        RETURN_FALSE;\n    }\n\n    // Decode Base64\n    zend_string *raw_data = php_base64_decode_ex((const unsigned char *)(ZSTR_VAL(data)), ZSTR_LEN(data), 0);\n    if (!raw_data) {\n        php_error_docref(NULL, E_WARNING, \"Failed to decode Base64 data\");\n        RETURN_FALSE;\n    }\n\n    // Prepare parameters\n    ZVAL_STR(&params[0], raw_data);\n    ZVAL_NULL(&decrypted_zval);\n    ZVAL_NEW_REF(&params[1], &decrypted_zval);\n    ZVAL_STR(&params[2], public_key);\n\n    // Call openssl_public_decrypt\n    ZVAL_STR(&func_name, zend_string_init(\"openssl_public_decrypt\", strlen(\"openssl_public_decrypt\"), 0));\n    if (call_user_function(EG(function_table), NULL, &func_name, &result, 3, params) == FAILURE) {\n        php_error_docref(NULL, E_WARNING, \"Failed to call openssl_public_decrypt\");\n        RETURN_FALSE;\n    }\n\n    // Check if decryption was successful\n    if (Z_TYPE(result) != IS_TRUE) {\n        php_error_docref(NULL, E_WARNING, \"openssl_public_decrypt failed\");\n        RETURN_FALSE;\n    }\n\n    // Verify decrypted data\n    if (Z_TYPE_P(Z_REFVAL_P(&params[1])) != IS_STRING) {\n        php_error_docref(NULL, E_WARNING, \"Decrypted data is not a string\");\n        RETURN_FALSE;\n    }\n\n    // Return decrypted string\n    RETVAL_STR(Z_STR_P(Z_REFVAL_P(&params[1])));\n}",
    "meson devenv -C builddir",
    "@Entity\n@Getter\n@Setter\n@Table(name = \"table\")\n@SequenceGenerator(\n        name = \"name_seq\",\n        sequenceName = \"name_seq\",\n        allocationSize = 1)\npublic class EntityClass {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"name_id_seq\")\n    private Long id;",
    "INSERT\nINTO\n    plants_voc (\n    ipni,\n    full_name_plain,\n    full_name_no_authors_plain,\n    plant_name,\n    family,\n    genus,\n    species,\n    valid_nomenclature,\n    rank,\n    leaf_habitus,\n    created_datetime_utc,\n    updated_datetime_utc\n\n)\nVALUES (\n        'urn:lsid:ipni.org:names:294902-1',\n        'Alnus cordata (Loisel.) Duby',\n        'Alnus cordata',\n        'cordata',\n        'Betulaceae',\n        'Alnus',\n        'cordata',\n        TRUE,\n        'SPECIES',\n        'DECIDUOUS',\n        NOW(),\n        NOW()\n       ) RETURNING id;",
    "var zdt = ZonedDateTime.of( LocalDateTime.of(1899, 12, 31, 23, 9, 20, 0), ZoneOffset.UTC);\nSystem.out.println(ZoneId.of(\"Europe/Paris\").getRules().getOffset(zdt.toInstant()));\nSystem.out.println(ZoneId.of(\"GMT+1\").getRules().getOffset(zdt.toInstant()));",
    "+00:09:21\n+01:00",
    "System.out.println(ZoneId.of(\"Europe/Paris\").getRules().getTransitions());",
    "ZoneId\n        .of ( \"Europe/Paris\" )\n        .getRules ( )\n        .getTransitions ( )\n        .forEach (\n                ( ZoneOffsetTransition rule ) -> System.out.println ( rule.toString ( ) )\n        );",
    "Transition[Overlap at 1911-03-11T00:00+00:09:21 to Z]\nTransition[Gap at 1916-06-14T23:00Z to +01:00]\nTransition[Overlap at 1916-10-02T00:00+01:00 to Z]\nTransition[Gap at 1917-03-24T23:00Z to +01:00]\nTransition[Overlap at 1917-10-08T00:00+01:00 to Z]\nTransition[Gap at 1918-03-09T23:00Z to +01:00]\nTransition[Overlap at 1918-10-07T00:00+01:00 to Z]\nTransition[Gap at 1919-03-01T23:00Z to +01:00]\nTransition[Overlap at 1919-10-06T00:00+01:00 to Z]\nTransition[Gap at 1920-02-14T23:00Z to +01:00]\nTransition[Overlap at 1920-10-24T00:00+01:00 to Z]\nTransition[Gap at 1921-03-14T23:00Z to +01:00]\nTransition[Overlap at 1921-10-26T00:00+01:00 to Z]\nTransition[Gap at 1922-03-25T23:00Z to +01:00]\nTransition[Overlap at 1922-10-08T00:00+01:00 to Z]\nTransition[Gap at 1923-05-26T23:00Z to +01:00]\nTransition[Overlap at 1923-10-07T00:00+01:00 to Z]\nTransition[Gap at 1924-03-29T23:00Z to +01:00]\nTransition[Overlap at 1924-10-05T00:00+01:00 to Z]\nTransition[Gap at 1925-04-04T23:00Z to +01:00]\nTransition[Overlap at 1925-10-04T00:00+01:00 to Z]\nTransition[Gap at 1926-04-17T23:00Z to +01:00]\nTransition[Overlap at 1926-10-03T00:00+01:00 to Z]\nTransition[Gap at 1927-04-09T23:00Z to +01:00]\nTransition[Overlap at 1927-10-02T00:00+01:00 to Z]\nTransition[Gap at 1928-04-14T23:00Z to +01:00]\nTransition[Overlap at 1928-10-07T00:00+01:00 to Z]\nTransition[Gap at 1929-04-20T23:00Z to +01:00]\nTransition[Overlap at 1929-10-06T00:00+01:00 to Z]\nTransition[Gap at 1930-04-12T23:00Z to +01:00]\nTransition[Overlap at 1930-10-05T00:00+01:00 to Z]\nTransition[Gap at 1931-04-18T23:00Z to +01:00]\nTransition[Overlap at 1931-10-04T00:00+01:00 to Z]\nTransition[Gap at 1932-04-02T23:00Z to +01:00]\nTransition[Overlap at 1932-10-02T00:00+01:00 to Z]\nTransition[Gap at 1933-03-25T23:00Z to +01:00]\nTransition[Overlap at 1933-10-08T00:00+01:00 to Z]\nTransition[Gap at 1934-04-07T23:00Z to +01:00]\nTransition[Overlap at 1934-10-07T00:00+01:00 to Z]\nTransition[Gap at 1935-03-30T23:00Z to +01:00]\nTransition[Overlap at 1935-10-06T00:00+01:00 to Z]\nTransition[Gap at 1936-04-18T23:00Z to +01:00]\nTransition[Overlap at 1936-10-04T00:00+01:00 to Z]\nTransition[Gap at 1937-04-03T23:00Z to +01:00]\nTransition[Overlap at 1937-10-03T00:00+01:00 to Z]\nTransition[Gap at 1938-03-26T23:00Z to +01:00]\nTransition[Overlap at 1938-10-02T00:00+01:00 to Z]\nTransition[Gap at 1939-04-15T23:00Z to +01:00]\nTransition[Overlap at 1939-11-19T00:00+01:00 to Z]\nTransition[Gap at 1940-02-25T02:00Z to +01:00]\nTransition[Gap at 1940-06-14T23:00+01:00 to +02:00]\nTransition[Overlap at 1942-11-02T03:00+02:00 to +01:00]\nTransition[Gap at 1943-03-29T02:00+01:00 to +02:00]\nTransition[Overlap at 1943-10-04T03:00+02:00 to +01:00]\nTransition[Gap at 1944-04-03T02:00+01:00 to +02:00]\nTransition[Overlap at 1944-10-08T01:00+02:00 to +01:00]\nTransition[Gap at 1945-04-02T02:00+01:00 to +02:00]\nTransition[Overlap at 1945-09-16T03:00+02:00 to +01:00]\nTransition[Gap at 1976-03-28T01:00+01:00 to +02:00]\nTransition[Overlap at 1976-09-26T01:00+02:00 to +01:00]\nTransition[Gap at 1977-04-03T02:00+01:00 to +02:00]\nTransition[Overlap at 1977-09-25T03:00+02:00 to +01:00]\nTransition[Gap at 1978-04-02T02:00+01:00 to +02:00]\nTransition[Overlap at 1978-10-01T03:00+02:00 to +01:00]\nTransition[Gap at 1979-04-01T02:00+01:00 to +02:00]\nTransition[Overlap at 1979-09-30T03:00+02:00 to +01:00]\nTransition[Gap at 1980-04-06T02:00+01:00 to +02:00]\nTransition[Overlap at 1980-09-28T03:00+02:00 to +01:00]\nTransition[Gap at 1981-03-29T02:00+01:00 to +02:00]\nTransition[Overlap at 1981-09-27T03:00+02:00 to +01:00]\nTransition[Gap at 1982-03-28T02:00+01:00 to +02:00]\nTransition[Overlap at 1982-09-26T03:00+02:00 to +01:00]\nTransition[Gap at 1983-03-27T02:00+01:00 to +02:00]\nTransition[Overlap at 1983-09-25T03:00+02:00 to +01:00]\nTransition[Gap at 1984-03-25T02:00+01:00 to +02:00]\nTransition[Overlap at 1984-09-30T03:00+02:00 to +01:00]\nTransition[Gap at 1985-03-31T02:00+01:00 to +02:00]\nTransition[Overlap at 1985-09-29T03:00+02:00 to +01:00]\nTransition[Gap at 1986-03-30T02:00+01:00 to +02:00]\nTransition[Overlap at 1986-09-28T03:00+02:00 to +01:00]\nTransition[Gap at 1987-03-29T02:00+01:00 to +02:00]\nTransition[Overlap at 1987-09-27T03:00+02:00 to +01:00]\nTransition[Gap at 1988-03-27T02:00+01:00 to +02:00]\nTransition[Overlap at 1988-09-25T03:00+02:00 to +01:00]\nTransition[Gap at 1989-03-26T02:00+01:00 to +02:00]\nTransition[Overlap at 1989-09-24T03:00+02:00 to +01:00]\nTransition[Gap at 1990-03-25T02:00+01:00 to +02:00]\nTransition[Overlap at 1990-09-30T03:00+02:00 to +01:00]\nTransition[Gap at 1991-03-31T02:00+01:00 to +02:00]\nTransition[Overlap at 1991-09-29T03:00+02:00 to +01:00]\nTransition[Gap at 1992-03-29T02:00+01:00 to +02:00]\nTransition[Overlap at 1992-09-27T03:00+02:00 to +01:00]\nTransition[Gap at 1993-03-28T02:00+01:00 to +02:00]\nTransition[Overlap at 1993-09-26T03:00+02:00 to +01:00]\nTransition[Gap at 1994-03-27T02:00+01:00 to +02:00]\nTransition[Overlap at 1994-09-25T03:00+02:00 to +01:00]\nTransition[Gap at 1995-03-26T02:00+01:00 to +02:00]\nTransition[Overlap at 1995-09-24T03:00+02:00 to +01:00]\nTransition[Gap at 1996-03-31T02:00+01:00 to +02:00]\nTransition[Overlap at 1996-10-27T03:00+02:00 to +01:00]\nTransition[Gap at 1997-03-30T02:00+01:00 to +02:00]\nTransition[Overlap at 1997-10-26T03:00+02:00 to +01:00]",
    "ZonedDateTime\n.of( \n    LocalDateTime.of( 1899, 12, 31, 23, 9, 20, 0 ), \n    ZoneOffset.UTC \n)\n.withZoneSameInstant( \n    ZoneId.of( \"Europe/Paris\" ) \n)",
    "OffsetDateTime\n.of( \n    LocalDateTime.of( 1899, 12, 31, 23, 9, 20, 0 ), \n    ZoneOffset.UTC \n)                                   // Returns an `OffsetDateTime` object. \n.withZoneSameInstant( \n    ZoneId.of( \"Europe/Paris\" )     // Returns an `ZonedDateTime` object. \n)",
    ".requestMatchers(\"/error\").permitAll().",
    "org.springframework.web.bind.annotation.RequestMapping;\norg.springframework.web.bind.annotation.RestController;",
    "mainClass.set('webserver.blog.BlogApplication');",
    "public interface PaymentMongoLogDetailRepository extends MongoRepository<PaymentMongoLogDetail, String> {\n    @Query(value = \"{'$and' : [{'createdOn':{'$gt': ?0,'$lte': ?1}},{'stripeResponse.sessionId':/cs_live/},{'stripeResponse.status':'success'}]}\",count = true)\n    Long findAllSuccessCounts(Date from,Date to);\n}",
    "export HOST_MOUNT_PATH=~/.m2\nexport DOCKER_MOUNT_PATH=/root/.m2/",
    "services:\n  dataflow-server:\n    volumes:\n      - ~/.m2:/root/.m2/",
    "@Bean\npublic Module jacksonTemplateModule() {\n    SimpleModule module = new SimpleModule();\n    module.addSerializer(this);\n    return module;\n}",
    "struct s { int n; double d[]; };",
    "int m = /* some value */;\nstruct s *p = malloc(sizeof (struct s) + sizeof (double [m]));",
    "struct { int n; double d[m]; } *p;",
    "struct blob {\n    size_t length;\n    unsigned char data[];\n};",
    "class blob extends Structure {\n    int length;\n    byte[] data = new byte[1];\n    public blob(int length) {\n        this.length = length;\n        this.data = new byte[length];\n        allocateMemory();\n    }\n    public blob(Pointer p) {\n        super(p);\n        this.length = p.readInt(0);\n        this.data = new byte[this.length];\n        read();\n    }\n}",
    "@FieldOrder({\"type\", \"height\", \"width\", \"colors\", \"bits\", \"data_size\", \"data\"})\npublic class LibrawProcessedImage extends Structure {\n    public int type; // enum LibRaw_image_formats\n    public short height;\n    public short width;\n    public short colors;\n    public short bits;\n    public int data_size;\n    public byte[] data = new byte[1];\n\n    public LibrawProcessedImage(Pointer p) {\n        super(p);\n        this.data_size = p.getInt(fieldOffset(\"data_size\"));\n        this.data = new byte[this.data_size];\n        read();\n    }\n\n    // consider a constructor with size argument as per the above example\n}",
    "@Repository\ninterface BookRepository extends JpaRepository<Book, Long>\n{\n    @Query(\"Select b from Book b join fetch b.categories\")\n    List<Book> findAllWithCategories();\n}",
    "Set<CategoryResponseDto> categoryDtos = new HashSet<>();\nfor (Category category : book.getCategories())\n{   categoryDtos.add(this.categoryMapperService.toDataTransferObject(category));\n}",
    "WebDriver driver = new ChromeDriver();\ndriver.get(\"https://play1.automationcamp.ir/forms.html\");\n\ndriver.findElement(By.id(\"validationCustom03\")).sendKeys(\"City\");\ndriver.findElement(By.id(\"validationCustom04\")).sendKeys(\"State\");\ndriver.findElement(By.id(\"validationCustom05\")).sendKeys(\"Zip\");\ndriver.findElement(By.id(\"invalidCheck\")).click();\nWebElement submitFormButton = driver.findElement(By.xpath(\"//button[text()='Submit Form']\"));\nsubmitFormButton.click();\n\nWebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\nwait.until(ExpectedConditions.stalenessOf(submitFormButton));\nboolean cityErrorIsDisplayed = driver.findElement(By.id(\"invalid_city\")).isDisplayed();\nboolean stateErrorIsDisplayed = driver.findElement(By.id(\"invalid_state\")).isDisplayed();\nboolean zipErrorIsDisplayed = driver.findElement(By.id(\"invalid_zip\")).isDisplayed();\nboolean termsErrorIsDisplayed = driver.findElement(By.id(\"invalid_terms\")).isDisplayed();\n\nAssert.assertFalse(cityErrorIsDisplayed, \"Verify City error is not displayed\");\nAssert.assertFalse(stateErrorIsDisplayed, \"Verify State error is not displayed\");\nAssert.assertFalse(zipErrorIsDisplayed, \"Verify Zip error is not displayed\");\nAssert.assertFalse(termsErrorIsDisplayed, \"Verify Terms error is not displayed\");\n\ndriver.quit();",
    "import javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\npublic class VariableCssApp extends Application {\n\n    private static final String CSS_DATA_URL_TYPE = \"data:text/css,\";\n    private static final String CSS = CSS_DATA_URL_TYPE +\n            \"\"\"\n            .button {\n                -fx-padding: LABEL_PADDING_TOP LABEL_PADDING_RIGHT LABEL_PADDING_BOTTOM LABEL_PADDING_LEFT;\n                -fx-background-color: palegreen;\n            }\n            \"\"\"\n                    .replace(\"LABEL_PADDING_TOP\", \"10\")\n                    .replace(\"LABEL_PADDING_RIGHT\", \"20\")\n                    .replace(\"LABEL_PADDING_BOTTOM\", \"30\")\n                    .replace(\"LABEL_PADDING_LEFT\", \"40\");\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n\n    @Override\n    public void start(Stage stage) {\n        VBox root = new VBox(new Button(\"Button\"));\n        root.getStylesheets().add(CSS);\n        Scene scene = new Scene(root, 100, 100);\n        stage.setScene(scene);\n        stage.show();\n\n        System.out.println(\"Applied CSS:\\n\" + CSS);\n    }\n}",
    "//...\n\npublic class Game {\n    //...\n    protected Menu menu;\n    //...\n    public Game(Menu menu) {\n        this.menu = menu;\n    }\n    //...\n}",
    "//...\npublic class Menu {\n    //...\n    protected Game game;\n    //...\n    public Menu() {\n    }\n    //...\n    public start() {\n        this.game = new Game(this);\n        game.start();\n    }\n}",
    "Menu menu = new Menu();",
    "@Route(value = \"\")\nclass MainView() : FlexLayout(), HasUrlParameter<String>, AfterNavigationObserver {\n\n    val paramDisplay: TextField = TextField()\n    val mainDisplay: TextField = TextField()\n\n    init {\n        flexDirection = FlexDirection.COLUMN\n        addClassName(LumoUtility.Gap.MEDIUM)\n        add(\n            paramDisplay,\n            mainDisplay.apply {\n                value = \"Init\"\n            },\n            Button(\"Nav\").apply {\n                addClickListener {\n                    ui.ifPresent { it.navigate(MainView::class.java, counter.getAndIncrement().toString()) }\n                }\n            }\n        )\n    }\n\n    override fun setParameter(event: BeforeEvent?, parameter: String?) {\n        paramDisplay.value = parameter ?: \"n/a\"\n    }\n\n    override fun afterNavigation(event: AfterNavigationEvent?) {\n        mainDisplay.value = Instant.now().toString()\n    }\n\n}",
    "org.apache.commons.io.FileUtils.writeByteArrayToFile(\n        new File(\"newfile.jpg\"), bytearrayofdata);",
    "ObjectMapper objectMapper = new ObjectMapper();\nString s = \"\"\"\n           {\n               \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n               \"TC_01\": {\n               \"mailingId\": \"00\"\n                        }\n           }\n           \"\"\";\n\n//conversion to ObjectNode through a previous conversion of json to a JsonNode\nObjectNode root = objectMapper.readTree(s).deepCopy();\nroot.remove(\"$schema\");\nTypeReference<EnumMap<TestCaseEnum, MailingRequest>> ref = new TypeReference<>(){};\nEnumMap<TestCaseEnum, MailingRequest> mailingRequestCache = objectMapper.convertValue(root, ref);\n//ok it prints {TC_01=MailingRequest(mailingId=00)} as expected\nSystem.out.println(mailingRequestCache);",
    "<Routing name=\"RoutingAppender\">\n  <Routes pattern=\"$${ctx:log-route}\">\n    <Route>\n      <RollingRandomAccessFile\n          name=\"${ctx:log-route:-MAIN}RollingFile\"\n          fileName=\"log/${lower:${ctx:log-route:-MAIN}}/${lower:${ctx:log-route:-MAIN}}.log\"\n          filePattern=\"log/${lower:${ctx:log-route:-MAIN}}/${lower:${ctx:log-route:-MAIN}}.log.%i\">\n        <PatternLayout pattern=\"${newPattern}\"/>\n        <Policies>\n          <OnStartupTriggeringPolicy/>\n          <SizeBasedTriggeringPolicy size=\"50 MB\"/>\n        </Policies>\n        <DefaultRolloverStrategy fileIndex=\"min\" max=\"100\"/>\n      </RollingRandomAccessFile>\n    </Route>\n  </Routes>\n</Routing>",
    "public static CallSite makeConcatWithConstants(\n    MethodHandles.Lookup lookup,\n    String name,\n    MethodType concatType,\n    String recipe,\n    Object... constants\n)",
    "CallSite callSite = StringConcatFactory.makeConcatWithConstants(..., ..., ..., \"Hello\\u0001\\u0001\\u0001\\u0001world!\");\ncallSite.getTarget().invoke(i, compute(), b, l);",
    "private <T> T bar() throws Exception {\n  throw new Exception(...);\n}",
    "@Data\n@Getter\n@Setter\npublic class SampleRequest{\n  @JsonProperty(\"sample-event\")\n  private String sampleEvent;\n\n  @JsonProperty(\"sample-id\")\n  private String sampleId;\n}",
    "@GetMapping(value = \"/plants/id/{id}\", produces = MediaType.APPLICATION_JSON_VALUE)\npublic ResponseEntity<ResponsePlantVocDTO> getPlantById(@PathVariable(\"id\") UUID id){\n    return ResponseEntity.ok(plant);\n} \n\npublic ResponseEntity<ResponsePlantVocDTO> getPlantById(UUID id) {\n    ResponsePlantVocDTO plant = repository.findById(id)\n        .orElseThrow(() -> new ResourceNotFoundException(\"Plant not found with id: \" + id));\n}\n\n\nOn your business exception you can create a class to make it custom: \n@ResponseStatus(HttpStatus.NOT_FOUND)\npublic class ResourceNotFoundException extends RuntimeException {\n    public ResourceNotFoundException(String message) {\n        super(message);\n    }\n}\n\nObs: its not a goot practice to transform the entity on service, you should create another level on your project for that (facade / mapper)",
    "Optional<ResponsePlantVocDTO> optionalResponsePlantVocDTO = service.getPlantById(id);\nif (optionalResponsePlantVocDTO.isPresent()) {\n    return ResponseEntity.status(HttpStatus.FOUND).body(optionalResponsePlantVocDTO.get());\n} else {\n    return ResponseEntity.status(HttpStatus.NOT_FOUND).body(\"My message\");\n}",
    "final String keyValue = \"one\";\n\nJsonObject result = null;\nfor (JsonElement element : jsonArray) {\n    JsonObject jsonObject = element.getAsJsonObject();\n    if (jsonObject.has(\"key\") && keyValue.equals(jsonObject.get(\"key\").getAsString())) {\n        result = jsonObject;\n        break;\n    }\n}",
    "final String keyValue = \"one\";\nJsonObject result = jsonArray.asList().stream()\n        .map(JsonElement::getAsJsonObject)\n        .filter(jsonObject -> jsonObject.has(\"key\"))\n        .filter(jsonObject -> keyValue.equals(jsonObject.get(\"key\").getAsString()))\n        .findFirst()\n        .orElse(null);",
    "import com.fasterxml.jackson.databind.ObjectMapper;\nimport java.util.Arrays;\n\nString readAsObject() throws IOException {\n    String jsonString = \"[{\\\"key\\\": \\\"one\\\", \\\"value\\\": \\\"beach\\\"}, {\\\"key\\\": \\\"two\\\", \\\"value\\\":\\\"sky\\\"}]\";\n    ObjectMapper mapper = new ObjectMapper();\n    YourClass[] items = mapper.readValue(jsonString, YourClass[].class);\n    YourClass itemOne = Arrays.stream(items)\n        .filter(item -> \"one\".equals(item.key))\n        .findFirst().get();\n    return itemOne.value;\n}\nstatic class YourClass {\n    public String key;\n    public String value;\n    // make proper getter & setter, and make the fields private\n}",
    "import com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.node.JsonNodeType;\n\nString readAsTreeOfNode() throws IOException {\n    String jsonString = \"[{\\\"key\\\": \\\"one\\\", \\\"value\\\": \\\"beach\\\"}, {\\\"key\\\": \\\"two\\\", \\\"value\\\":\\\"sky\\\"}]\";\n    ObjectMapper mapper = new ObjectMapper();\n    JsonNode jsonTree = mapper.readTree(jsonString);\n    jsonTree.forEach(element -> {\n        JsonNode key = element.get(\"key\");\n        if (key != null && key.getNodeType() == JsonNodeType.STRING && \"one\".equals(key.textValue())) {\n            String value = element.get(\"value\").textValue();\n            return value;\n        }\n    });\n}",
    "mapper.configure(Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);",
    "import com.fasterxml.jackson.core.JsonParser.Feature;",
    "spring:\n  \n  datasource:\n    username: speed\n    url: jdbc:postgresql://localhost:5432/DBManage\n    password: userpass66!\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.PostgreSQLDialect\n        format_sql: 'true'\n    hibernate:\n      ddl-auto: update\n    show-sql: 'true'\n  logging:\n    level:\n        org.flywaydb: DEBUG\n        org.hibernate.SQL: DEBUG\n        org.hibernate.type.descriptor.sql.BasicBinder: TRACE\n\n  flyway:\n    enabled: 'true'\n    baseline-version: 0\n    url: jdbc:postgresql://localhost:5432/DBManage\n    user: speed\n    password: userpass66!\n    default-schema: DBManage\n    locations: classpath:db/migration",
    "2025-02-08T14:21:13.071+01:00  INFO 18208 --- [  restartedMain] \n\no.f.core.internal.command.DbValidate     : Successfully validated 3 migrations (execution time 00:00.241s)\n2025-02-08T14:21:13.171+01:00  INFO 18208 --- [  restartedMain] o.f.core.internal.command.DbMigrate      : Current version of schema \"DBManage\": 1\n2025-02-08T14:21:13.182+01:00  INFO 18208 --- [  restartedMain] o.f.core.internal.command.DbMigrate      : Schema \"DBManage\" is up to date. No migration necessary.\n2025-02-08T14:21:13.293+01:00  INFO 18208 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]\n2025-02-08T14:21:13.391+01:00  INFO 18208 --- [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.5.Final\n2025-02-08T14:21:13.439+01:00  INFO 18208 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled\n2025-02-08T14:21:13.815+01:00  INFO 18208 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer\n2025-02-08T14:21:13.885+01:00  INFO 18208 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\n2025-02-08T14:21:13.962+01:00  INFO 18208 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25",
    "LocaleListCompat aLocale = LocaleListCompat.forLanguageTags(locale.getLanguage());\n        AppCompatDelegate.setApplicationLocales(aLocale);",
    "Received fatal alert: protocol_version",
    "mvn -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2 <goals>",
    "while (true) foo();",
    "for (;;) foo();",
    "for (int i = 0; i < 10; i++) {\n  try {\n    doStuff();\n    if (thing()) break;\n  } catch (Exception e) {\n    // handle e\n  } finally {\n    x();\n  }\n}",
    "freezeGame();\ntry {\n  saveGameAsFile();\n} catch (IOException e) {\n  throw new SaveException(\"Game state cannot be saved to disk\", e);\n} finally {\n  unfreezeGame();\n}",
    "@Controller\nclass ContentController extends RestfulController{\n    def bundle(){\n        def myBundleFileContents = getClass().getResource('/bundle.js').text\n        response.setHeader(\"Content-disposition\", \"filename=bundle.js\")\n        response.contentType = 'text/javascript'\n        response.outputStream << myBundleFileContents\n        response.outputStream.flush()\n    }\n//more actions\n}",
    "<script type=\"text/javascript\" src=\"../content/bundle\">\n</script>",
    "@WebMvcTest(UserController.class)\n@Import(UserMapperImpl.class)\nclass UserControllerTest {\n\n    @MockitoBean\n    UserService userService;\n\n    @Autowired\n    MockMvc mockMvc;",
    "when(userService.findByLoginOrError(\"user1\")).thenReturn(<SOME VALUE HERE>);",
    "@MockitoBean\n    UserMapper userMapper;",
    "@SpringBootTest\n@AutoConfigureMockMvc\nclass UserControllerTests {\n\n    @Autowired\n    MockMvc mockMvc;\n\n    // remaining code left out",
    "compileOnly(\"org.mapstruct:mapstruct:1.6.3\")\n    annotationProcessor(\"org.mapstruct:mapstruct-processor:1.6.3\")",
    "try\n          {\n          Class.forName(\"org.mariadb.jdbc.Driver\");\n          }\n          catch(ClassNotFoundException e)\n          {\n          e.printStackTrace();\n          }",
    "spring.ssl.bundle.pem.mybundle.keystore.certificate=classpath:application.crt\nspring.ssl.bundle.pem.mybundle.keystore.private-key=classpath:application.key",
    "class Solution {\nNode tail = null;  // Maintain a tail pointer\n\nNode insertAtEnd(Node head, int x) {\n    Node newNode = new Node(x);\n\n    if (head == null) {\n        head = newNode;\n        tail = newNode;\n    } else {\n        tail.next = newNode;\n        tail = newNode;\n    }\n    return head;\n}\n}",
    "public boolean isBetween(LocalTime start, LocalTime end, LocalTime target) {\n    return start.isAfter(end)\n        ? !target.isBefore(start) || !target.isAfter(end)\n        : !target.isBefore(start) && !target.isAfter(end);\n}",
    "private static Duration mod24h(Duration d) {\n    return d.isNegative() ? d.plusHours(24) : d;\n}\n\npublic static boolean isBetween(LocalTime start, LocalTime end, LocalTime target) {\n    return mod24h(Duration.between(start, target))\n            .compareTo(mod24h(Duration.between(start, end)))\n            <= 0;\n}",
    "public static boolean isBetween(LocalTime start, LocalTime end, LocalTime target) {\n    return Math.floorMod(target.toNanoOfDay() - start.toNanoOfDay(), 24 * 60 * 60 * 1000000000L)\n            <= Math.floorMod(end.toNanoOfDay() - start.toNanoOfDay(), 24 * 60 * 60 * 1000000000L);\n}",
    "class MyClass {\n    class NestedClass { // This will not use `$`\n    }\n}",
    "public class Main {\n\n    private static interface Condition<A, B> {\n    }\n\n    private static <S, D> Condition<S, D> or(final Condition<S,D> condition1,\n                                             final Condition<S,D> condition2) {\n        return null; //Doesn't matter to have an actual instance here.\n    }\n\n    public static void main(final String[] args) {\n        final Condition<?, ?> c1 = null, //Doesn't matter to have an actual instance here.\n                              c2 = null; //Doesn't matter to have an actual instance here.\n        or(c1, c2); //Compilation error here.\n    }\n}",
    "public static <S, D> Condition<S, D> isAnyTypeOf(final Class<? extends S>... sourceTypes) {\n    final List<Class<?>> testTypes = Collections.unmodifiableList(Arrays.asList(sourceTypes.clone()));\n    return (final MappingContext<S, D> context) -> {\n        final Class<S> srcType = context.getSourceType();\n        return testTypes.stream().anyMatch(testType -> testType.isAssignableFrom(srcType));\n    };\n}",
    "var modelMapper = new ModelMapper();\nmodelMapper.getConfiguration()\n        .setMatchingStrategy(MatchingStrategies.STRICT)\n        .setPreferNestedProperties(false)\n        .setFullTypeMatchingRequired(true)\n        .setPropertyCondition(isAnyTypeOf(String.class, Integer.class, Long.class));",
    "browser.mainFrame().ifPresent(frame -> {\n    frame.document().ifPresent(document -> {\n        CustomEventParams eventParams =\n                CustomEventParams.newBuilder(document)\n                        .detail(\"command: REQACCT\")\n                        .build();\n        CustomEvent event = document.createCustomEvent(\n                EventType.of(\"GTWEvent\"), eventParams);\n        document.dispatch(event);\n    });\n});",
    "@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"dd/MM/yyyy\")\nprivate Calendar launchDate;",
    "out = (U) Integer.valueOf(Integer.parseInt(s));",
    "out = (U) Double.valueOf(Double.parseDouble(s));",
    "Integer i = A.m(s);\nDouble d = A.m(s);",
    "String requestedFile = \"9537746.jpg\";\n\n// move this line to a static initializer so it only \n// executes first time the class is loaded\nPattern pattern = Pattern.compile(\"((\\\\d)\\\\d{2}).+\");\n\nMatcher matcher = pattern.matcher(requestedFile);\nif (matcher.matches()) {\n   String newPath = String.format(\"home/static/%s/%s/%s\", \n      matcher.group(2), matcher.group(1), requestedFile);\n   assertThat(newPath).equals(\"home/static/9/953/9537746.jpg\");\n}",
    "char[] chars = requestedFile.toCharArray();\nchar[] firstChar = new char[1];\nchar[] firstThreeChars = new char[3];\nSystem.arraycopy(chars, 0, firstThreeChars, 0, 3);\nSystem.arraycopy(chars, 0, firstChar, 0, 1);\nString result1 = new String(firstChar);\nString result2 = new String(firstThreeChars);",
    "String result1 = requestedFile.substring(0, 3);\nString result2 = requestedFile.substring(0, 1);",
    "export BP_JVM_VERSION=-jdk17",
    "import org.apache.camel.model.dataformat.JsonLibrary;",
    "String newImeiValue = \"ABC\";\n\nJsonNode deviceDetails=parentObj.get(\"ctnInfo\").get(\"device\").get(\"devideDetails\");  \n\nif(deviceDetails.hasNonNull(\"imei\")) {               ((ObjectNode)deviceDetails).put(\"imei\",newImeiValue);  \n}",
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <annotationProcessing>\n      <profile name=\"Annotation profile for so-be-automation\" enabled=\"true\">\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n        <outputRelativeToContentRoot value=\"true\" />\n        <processorPath useClasspath=\"false\">\n          <entry name=\"$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar\" />\n        </processorPath>\n        <module name=\"so-be-automation\" />\n      </profile>\n    </annotationProcessing>\n  </component>\n  <component name=\"JavacSettings\">\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\n      <module name=\"so-be-automation\" options=\"-parameters\" />\n    </option>\n  </component>\n</project>",
    "ZoneId z = ZoneId.of ( \"Africa/Tunis\" ) ;\nLocalDate today = LocalDate.now ( z ) ;\nLocalTime nextTime = \u2026 ;\nZonedDateTime when = ZonedDateTime.of ( today , nextTime , z ) ;",
    "if ( ! when.ToInstant().isAfter( Instant.now() ) ) { \u2026 }",
    "Duration duration = Duration.between ( Instant.now() , when.toInstant() ) ;",
    "ScheduledExecutorService ex = Executors.newSingleThreadScheduledExecutor();\nLocalTime now = LocalTime.now();\nLocalTime morning = LocalTime.of(5,32);\n\nex.schedule(() -> { /*azan tasks to run*/ }, Duration.between(now, morning).toMillis(), TimeUnit.MILLISECONDS);",
    "class TTest{\n    public static void main(String args[]){\n        Timer timer = new Timer();\n        while(!Thread.isInterrupted()) {\n            // calculate morning Azan\n            LocalTime morningAzan = ...;\n            Date convertedMorningAzan = ...;\n            MyTimerTask task = new MyTimerTask(); //timer task for morning azan\n            timer.schedule(task, convertedMorningAzan);\n            //do the same for noon, afternoon and night \n\n            try{\n                //sleep until next day calculation time\n            }catch (InterruptedException e){}\n        }\n    }\n}",
    "<connector connector-port=\"1099\" rmi-registry-port=\"1100\" connector-host=\"localhost\"/>",
    "import com.mongodb.ConnectionString;\nimport com.mongodb.MongoClientSettings;\nimport com.mongodb.ServerApi;\nimport com.mongodb.ServerApiVersion;\nimport com.mongodb.TransactionOptions;\nimport com.mongodb.WriteConcern;\nimport com.mongodb.client.ClientSession;\nimport com.mongodb.client.MongoClient;\nimport com.mongodb.client.MongoClients;\nimport com.mongodb.client.MongoCollection;\nimport com.mongodb.client.TransactionBody;\nimport org.bson.Document;\n\nimport java.nio.file.Paths;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class App {\n\n    public static void main(String[] args) {\n        SSLFactory sslFactory = SSLFactory.builder()\n                .withIdentityMaterial(Paths.get(\"C:/Program Files/Java/jdk-21/lib/security/mongodb.pkcs12\"), \"changeit\".toCharArray())\n                .withTrustMaterial(Paths.get(\"C:/Program Files/Java/jdk-21/lib/security/cacerts\"), \"changeit\".toCharArray())\n                .withLoggingTrustMaterial()\n                .build();\n\n        String connectionString = \"YOUR_CONNECTION_URL\";\n\n        ServerApi serverApi = ServerApi.builder()\n                .version(ServerApiVersion.V1)\n                .build();\n\n        MongoClientSettings settings = MongoClientSettings.builder()\n                .applyConnectionString(new ConnectionString(connectionString))\n                .applyToSslSettings(builder -> builder.enabled(true).context(sslFactory.getSslContext()))\n                .serverApi(serverApi)\n                .build();\n\n        try (MongoClient mongoClient = MongoClients.create(settings)) {\n            System.out.println(\"=> Print list of databases:\");\n            List<Document> databases = mongoClient.listDatabases().into(new ArrayList<>());\n            databases.forEach(db -> System.out.println(db.toJson()));\n\n            ClientSession clientSession = mongoClient.startSession();\n            TransactionOptions transactionOptions = TransactionOptions.builder()\n                    .writeConcern(WriteConcern.MAJORITY)\n                    .build();\n\n            TransactionBody<String> transactionBody = () -> {\n                MongoCollection<Document> coll1 = mongoClient.getDatabase(\"mydb1\").getCollection(\"foo\");\n                coll1.insertOne(clientSession, new Document(\"abc\", 1));\n                return \"Inserted into collections in different databases\";\n            };\n\n            clientSession.withTransaction(transactionBody, transactionOptions);\n        }\n\n    }\n\n}",
    "import javax.net.ssl.KeyManager;\nimport javax.net.ssl.KeyManagerFactory;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.TrustManager;\nimport javax.net.ssl.TrustManagerFactory;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.security.KeyManagementException;\nimport java.security.KeyStore;\nimport java.security.KeyStoreException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.UnrecoverableKeyException;\nimport java.security.cert.CertificateException;\nimport java.util.Objects;\n\npublic class App {\n\n    public static void main(String[] args) throws IOException, KeyStoreException, CertificateException, NoSuchAlgorithmException, UnrecoverableKeyException, KeyManagementException {\n        Path keyStorePath = Paths.get(\"C:/Program Files/Java/jdk-21/lib/security/mongodb.pkcs12\");\n        Path trustStorePath = Paths.get(\"C:/Program Files/Java/jdk-21/lib/security/cacerts\");\n\n        char[] password = \"changeit\".toCharArray();\n        KeyStore keyStore = KeyStore.getInstance(\"PKCS12\");\n        KeyStore trustStore = KeyStore.getInstance(\"PKCS12\");\n\n        try(InputStream keyStoreInputStream = Files.newInputStream(keyStorePath) ;\n            InputStream trustStoreInputStream = Files.newInputStream(trustStorePath)) {\n\n            Objects.requireNonNull(keyStoreInputStream);\n            Objects.requireNonNull(trustStoreInputStream);\n\n            keyStore.load(keyStoreInputStream, password);\n            trustStore.load(trustStoreInputStream, password);\n        }\n\n        KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n        keyManagerFactory.init(keyStore, password);\n        KeyManager[] keyManagers = keyManagerFactory.getKeyManagers();\n\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(trustStore);\n        TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();\n\n        SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(keyManagers, trustManagers, null);\n    }\n\n}",
    "X obj = new X();\nobj.setName(\"xyz\");\nobj.setId(1);\nvalidator.validate(obj);",
    "data class ExampleState(\n  @JvmField  val name: String = \"Hello world\"\n)",
    "$label=Deploy\nCreateInstaller=true",
    "configurations {\n    all {\n        resolutionStrategy {\n            force 'com.library.group:library-name:version-number'\n        }\n    }\n}",
    "dependencies {\n    implementation('library-group:library-name:x.x.x') {\n        exclude group: 'conflicting.group', module: 'module-name'\n    }\n}",
    "private void changeUIFonts(final int size) {\n        UIDefaults myDefaults = UIManager.getDefaults();\n        for (Enumeration<?> e = myDefaults.keys(); e.hasMoreElements(); ) {\n            final Object key = e.nextElement();\n            final Object value = myDefaults.get(key);\n            if (value instanceof Font) {\n                final Font font = (Font) value;\n                final int newSize = Math.round(font.getSize() + size);\n                if (value instanceof FontUIResource) {\n                    myDefaults.put(key, new FontUIResource(font.getName(),\n                            font.getStyle(), newSize));\n                } else {\n                    myDefaults.put(key, new Font(font.getName(),\n                            font.getStyle(), newSize));\n                }\n            }\n        }\n\n        changeUIFontsForComponent(mFrame, size);\n\n        SwingUtilities.updateComponentTreeUI(mFrame);\n        mFrame.pack();\n    }\n\n    private void changeUIFontsForComponent(Component c, int fontSizeDelta) {\n        Font f = c.getFont();\n        if (!(f instanceof FontUIResource)) {\n            f = new Font(f.getName(), f.getStyle(), Math.round(f.getSize() + fontSizeDelta));\n            c.setFont(f);\n        }\n        if (c instanceof Container container) {\n            for (Component child : container.getComponents()) {\n                changeUIFontsForComponent(child, fontSizeDelta);\n            }\n        }\n    }",
    "public static void main(String[] args) {\n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                JFrame f = new JFrame();\n                JPanel p = new JPanel(new FlowLayout());\n                ZoomControl c = new ZoomControl(f);\n                p.add(c);\n                JLabel label = new JLabel(\"Extra label\");\n                label.setFont(new Font(\"dialog\", Font.BOLD, 18));\n                p.add(label);\n                f.getContentPane().add(p);\n                f.pack();\n                f.setVisible(true);\n            }\n        });\n    }",
    "testLabel.getLayoutBounds().contains(event.getX(), event.getY());",
    "import javafx.application.Application;\nimport javafx.scene.Node;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Label;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.text.TextAlignment;\nimport javafx.stage.Stage;\n\n\npublic class ClickableLabelRegion_Demo extends Application {\n\n    private final static String CSS = \"data:text/css,\" +\n            \"\"\"\n                                    .test-label1 {\n                                        -fx-background-color: blue;\n                                        -fx-border-color: red;\n                                        -fx-font-family: \"Harlow Solid Italic\";\n                                        -fx-font-size: 100;\n                                        -fx-padding: -40 20 0 20;\n                                    }\n                    \n                                    .test-label2 {\n                                        -fx-background-color: blue;\n                                        -fx-border-color: red;\n                                        -fx-font-family: \"Harlow Solid Italic\";\n                                        -fx-font-size: 100;\n                                    }\n                    \n                                    .test-bg {\n                                        -fx-background-color: yellow;\n                                    }\n                    \"\"\";\n\n    @Override\n    public void start(Stage stage) {\n        HBox root = new HBox();\n        root.setStyle(\"-fx-background-color: black;-fx-padding:40px;-fx-spacing:50px;\");\n        root.getChildren().addAll(createTestLabel(1), createTestLabel(2));\n        Scene scene = new Scene(root, 1150, 450);\n        scene.getStylesheets().add(CSS);\n        stage.setScene(scene);\n        stage.setTitle(\"Clickable Label Region Demo\");\n        stage.show();\n    }\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n\n    private Label createTestLabel(int i) {\n        Label testLabel = new Label(\"Placeholder\\nText\");\n        testLabel.getStyleClass().add(\"test-label\" + i);\n        testLabel.setTextAlignment(TextAlignment.CENTER);\n        testLabel.setOnMouseEntered(event -> mouseEntered(testLabel, event, i));\n        testLabel.setOnMouseMoved(event -> mouseMoved(testLabel, event, i));\n        testLabel.setOnMouseExited(event -> mouseExited(testLabel, event, i));\n        testLabel.setOnMousePressed(event -> mousePressed(testLabel, event, i));\n        testLabel.setOnMouseReleased(event -> mouseReleased(testLabel, event, i));\n        testLabel.setOnMouseClicked(event -> mouseClicked(testLabel, event, i));\n        return testLabel;\n    }\n\n    private boolean isValidRegion(Node n, MouseEvent e) {\n        return n.getLayoutBounds().contains(e.getX(), e.getY());\n    }\n\n    private void mouseClicked(Node n, MouseEvent e, int i) {\n        if (isValidRegion(n, e)) {\n            System.out.println(\"Mouse clicked \" + i);\n        }\n    }\n\n    private void mousePressed(Node n, MouseEvent e, int i) {\n        if (isValidRegion(n, e)) {\n            System.out.println(\"Mouse pressed \" + i);\n            n.getStyleClass().add(\"test-bg\");\n        }\n    }\n\n    private void mouseReleased(Node n, MouseEvent e, int i) {\n        if (isValidRegion(n, e)) {\n            System.out.println(\"Mouse released \" + i);\n            n.getStyleClass().remove(\"test-bg\");\n        }\n    }\n\n    private void mouseEntered(Node n, MouseEvent e, int i) {\n        if (isValidRegion(n, e)) {\n            System.out.println(\"Mouse entered \" + i);\n        }\n    }\n\n    private void mouseMoved(Node n, MouseEvent e, int i) {\n        if (isValidRegion(n, e)) {\n            System.out.println(\"Mouse moved \" + i);\n        }\n    }\n\n    private void mouseExited(Node n, MouseEvent e, int i) {\n        System.out.println(\"Mouse exited \" + i);\n    }\n}",
    "class CustomLabel extends Label {\n    public CustomLabel(String text) {\n        super(text);\n        Rectangle clip = new Rectangle();\n        setClip(clip);\n        layoutBoundsProperty().addListener(p -> {\n            Bounds b = getLayoutBounds();\n            clip.setWidth(b.getWidth());\n            clip.setHeight(b.getHeight());\n        });\n    }\n}",
    "opens test [to <spring-module>];",
    "try (InputStream inputStream = minioClient.getObject(GetObjectArgs.builder()\n        .bucket(bucketName)\n        .object(file.getS3Id())\n        .build());\n     OutputStream outStream = response.getOutputStream()) {\n\n    XWPFDocument doc = new XWPFDocument(inputStream);\n    PdfOptions options = PdfOptions.create();\n\n    // Enable streaming-based font provider to reduce memory usage\n    options.fontProvider((familyName, encoding, size, style, color) -> {\n        try {\n            BaseFont baseFont = BaseFont.createFont(\n                    \"classpath:fonts/Times_New_Roman.ttf\", BaseFont.IDENTITY_H, BaseFont.EMBEDDED\n            );\n            return new Font(baseFont, size, style, color);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    });\n\n    PdfConverter.getInstance().convert(doc, outStream, options);\n    outStream.flush();\n    doc.close();\n}",
    "-cp MyProject.main",
    "parameters:\n- name: clientId\n  in: header\n  required: true\n  schema:\n    type: string\n    maxLength: 20\n    pattern: '^[a-zA-Z0-9]+$'",
    "parameters:\n- name: clientId\n  in: header\n  required: true\n  content:\n    'text/plain':\n      schema:\n        type: string\n        maxLength: 20\n        pattern: '^[a-zA-Z0-9]+$'",
    "// Old one List<InformeFacturacionAsociadoDto> ret = new ArrayList<>();\n  List<InformeFacturacionProcesado> results = null;\n  results = informeFacturacionDAO.getListInformeFactAsociadosV2(cliJurs, centros, desde, hasta, podologos, tipoPrescriptor, prescriptor, servicios, conveniosBusqueda);\n\n   //NEW CODE\n  List<InformeFacturacionAsociadoDto> retS = Collections.synchronizedList(new ArrayList<InformeFacturacionAsociadoDto>());\n  List<InformeFacturacionProcesado> resultsS = Collections.synchronizedList(results);",
    "List<InformeFacturacionProcesado> result = informeFacturacionDAO.getListInformeFactAsociadosV2(cliJurs, centros, desde, hasta, podologos, tipoPrescriptor, prescriptor, servicios, conveniosBusqueda);\n\nList<InformeFacturacionAsociadoDto> result2 = results.parallelStream().map(informe -> new InformeFacturacionAsociadoDto(...)).toList();",
    "Converter<Optional<Description>, String> descriptionConverter = context ->\n                context\n                        .getSource()\n                        .map(Description::getDescription)\n                        .orElse(null);\n\n        var modelMapper = new ModelMapper();\n        modelMapper.getConfiguration()\n                .setMatchingStrategy(MatchingStrategies.STRICT)\n                .setPreferNestedProperties(false);\n\n        modelMapper.createTypeMap(RoomType.class, RoomTypeDto.class)\n                 // apply the converter here\n                .addMappings(m -> m.using(descriptionConverter)\n                        .map(RoomType::getDescription, RoomTypeDto::setDescription));",
    "private void visitSource(SourceGetter<S> sourceGetter) {\n    notNull(sourceGetter, \"sourceGetter\");\n    try {\n      Object sourceProperty = sourceGetter.get(source);\n      if (source == sourceProperty)\n        collector.mapFromSource(typeMap.getSourceType());\n      if (collector.isNoSourceGetter())\n        collector.mapFromConstant(sourceProperty);\n    } catch (NullPointerException e) {\n      if (collector.getProxyErrors().hasErrors())       \n        throw collector.getProxyErrors().toException(); // this line\n      throw e;\n    } catch (ErrorsException e) {\n      throw e.getErrors().toConfigurationException();\n    }\n  }",
    "package com.msaltest.client;\n\nimport com.azure.identity.DeviceCodeCredential;\nimport com.azure.identity.DeviceCodeCredentialBuilder;\nimport com.azure.core.credential.TokenRequestContext;\nimport com.microsoft.graph.authentication.IAuthenticationProvider;\nimport com.microsoft.graph.models.*;\nimport com.microsoft.graph.requests.*;\nimport okhttp3.Request;\nimport reactor.core.publisher.Mono;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class DeviceCodeClientAuth implements Runnable {\n\n    private static final String CLIENT_ID = \"appId\";\n    private static final String TENANT_ID = \"tenantId\"; \n    private static final String[] SCOPES = new String[] {\"Mail.Read\"}; \n\n    public DeviceCodeClientAuth() {\n               System.setProperty(\"com.microsoft.identity.client.enablePII\", \"true\");\n    }\n\n    @Override\n    public void run() {\n        try {\n            // Acquire token using Device Code Flow\n            DeviceCodeCredential credential = new DeviceCodeCredentialBuilder()\n                    .clientId(CLIENT_ID)\n                    .tenantId(TENANT_ID)\n                    .challengeConsumer(challenge -> {\n                        // Display challenge to the user\n                        System.out.println(challenge.getMessage());\n                    })\n                    .build();\n\n            if (credential == null) {\n                throw new Exception(\"Unexpected error: DeviceCodeCredential is null\");\n            }\n\n            IAuthenticationProvider provider = requestUrl -> {\n                TokenRequestContext requestContext = new TokenRequestContext().addScopes(SCOPES);\n                // Get the access token asynchronously\n                Mono<String> futureToken = credential.getToken(requestContext)\n                        .map(token -> token.getToken()); \n                return futureToken.toFuture();   \n          };\n\n            GraphServiceClient<Request> graphServiceClient = GraphServiceClient\n                    .builder()\n                    .authenticationProvider(provider)\n                    .buildClient();\n\n            // Fetch user information\n            User user = graphServiceClient.me().buildRequest().get();\n            System.out.println(\"\ud83d\udc64 User: \" + user.displayName);\n\n            // Get messages\n            MessageCollectionPage messagePage = graphServiceClient\n                    .me()\n                    .messages()\n                    .buildRequest()\n                    .top(3)\n                    .get();\n\n            List<Message> messageList = messagePage.getCurrentPage();\n            for (Message msg : messageList) {\n                System.out.println(\"\ud83d\udce7 Subject: \" + msg.subject);\n                System.out.println(\"\ud83d\udcce Has Attachments? \" + msg.hasAttachments);\n\n                if (msg.hasAttachments) {\n                    // Only fetch attachments if they exist\n                    AttachmentCollectionPage attachments = graphServiceClient\n                            .me()\n                            .messages(msg.id)\n                            .attachments()\n                            .buildRequest()\n                            .get();\n\n                    List<Attachment> listOfAttachment = attachments.getCurrentPage();\n                    for (Attachment attachment : listOfAttachment) {\n                        System.out.println(\"\ud83d\udd17 Attachment ID: \" + attachment.id);\n\n                        if (attachment instanceof FileAttachment) {\n                            FileAttachment fileAttachment = (FileAttachment) attachment;\n                            System.out.println(\"\u2b07 Downloading File: \" + fileAttachment.name);\n\n                            // Get file content and save locally\n                            saveToFile(fileAttachment.name, fileAttachment.contentBytes);\n                        } else {\n                            System.out.println(\"\ud83d\udcc4 Non-file attachment detected: \" + attachment.name);\n                        }\n                    }\n                } else {\n                    System.out.println(\"\ud83d\udce7 No attachments for this message.\");\n                }\n            }\n        } catch (Exception e) {\n            System.err.println(\"\u274c Error: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    private static void saveToFile(String fileName, byte[] content) {\n        try (FileOutputStream fileOutputStream = new FileOutputStream(\"downloaded_\" + fileName)) {\n            fileOutputStream.write(content);\n            System.out.println(\"\u2705 File saved: downloaded_\" + fileName);\n        } catch (IOException e) {\n            System.err.println(\"\u274c Error saving file: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n}",
    "package com.msaltest.client;  \n  \npublic class Main {  \n    public static void main(String[] args) {  \n        System.out.println(\"Starting Microsoft Graph API Client...\");  \n          \n        DeviceCodeClientAuth client = new DeviceCodeClientAuth();  \n        client.run(); // Execute the authentication and email attachment retrieval  \n  \n  System.out.println(\"Process completed.\");  \n    }  \n}",
    "Map<IdValue, List<AssestValue>> groupbyAns = assetValues.stream().collect(Collectors.groupingBy(assestValue -> assestValue.getIdvalue()));\n\n    groupbyAns.forEach((idValue, assestValues) -> assestValues\n            .sort(Comparator.comparingInt((AssestValue o) -> Integer.parseInt(o.getYear()))\n                    .thenComparing((AssestValue o1) -> Integer.parseInt(o1.getDate()))));",
    ".grantType(OAuth2Constants.CLIENT_CREDENTIALS)",
    "import java.awt.BorderLayout;\nimport java.awt.Point;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseMotionAdapter;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.swing.BorderFactory;\nimport javax.swing.JFrame;\nimport javax.swing.JMenuItem;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\nimport javax.swing.JPopupMenu;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\nimport javax.swing.SwingUtilities;\n\npublic class TooltipExample implements Runnable {\n\n    public static void main(String[] args) {\n        SwingUtilities.invokeLater(new TooltipExample());\n    }\n\n    private JTextArea textArea;\n\n    private TooltipManager tooltipManager;\n\n    @Override\n    public void run() {\n        JFrame frame = new JFrame(\"Custom Tooltip Application\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n        frame.add(createTextPanel(), BorderLayout.CENTER);\n\n        frame.pack();\n        frame.setLocationByPlatform(true);\n        frame.setVisible(true);\n    }\n\n    private JPanel createTextPanel() {\n        JPanel panel = new JPanel(new BorderLayout());\n        panel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n\n        JPopupMenu popupMenu = new JPopupMenu();\n        JMenuItem addTooltipItem = new JMenuItem(\"Add Tooltip\");\n        addTooltipItem.addActionListener(e -> addTooltip());\n        addTooltipItem.setFont(panel.getFont().deriveFont(20f));\n        popupMenu.add(addTooltipItem);\n\n        textArea = new JTextArea(10, 30);\n        textArea.setComponentPopupMenu(popupMenu);\n        textArea.setFont(panel.getFont().deriveFont(20f));\n        textArea.setText(createSampleText());\n        textArea.setCaretPosition(0);\n        textArea.setWrapStyleWord(true);\n        textArea.setLineWrap(true);\n\n        tooltipManager = new TooltipManager(textArea);\n\n        JScrollPane scrollPane = new JScrollPane(textArea);\n        panel.add(scrollPane, BorderLayout.CENTER);\n\n        return panel;\n    }\n\n    private String createSampleText() {\n        return \"I would like to make it so that a user can select \"\n                + \"text that they've previously written into a \"\n                + \"textArea, then afterwards they would be \"\n                + \"able to select it and add a tooltip that \"\n                + \"would appear when hovering said text.\\r\\n\\r\\n\"\n                + \"I tried to make it but i've only managed\"\n                + \" to have it show the tooltip when hovering\"\n                + \" anywhere inside of the textArea, meaning\"\n                + \" that whenever a tooltip is created, it \"\n                + \"will be shown if the mouse hovers inside \"\n                + \"of the textArea, irregardless of where it \"\n                + \"hovers, as opposed to having it only show \"\n                + \"the tooltip when the mouse hovers the \"\n                + \"string that it was created in.\";\n    }\n\n    private void addTooltip() {\n        String selectedText = textArea.getSelectedText();\n//      System.out.println(selectedText);\n        if (selectedText == null) {\n            JOptionPane.showMessageDialog(textArea,\n                    \"Please select a word for the tooltip.\");\n        } else {\n            selectedText = selectedText.trim();\n            if (!selectedText.isEmpty()) {\n                String tooltipText = JOptionPane.showInputDialog(textArea,\n                        \"Enter tooltip text for \\\"\" + selectedText + \"\\\":\");\n                tooltipManager.addTooltip(selectedText, tooltipText);\n            }\n\n        }\n\n    }\n\n    public class TooltipManager {\n\n        private JTextArea textArea;\n\n        private Map<String, String> tooltips;\n\n        public TooltipManager(JTextArea textArea) {\n            this.textArea = textArea;\n            this.tooltips = new HashMap<>();\n            textArea.addMouseMotionListener(new MouseMotionAdapter() {\n                @Override\n                public void mouseMoved(MouseEvent event) {\n//                  textArea.setToolTipText(\"Testing\");\n                    updateTooltip(event);\n                    \n                }\n            });\n        }\n\n        public void addTooltip(String text, String tooltip) {\n            tooltips.put(text, tooltip);\n        }\n\n        private void updateTooltip(MouseEvent event) {\n            String word = getWordAtPoint(event.getPoint());\n//          System.out.println(word);\n            if (word != null && tooltips.containsKey(word)) {\n                String text = tooltips.get(word);\n                textArea.setToolTipText(text);\n//              System.out.println(\"Success: \" + text);\n            } else {\n                textArea.setToolTipText(null);\n            }\n        }\n\n        private String getWordAtPoint(Point p) {\n            int pos = textArea.viewToModel2D(p);\n            String text = textArea.getText();\n            int start = findWordStart(text, pos);\n            int end = findWordEnd(text, pos);\n            return text.substring(start, end);\n        }\n\n        private int findWordStart(String text, int pos) {\n            while (pos > 0 && Character.isLetterOrDigit(text.charAt(pos - 1))) {\n                pos--;\n            }\n            return pos;\n        }\n\n        private int findWordEnd(String text, int pos) {\n            while (pos < text.length()\n                    && Character.isLetterOrDigit(text.charAt(pos))) {\n                pos++;\n            }\n            return pos;\n        }\n\n    }\n\n}",
    "<!-- Velocity -->\n#if($condition)\n    <p>Some content</p>\n#end\n\n<!-- Thymeleaf -->\n<p th:if=\"${condition}\">Some content</p>",
    "<!-- Velocity -->\n#foreach($item in $items)\n    <li>$item.name</li>\n#end\n\n<!-- Thymeleaf -->\n<li th:each=\"item : ${items}\" th:text=\"${item.name}\"></li>",
    "<!-- Thymeleaf with th:with -->\n<div th:with=\"calculatedValue=${someCalculation}\">\n    <p th:text=\"${calculatedValue}\"></p>\n</div>",
    "plantEntity.getEmitter().forEach(it -> it.setPlant(plantEntity));",
    "PlantVocEntity plantEntity = mapper.map(plantDTO, PlantVocEntity.class);",
    "// initialize emitter\n    private Set<PlantEmitterEntity> emitter = new HashSet<>();\n    \n    void addPlantEmitterEntity(PlantEmitterEntity emitterEntity) {\n        emitterEntity.setPlant(this);\n        emitter.add(emitterEntity);\n    }",
    "@Entity\n@Inheritance(strategy = InheritanceType.JOINED)\npublic abstract class SuperClass {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    \n    // Common fields\n}",
    "@Entity\npublic class SubClassA extends SuperClass {\n    // Fields specific to SubClassA\n}",
    "@Entity\npublic class ContainerEntity {\n@Id\n@GeneratedValue(strategy = GenerationType.IDENTITY)\nprivate Long id;\n\n@OneToMany(cascade = CascadeType.ALL)\nprivate List<SuperClass> items;\n\n// Other fields, getters, setters\n}",
    "public boolean isDominatedBy(Point other) {\n    return (this.x < other.x && this.y >= other.y) || (this.x <= other.x && this.y > other.y);\n}",
    "create function _jsonb_exists_(jsonb,text)returns boolean return $1 ? $2;\ncreate function _jsonb_exists_any_(jsonb,text[])returns boolean return $1 ?| $2;",
    "select * from test where _jsonb_exists_(rules->'ids', '123');",
    "explain analyze verbose select*from test where _jsonb_exists_(rules->'ids','123');",
    "select oid::regoperator\n     , oprcode\nfrom pg_operator \nwhere oprleft::regtype::text='jsonb'\n  and oprcode::text ilike '%exist%';",
    "select * from test where _jsonb_exists_any_(rules->'ids', array['999','456']);",
    "import jakarta.validation.Payload;\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@Constraint(validatedBy = SomeRequestValidator.class)\n@Target({ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface ValidSomeRequest {\n    String message() default \"Invalid request data\";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}",
    "import jakarta.validation.ConstraintValidator;\nimport jakarta.validation.ConstraintValidatorContext;\n\npublic class SomeRequestValidator implements ConstraintValidator<ValidSomeRequest, SomeRequest> {\n\n    @Override\n    public boolean isValid(SomeRequest request, ConstraintValidatorContext context) {\n        if (request == null) {\n            return true; // Let @NotNull handle null cases\n        }\n\n        boolean isValid = true;\n        context.disableDefaultConstraintViolation(); // Prevent default message\n\n        if (request.score > 0) {\n            // If score is positive, fieldPositive must be non-empty, and fieldZeroAndNegative must be null\n            if (request.fieldPositive == null || request.fieldPositive.isEmpty()) {\n                isValid = false;\n                context.buildConstraintViolationWithTemplate(\"fieldPositive must not be empty when score is positive\")\n                        .addPropertyNode(\"fieldPositive\")\n                        .addConstraintViolation();\n            }\n            if (request.fieldZeroAndNegative != null) {\n                isValid = false;\n                context.buildConstraintViolationWithTemplate(\"fieldZeroAndNegative must be null when score is positive\")\n                        .addPropertyNode(\"fieldZeroAndNegative\")\n                        .addConstraintViolation();\n            }\n        } else {\n            // If score is zero or negative, fieldZeroAndNegative must be non-empty, and fieldPositive must be null\n            if (request.fieldZeroAndNegative == null || request.fieldZeroAndNegative.isEmpty()) {\n                isValid = false;\n                context.buildConstraintViolationWithTemplate(\"fieldZeroAndNegative must not be empty when score is zero or negative\")\n                        .addPropertyNode(\"fieldZeroAndNegative\")\n                        .addConstraintViolation();\n            }\n            if (request.fieldPositive != null) {\n                isValid = false;\n                context.buildConstraintViolationWithTemplate(\"fieldPositive must be null when score is zero or negative\")\n                        .addPropertyNode(\"fieldPositive\")\n                        .addConstraintViolation();\n            }\n        }\n\n        return isValid;\n    }\n}",
    "@ValidSomeRequest\npublic record SomeRequest(int score, String fieldPositive, String fieldZeroAndNegative) { }",
    "import jakarta.validation.Valid;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\nclass FieldValidationController {\n\n    @PostMapping(\"/validate\")\n    String validate(@Valid @RequestBody SomeRequest someRequest) {\n        return \"Request is valid\";\n    }\n\n}",
    "public abstract class Animal {\n   int age;\n\n   Animal() {\n      System.out.println( \"An animal has been created\" );\n   }\n\n   int getAge() { \n      return age;\n   }\n\n   abstract void talk();\n}\n\nclass Dog extends Animal {\n   Dog() {\n      System.out.println( \"An dog has been created\" );\n   }\n\n   @Override\n   public void talk() {\n       System.out.println(\"Woof\");\n   }\n\n   // we do not declare the attribute \u201cage\u201d nor its corresponding \u201cgetter\u201d since \n   // they are inherited from \u201cAnimal\u201d.\n}",
    "Dog blacky = new Dog();",
    "\"An animal has been created\" \n\"An dog has been created\"",
    "Animal animals[] = { new Dog(), new Cat() };",
    "for( Animal animal : animals ) animal.getAge();",
    "for( Animal animal : animals ) animal.talk();",
    "animal.giveThePaw();",
    "def getKeyIv(password: Array[Byte], salt: Array[Byte]): (Array[Byte], Array[Byte]) = {\n  var key, iv, last = Array[Byte]()\n  val md = MessageDigest.getInstance(\"MD5\")\n  while (key.length < 32) {\n      last = md.digest(last ++ password ++ salt)\n      key = key ++ last\n  }\n  iv = md.digest(last ++ password ++ salt)\n  (key, iv)\n}",
    "val ciphertextOpenSSLFrmt = \"Salted__\".getBytes(StandardCharsets.UTF_8) ++ salt ++ ciphertext",
    "import java.security.{SecureRandom, MessageDigest}\nimport javax.crypto.Cipher\nimport javax.crypto.spec.{IvParameterSpec, SecretKeySpec}\nimport java.nio.charset.StandardCharsets\nimport java.util.Base64\n...\nval plaintext: Array[Byte] = \"The quick brown fox jumps over the lazy dog\".getBytes(StandardCharsets.UTF_8)\nval password: Array[Byte] = \"my password\".getBytes(StandardCharsets.UTF_8)\nval secureRandom = new SecureRandom() // create random salt\nval salt: Array[Byte] = new Array[Byte](8)\nsecureRandom.nextBytes(salt)\nval (key, iv) = getKeyIv(password, salt) // derive key and IV\nval cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\") // encrypt\ncipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, \"AES\"), new IvParameterSpec(iv))\nval ciphertext = cipher.doFinal(plaintext)\nval ciphertextOpenSSLFrmt = \"Salted__\".getBytes(StandardCharsets.UTF_8) ++ salt ++ ciphertext // concatenate result \nprintln(Base64.getEncoder.encodeToString(ciphertextOpenSSLFrmt)) // sample output: U2FsdGVkX1/joJPOllaIZiV+ehbDM5KP4IAn/DtCl3Uvfi+8BA8kyznFD+gZJfjFMhz7dD2ke94BR9mvrKTF0Q==",
    "const decrypted = CryptoJS.AES.decrypt(\"U2FsdGVkX1/joJPOllaIZiV+ehbDM5KP4IAn/DtCl3Uvfi+8BA8kyznFD+gZJfjFMhz7dD2ke94BR9mvrKTF0Q==\", \"my password\")\nconsole.log(decrypted.toString(CryptoJS.enc.Utf8))",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.2.0/crypto-js.min.js\"></script>",
    "int i = 5;\nint a = ++i;  // i is incremented first, then assigned to 'a'\nSystem.out.println(a);  // Output: 6",
    "int i = 5;\nint b = i++;  // i is assigned to 'b' first, then incremented\nSystem.out.println(b);  // Output: 5\nSystem.out.println(i);  // Output: 6 (because it was incremented after assignment)",
    "repositories {\n  mavenCentral()\n  maven {\n    url = 'https://packages.confluent.io/maven/'\n  }\n}",
    "@Suite\n@SelectClasses({FirstTest.class, SecondTest.class})\npublic class SampleSuite {\n    static SampleServer server = new SampleServer();\n\n    @BeforeSuite\n    static void beforeSuite() {\n        System.out.println(\"Before Suite\");\n        server.start();\n    }\n\n    @AfterSuite\n    static void afterSuite() {\n        server.shutdown();\n        System.out.println(\"After Suite\");\n    }\n}",
    "public class SampleServer {\n    public void start() {\n        System.out.println(\"Starting SampleServer\");\n    }\n\n    public void shutdown() {\n        System.out.println(\"SampleServer shutdown\");\n    }\n}",
    "[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running io.github.zforgo.jupiter.SampleSuite\nBefore Suite\nStarting SampleServer\n[INFO] Running io.github.zforgo.jupiter.FirstTest\nFirstTest.bar\nFirstTest.foo\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.050 s -- in io.github.zforgo.jupiter.FirstTest\n[INFO] Running io.github.zforgo.jupiter.SecondTest\nSecondTest.bar\nSecondTest.foo\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s -- in io.github.zforgo.jupiter.SecondTest\nSampleServer shutdown\nAfter Suite\n[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.122 s -- in io.github.zforgo.jupiter.SampleSuite",
    "pack: 'My Pack', // The pack name\n    author: 'Me', // The author name\n    type: StickerTypes.FULL, // The sticker type\n    categories: ['\ud83e\udd29', '\ud83c\udf89'], // The sticker category\n    id: '12345', // The sticker id\n    quality: 50, // The quality of the output file\n    background: '#000000' // The sticker background color (only for full stickers)",
    "<receiver android:name=\".UpdateReceiver\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.MY_PACKAGE_REPLACED\"/>\n    </intent-filter>\n</receiver>",
    "public void onReceive(Context context, Intent intent) {\n    if (Intent.ACTION_MY_PACKAGE_REPLACED.equals(intent.getAction())) {\n        Intent restartIntent = context.getPackageManager().getLaunchIntentForPackage(context.getPackageName());\n        if (restartIntent != null) {\n            restartIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            context.startActivity(restartIntent);\n        }\n    }\n}",
    "@Autowired\nTenantIdentifierResolver currentTenant;",
    "@SpringBootTest\n@TestExecutionListeners(listeners = {DependencyInjectionTestExecutionListener.class})\nclass ApplicationTests {\n\n    static final String PIVOTAL = \"PIVOTAL\";\n    static final String VMWARE = \"VMWARE\";\n\n    @Autowired\n    Persons persons;\n\n    @Autowired\n    TransactionTemplate txTemplate;\n\n    @Autowired\n    TenantIdentifierResolver currentTenant;\n\n    @Test\n    void saveAndLoadPerson() {\n\n        Person adam = createPerson(PIVOTAL, \"Adam\");\n        Person eve = createPerson(VMWARE, \"Eve\");\n\n        assertThat(adam.getTenant()).isEqualTo(PIVOTAL);\n        assertThat(eve.getTenant()).isEqualTo(VMWARE);\n\n        currentTenant.setCurrentTenant(VMWARE);\n        assertThat(persons.findAll()).extracting(Person::getName).containsExactly(\"Eve\");\n\n        currentTenant.setCurrentTenant(PIVOTAL);\n        assertThat(persons.findAll()).extracting(Person::getName).containsExactly(\"Adam\");\n    }\n\n    private Person createPerson(String schema, String name) {\n\n        currentTenant.setCurrentTenant(schema);\n\n        Person adam = txTemplate.execute(tx ->\n                {\n                    Person person = Persons.named(name);\n                    return persons.save(person);\n                }\n        );\n\n        assertThat(adam.getId()).isNotNull();\n        return adam;\n    }\n}",
    "DELETE FROM foo where tenantId = 'd3dd94d7-9603-441c-90dc-af87e6f3f8c9'\nDELETE FROM bar where tenantId = 'd3dd94d7-9603-441c-90dc-af87e6f3f8c9'",
    "public class Starter {\n      public static void main(String[] args) {\n          Process process = new ProcessBuilder(\"cmd.exe\", \"...\").start();\n      }\n  }",
    "mvn spring-boot:run -Dspring-boot.run.profiles=dev",
    "<dependency>\n    <groupId>com.h2database</groupId>\n    <artifactId>h2</artifactId>\n    <scope>test</scope>\n</dependency>",
    "<dependency>\n    <groupId>com.h2database</groupId>\n    <artifactId>h2</artifactId>\n</dependency>",
    "$ mvn spring-boot:run -Dapp.profiles=test",
    "spring.profiles.active=dev",
    "--spring.profiles.active=dev",
    "import java.util.Random;\n\nclass Card {\n    private final String suit;\n    private final String rank;\n\n    public Card(String rank, String suit) {\n        this.rank = rank;\n        this.suit = suit;\n    }\n\n    @Override\n    public String toString() {\n        return rank + \" of \" + suit;\n    }\n}\n\npublic class CardShuffler {\n    public static void fisherYatesShuffle(Card[] deck) {\n        Random random = new Random();\n        int n = deck.length;\n        for (int i = n - 1; i > 0; i--) {\n            int j = random.nextInt(i + 1);\n            swap(deck, i, j);\n        }\n    }\n\n    private static void swap(Card[] deck, int i, int j) {\n        Card temp = deck[i];\n        deck[i] = deck[j];\n        deck[j] = temp;\n    }\n    \n    private static void printDeck(Card[] deck) {\n        for (Card card : deck) {\n            System.out.println(card);\n        }\n    }\n\n    public static void main(String[] args) {\n        String[] suits = {\"Hearts\", \"Diamonds\", \"Clubs\", \"Spades\"};\n        String[] ranks = {\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"};\n        Card[] deck = new Card[52];\n        int index = 0;\n        for (String suit : suits) {\n            for (String rank : ranks) {\n                deck[index++] = new Card(rank, suit);\n            }\n        }\n        fisherYatesShuffle(deck);\n        System.out.println(\"Shuffled Deck:\");\n        printDeck(deck);\n    }\n}",
    "Shuffled Deck:\n4 of Clubs\n8 of Spades\n2 of Diamonds\nKing of Hearts\n3 of Diamonds\n3 of Clubs\n10 of Clubs\n4 of Spades\n10 of Hearts\nQueen of Spades\n6 of Hearts\n8 of Diamonds\nJack of Spades\nKing of Spades\n5 of Spades\nQueen of Diamonds\n3 of Hearts\nQueen of Hearts\n8 of Hearts\n2 of Hearts\n10 of Spades\n2 of Clubs\nJack of Clubs\nAce of Hearts\n5 of Hearts\nKing of Diamonds\n10 of Diamonds\n5 of Diamonds\n7 of Clubs\n9 of Clubs\n5 of Clubs\n6 of Spades\n6 of Clubs\n9 of Spades\n9 of Diamonds\nJack of Hearts\n2 of Spades\n7 of Hearts\n4 of Diamonds\nKing of Clubs\n9 of Hearts\nAce of Diamonds\nAce of Clubs\n7 of Diamonds\n4 of Hearts\nAce of Spades\n8 of Clubs\nQueen of Clubs\nJack of Diamonds\n3 of Spades\n6 of Diamonds\n7 of Spades",
    "public class Deck {\n\n   private void ini() {\n      create();\n      shuffle();\n   }\n   \n    List<Card> deckOfSortedCards = new ArrayList<>();\n    Card deckOfUnorderedCards[] = new Card[ 52 ];\n    \n      // we create the initial \"deck\"\n    void create() {\n       for( int i = 0; i < 4; i++ ) {\n          for( int k = 0; k < 13; k++ ) {\n             deckOfSortedCards.add( new Card( i, k ));\n          }\n       }\n    }\n    \n      // we fill the deck with the disordered cards\n    void shuffle() {\n       Random ran = new Random();\n       for( int i = 0; i < 52; i++ ) {\n            // it is probably better to use a copy of \u201cdeckOfSortedCards\u201d, \n            // to avoid having to create it for each new \u201chand\u201d.\n          deckOfUnorderedCards[ i ] = deckOfSortedCards.remove( ran.nextInt( 0, deckOfSortedCards.size() ) );\n       }\n       System.out.println( Arrays.toString( deckOfUnorderedCards ) );\n    }\n\n   class Card {\n      int suit, value;\n      String name;\n      \n      Card( int sui, int val ) {\n         suit = sui;\n         value = val;\n         String aux = \"\";\n         if( value < 10 ) aux = \"\" + ( value + 1 );\n         if( value == 10 ) aux = \"Jack\";\n         if( value == 11 ) aux = \"Queen\";\n         if( value == 12 ) aux = \"King\";\n         switch( sui ) {\n            case 0: name = aux + \" of the Spades\"; break;\n            case 1: name = aux + \" of the Hearts\"; break;\n            case 2: name = aux + \" of the Diamonds\"; break;\n            case 3: name = aux + \" of the Clubs\";\n         }\n      }\n      \n      @Override\n      public String toString() {\n         return name;\n      }\n   }\n\n   public static void main( String[] args ) {\n      new Deck().ini();\n   }\n}",
    "@Bean\npublic FilterRegistrationBean<ApiKeyAuthFilter> tenantFilterRegistration(ApiKeyAuthFilter filter) {\n    FilterRegistrationBean<ApiKeyAuthFilter> registration = new FilterRegistrationBean<>(filter);\n    registration.setEnabled(false);\n    return registration;\n}",
    "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\nprev: \u2502 null \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\nfront:\u2502  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518                         \u2502\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510                         \u2502\nhead: \u2502  \u2500\u2510  \u2502                         \u2502\n      \u2514\u2500\u2500\u2500\u2502\u2500\u2500\u2518        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 val:  \u2502  1   \u2502 \u2514\u25ba\u2502 val:  \u2502  2   \u2502   \u2502 val:  \u2502  3   \u2502\n          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n          \u2502           \u2502 next: \u2502  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 next: \u2502  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 next: \u2502 null \u2502\n      \u250c\u2500\u2500\u2500\u2502\u2500\u2500\u2510        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\ntemp: \u2502  \u2500\u2518  \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
    "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\nprev: \u2502 null \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\nfront:\u2502  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518                         \u2502\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510                         \u2502\nhead: \u2502  \u2500\u2510  \u2502                         \u2502\n      \u2514\u2500\u2500\u2500\u2502\u2500\u2500\u2518        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 val:  \u2502  1   \u2502 \u2514\u25ba\u2502 val:  \u2502  2   \u2502   \u2502 val:  \u2502  3   \u2502\n          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n          \u2502           \u2502 next: \u2502 null \u2502   \u2502 next: \u2502  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 next: \u2502 null \u2502\n      \u250c\u2500\u2500\u2500\u2502\u2500\u2500\u2510        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\ntemp: \u2502  \u2500\u2518  \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
    "# Comma separated list of features to install at startup\n#\nfeaturesRepositories = \\\n    file:///{fusedirectory}/etc/custom-features.xml, \\\n    ...\nfeaturesBoot = \\\n    custom-features, \\\n    secretsmanager-feature, \\\n    ...",
    "<features name =\"custom-features\" xmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">\n    <feature name=\"secretsmanager-feature\" version=\"1.0.0\">\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/secretsmanager-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/apache-client-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/auth-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/aws-core-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/aws-json-protocol-2.20.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/checksums-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/checksums-spi-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/endpoints-spi-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/http-auth-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/http-auth-aws-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/http-auth-spi-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/http-client-spi-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/identity-spi-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/json-utils-2.20.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/metrics-spi-2.20.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/profiles-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/protocol-core-2.20.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/reactive-streams-1.0.4.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/regions-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/retries-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/retries-spi-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/sdk-core-2.30.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/third-party-jackson-core-2.20.3.jar</bundle>\n        <bundle>wrap:file:///{fusedirectory}/custom_lib/utils-2.30.3.jar</bundle>\n    </feature>\n</features>",
    "import java.util.concurrent.Executor;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.concurrent.BlockingQueue;\n\n\nclass SimpleThreadPool implements Executor {\n    private\n    final BlockingQueue<Runnable> queue = new LinkedBlockingQueue<Runnable>();\n    \n    public\n    SimpleThreadPool(int numWorkerThreads) { \n        for (int i=0 ; i<numWorkerThreads ; i++) {\n            Thread t = new Thread(() -> {\n                while (true) {\n                     try {\n                         Runnable task = queue.take();\n                         task.run();\n                     }\n                     catch (InterruptedException ex) {\n                         ex.printStackTrace();\n                         break;\n                     }\n                }\n            });\n            t.start();\n        }\n    }\n\n    @Override\n    public\n    void execute(Runnable task) {\n        queue.add(task);\n    }\n\n    static public\n    void main(String[] args) {\n        SimpleThreadPool pool = new SimpleThreadPool(3);\n        for (int i=0 ; i<10 ; i++) {\n            final int seqNum = i;\n            pool.execute(() -> System.out.println(seqNum));\n        }\n    }\n}",
    "tmv.setInput(new CompareEditorInput(cc) {\n    protected Object prepareInput(IProgressMonitor arg0) \n        throws InvocationTargetException, InterruptedException {\n        return new DiffNode(\n            new CompareEntry(\"lName\", \"lContent\"), \n            new CompareEntry(\"lName\", \"lContent\"));\n    }});",
    "tmv.setInput(new DiffNode(\n    new CompareEntry(\"lName\", \"lContent\"), \n    new CompareEntry(\"lName\", \"lContent\")));",
    "import org.apache.pdfbox.Loader;\nimport org.apache.pdfbox.pdmodel.PDDocument;\nimport org.apache.pdfbox.rendering.PDFRenderer;\n\nimport javax.imageio.*;\nimport javax.imageio.metadata.IIOMetadata;\nimport javax.imageio.stream.ImageOutputStream;\n\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        File pdfFile = new File(\"path/to/pdfFile.pdf\");\n\n        List<File> tiffsFromPDF = ConvertPdfToTiff(pdfFile);\n\n        for (File tiffFile : tiffsFromPDF) {\n            CreateFaxTiff(tiffFile);\n        }\n    }\n\n    public static List<File> ConvertPdfToTiff(File pdfFile)\n    {\n        List<File> outputFileList = new ArrayList<>();\n\n        try\n        {\n            PDDocument document = Loader.loadPDF(pdfFile);\n            PDFRenderer pdfRenderer = new PDFRenderer(document);\n\n            int numberOfPages = document.getNumberOfPages();\n            for(int i = 0; i < numberOfPages; i++)\n            {\n                BufferedImage bufferedImage = pdfRenderer.renderImageWithDPI(i, 196);\n                File outputFile = new File(\"ouput/path/image \" + i + \".tiff\");\n                ImageIO.write(bufferedImage, \"tiff\", outputFile);\n                outputFileList.add(outputFile);\n            }\n\n        }\n        catch (IOException e)\n        {\n            System.out.println(e.toString());\n        }\n\n        return outputFileList;\n    }\n\n    public static void CreateFaxTiff(File tiffFile) {\n        try\n        {\n            BufferedImage bufferedImage = convertToBinary(ImageIO.read(tiffFile));\n\n            String outputFileName = tiffFile.getName().substring(0,tiffFile.getName().indexOf(\".\")) + \"_output.tiff\";\n            String outputFilePath = tiffFile.getParent();\n            File outputFile = new File(outputFilePath + \"/\" + outputFileName);\n            outputFile.createNewFile();\n            System.out.println(outputFile.toString());\n\n            ImageOutputStream imageOutputStream = ImageIO.createImageOutputStream(outputFile);\n            ImageTypeSpecifier imageTypeSpecifier = ImageTypeSpecifier.createFromRenderedImage(bufferedImage);\n            javax.imageio.ImageWriter tiffWriter = ImageIO.getImageWriters(imageTypeSpecifier, \"TIFF\").next();\n            tiffWriter.setOutput(imageOutputStream);\n\n            ImageWriteParam imageWriteParam = tiffWriter.getDefaultWriteParam();\n            imageWriteParam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);\n            //Arrays.stream(imageWriteParam.getCompressionTypes()).sequential().forEach(System.out::println);\n            imageWriteParam.setCompressionType(\"CCITT T.4\");\n\n            IIOMetadata iioMetadata = tiffWriter.getDefaultImageMetadata(imageTypeSpecifier, imageWriteParam);\n            IIOImage iioImage = new IIOImage(bufferedImage, null, iioMetadata);\n\n            tiffWriter.write(null, iioImage, imageWriteParam);\n\n            imageOutputStream.close();\n            tiffWriter.dispose();\n\n        }\n        catch (IOException ex)\n        {\n            System.out.println(ex.toString());\n        }\n    }\n\n    public static BufferedImage convertToBinary(Image image) {\n        int width = image.getWidth(null);\n        int height = image.getHeight(null);\n\n        // Create a new BufferedImage with the desired type\n        BufferedImage binaryImage = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_BINARY);\n\n        // Draw the original image onto the new BufferedImage\n        Graphics2D g2d = binaryImage.createGraphics();\n        g2d.drawImage(image, 0, 0, null);\n        g2d.dispose();\n\n        return binaryImage;\n    }\n}",
    "ObjectMapper mapper1 = (ObjectMapper) jsonParser.getCodec();\nObjectMapper mapper2 = mapper1.configure(JsonNodeFeature.STRIP_TRAILING_BIGDECIMAL_ZEROES, false);\nJsonNode root = mapper2.readTree(jsonParser);",
    "public static int solve(String s) {\n    int totalZeroes = 0, curr = 0, maxDelta = Integer.MIN_VALUE;\n    for (int i = 0; i < s.length(); i++) {\n        int d = s.charAt(i) == '1' ? 1 : -1;\n        curr = Math.max(curr + d, d);\n        if (s.charAt(i) == '0') ++totalZeroes;\n        if (i + 1 < s.length()) maxDelta = Math.max(maxDelta, curr);\n    }\n    return totalZeroes + maxDelta;\n}",
    "0 1 2 3 4 5 6 7 8      index\n1 0 1 0 1 0 1 1 0      symbols\n      ^     ^\n      l     r          positions        \n0 1 1 2 2 3 3 4 5      C[i], count of ones BEFORE index i",
    "(l - C[l]) + (C[r] - C[l]) + (n - r - overallonescount + C[r])",
    "(n - overallonescount) + (l - 2 * C[l]) - (r - 2 * C[r])",
    "import random\ns = \"10000011\"\ns = \"\".join([random.choice([\"0\",\"1\"]) for _ in range(random.randint(5,12))])\n\ndef flipdumb(s):\n    best = -1\n    for i in range(len(s)-1):\n        for j in range(i, len(s)-1):\n            best = max(best, s[:i].count(\"0\") + s[i:j+1].count(\"1\") + s[j+1:].count(\"0\"))\n    return best\n\ndef flip(s):\n    n = len(s)\n    cnt = 0\n    maxdiff = -n\n    best = 0\n\n    for i in range(n):\n        diff = i - 2 * cnt\n        best = max(best, maxdiff - diff)\n        maxdiff = max(diff, maxdiff)\n        if s[i] == \"1\":\n            cnt += 1\n\n    return n - cnt + best\n\nprint(s, flip(s), flipdumb(s))\n\n00101 5 5\n11010 4 4\n11111100000 11 11\n10000101 6 6",
    "-- counter.lua\n\nlocal cnt = redis.call('incr', 'counter')\nif cnt == 25000 then\n    redis.call('set', 'counter', '0')\nend\nreturn cnt",
    "git grep -n \"[my-lib-version]\" $(git for-each-ref --format=\"%(refname:short)\" refs/remotes/origin/)",
    "configurations.all {\n    resolutionStrategy.eachDependency { DependencyResolveDetails details ->\n        if (details.requested.group == \"com.google.errorprone\" &&\n            details.requested.name == \"error_prone_annotations\") {\n            details.useVersion \"2.5.1\"\n        }\n    }\n}",
    "dependencies {\n    implementation('com.example.some-library:version') {\n         exclude group: \"com.google.errorprone\", module: \"error_prone_annotations\"\n    }\n}",
    "configurations.all {\n    exclude group: \"com.google.errorprone\", module: \"error_prone_annotations\"\n}",
    "Multi-Release: true",
    "System.out.println(\n    DateTimeFormatter\n        .ofLocalizedPattern(\"yyyyMM\")\n        .withLocale(Locale.CHINESE).format(LocalDate.now())\n);\n\n// prints \u516c\u51432025\u5e742\u6708",
    "for (int i = 0; i < n - 3; i++) {\n        for (int j = i + 1; j < n - 2; j++) {\n            for (int k = j + 1; k < n - 1; k++) {\n                for (int l = k + 1; l < n; l++) {",
    "for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (j == i) continue;\n            for (int k = 0; k < n; k++) {\n                if ((k == i) || (k == j)) continue;\n                for (int l = 0; l < n; l++) {\n                    if ((l == i) || (l == j) || (l == k)) continue;",
    "Original array: [1, 2, 1, 2, 3, 4]\nArray for checking: [1, 1, 2, 2, 3, 4]\nChecking: 2 vs 4 at indices 0, 1, 2, 3\nChecking: 2 vs 5 at indices 0, 1, 2, 4\nChecking: 2 vs 6 at indices 0, 1, 2, 5\nChecking: 2 vs 4 at indices 0, 1, 3, 2\nChecking: 2 vs 5 at indices 0, 1, 3, 4\nChecking: 2 vs 6 at indices 0, 1, 3, 5\nChecking: 2 vs 5 at indices 0, 1, 4, 2\nChecking: 2 vs 5 at indices 0, 1, 4, 3\nChecking: 2 vs 7 at indices 0, 1, 4, 5\nChecking: 2 vs 6 at indices 0, 1, 5, 2\nChecking: 2 vs 6 at indices 0, 1, 5, 3\nChecking: 2 vs 7 at indices 0, 1, 5, 4\nChecking: 3 vs 3 at indices 0, 2, 1, 3\nKNOWN SOLUTION CHECK: 3 vs 3\nFound 4-SUM: 1 + 2 = 1 + 2 at indices 0, 2, 1, 3\nResult with sorting: true",
    "DEROctetString.getInstance(inetAddress.getAddress())",
    "new DEROctetString(inetAddress.getAddress())",
    "new GeneralName(GeneralName.iPAddress, arguments.ipAddress)",
    "public void doBFS(Vertex start) {\n    queue.add(start);\n    while (!queue.isEmpty()) {\n        Vertex current = queue.poll();\n        System.out.println(\"vertex \" + current + \" visited\");\n        for (Vertex target : graph.getNodes().getOrDefault(current, List.of())) {\n            if (!this.visited.contains(target)) {\n                queue.add(target);\n            }\n        }\n    }\n}",
    "this.graph.getNodes().forEach((key, value) -> {    // O(|V|)\n  this.queue.add(key);                             //   O(1)\n  this.queue.addAll(value);                        //   O(|vertex.adjacent|)\n  while(!this.queue.isEmpty()) {                   //   O(1)\n    Vertex vertex = this.queue.poll();             //     O(1)\n    if(this.visited.contains(vertex)) {            //     O(log(|V|)) worst-case\n      continue;                                    //       O(1)\n    }                                              //\n    System.out.print(vertex + \" -> \");             //     O(1)\n    visited.add(vertex);                           //     O(1)\n  }                                                //\n});                                                //",
    "public class BreadthFirstSearch {\n\n    private final Graph graph;\n    private final Queue<Vertex> queue;\n    private final boolean[] visited;\n\n    public BreadthFirstSearch(Graph graph) {\n        this.graph = graph;\n        this.queue = new LinkedList<>();\n        this.visited = new boolean[graph.nodes.size()];\n    }\n\n    private void enqueue(final Vertex vertex)\n    {\n        int index = vertex.index;\n        if (!this.visited[index])\n        {\n            this.queue.add(vertex);\n        }\n    }\n\n    public void doBFS() {\n        this.graph.getNodes().forEach((key, value) -> {\n            this.enqueue(key);\n            while(!this.queue.isEmpty()) {\n                final Vertex vertex = this.queue.poll();\n                System.out.print(vertex + \" -> \");\n                LinkedList<Vertex> neighbours = vertex.getAdjacent();\n                for (final Vertex adjacent: neighbours)\n                {\n                    this.enqueue(adjacent);\n                }\n            }\n        });\n    }\n}",
    "// Needs import java.lang.foreign.*; java.lang.invoke.MethodHandle \n\nfinal int maxChars = 1024;\ntry(Arena arena = Arena.ofConfined()) {\n\n    // Allocations for GetWindowTextW + GetWindowThreadProcessId\n    MemorySegment lpString = arena.allocate(JAVA_CHAR, maxChars);\n    MemorySegment lpdwProcessId = arena.allocate(Native_h.DWORD);\n\n    for (int i = 0; i < 100; i++) {\n        if (i > 0) Thread.sleep(1000L);\n\n        MemorySegment hWnd = Native_h.GetForegroundWindow();\n        int used = Native_h.GetWindowTextW(hWnd, lpString, maxChars-1);\n        Objects.checkIndex(used, maxChars);\n        String text = lpString.getString(0, StandardCharsets.UTF_16LE);\n\n        int rc = Native_h.GetWindowThreadProcessId(hWnd, lpdwProcessId);\n        // NB check that (rc != 0)\n        int pid = lpdwProcessId.get(Native_h.DWORD, 0);\n        System.out.format(\"GetForegroundWindow  hWnd:%x => `%s` PID %d%n\", hWnd.address(), text, pid);\n    }\n}",
    "echo #include ^<shlobj_core.h^> > Native.h\n\njextract -luser32 -t yourpackage.name --output src --include-function GetForegroundWindow --include-function GetWindowTextW --include-function GetWindowThreadProcessId Native.h",
    "class Native_h {\n    static final SymbolLookup SYMBOL_LOOKUP = SymbolLookup.libraryLookup(System.mapLibraryName(\"user32\"), Arena.ofAuto());\n\n    public static final ValueLayout.OfByte C_CHAR =(ValueLayout.OfByte)Linker.nativeLinker().canonicalLayouts().get(\"char\");\n    public static final ValueLayout.OfInt C_INT = (ValueLayout.OfInt) Linker.nativeLinker().canonicalLayouts().get(\"int\");\n    public static final ValueLayout.OfInt C_LONG = (ValueLayout.OfInt) Linker.nativeLinker().canonicalLayouts().get(\"long\");\n    public static final OfInt DWORD = C_LONG;\n    public static final AddressLayout C_POINTER = ((AddressLayout) Linker.nativeLinker().canonicalLayouts().get(\"void*\"))\n            .withTargetLayout(MemoryLayout.sequenceLayout(java.lang.Long.MAX_VALUE, C_CHAR));\n\n    public static final MethodHandle GetForegroundWindow$HANDLE = Linker.nativeLinker().downcallHandle(SYMBOL_LOOKUP.find(\"GetForegroundWindow\").get(), FunctionDescriptor.of(Native_h.C_POINTER));\n    public static MemorySegment GetForegroundWindow() {\n        var mh$ = GetForegroundWindow$HANDLE;\n        try {\n            return (MemorySegment)mh$.invokeExact();\n        } catch (Throwable ex$) {\n           throw new AssertionError(\"should not reach here\", ex$);\n        }\n    }\n    public static final MethodHandle GetWindowTextW$HANDLE = Linker.nativeLinker().downcallHandle(\n            SYMBOL_LOOKUP.find(\"GetWindowTextW\").get(),\n            FunctionDescriptor.of(Native_h.C_INT, Native_h.C_POINTER, Native_h.C_POINTER, Native_h.C_INT));\n\n    public static int GetWindowTextW(MemorySegment hWnd, MemorySegment lpString, int nMaxCount) {\n        var mh$ = GetWindowTextW$HANDLE;\n        try {\n            return (int)mh$.invokeExact(hWnd, lpString, nMaxCount);\n        } catch (Throwable ex$) {\n           throw new AssertionError(\"should not reach here\", ex$);\n        }\n    }\n    public static final MethodHandle GetWindowThreadProcessId$HANDLE = Linker.nativeLinker().downcallHandle(\n            SYMBOL_LOOKUP.find(\"GetWindowThreadProcessId\").get(), FunctionDescriptor.of(Native_h.C_LONG, Native_h.C_POINTER, Native_h.C_POINTER));\n    public static int GetWindowThreadProcessId(MemorySegment hWnd, MemorySegment lpdwProcessId) {\n        var mh$ = GetWindowThreadProcessId$HANDLE;\n        try {\n            return (int)mh$.invokeExact(hWnd, lpdwProcessId);\n        } catch (Throwable ex$) {\n           throw new AssertionError(\"should not reach here\", ex$);\n        }\n    }\n}",
    "import java.nio.charset.StandardCharsets;\n\nimport java.util.Optional;\n\nimport java.lang.invoke.MethodHandle;\n\nimport java.lang.foreign.Linker;\nimport java.lang.foreign.SymbolLookup;\nimport java.lang.foreign.FunctionDescriptor;\nimport java.lang.foreign.ValueLayout;\nimport java.lang.foreign.MemorySegment;\nimport java.lang.foreign.Arena;\n\npublic class WindowsForegroundWindowDetector {\n    public record WindowInfo(long pid,\n                             String title,\n                             MemorySegment hwnd) {\n        // Deliberately empty.\n    }\n\n    private final MethodHandle GetForegroundWindow;\n\n    private final MethodHandle GetWindowThreadProcessId;\n\n    private final MethodHandle GetWindowTextW;\n\n    public WindowsForegroundWindowDetector() {\n        Linker linker = Linker.nativeLinker();\n        SymbolLookup lookup =\n            SymbolLookup.libraryLookup(\"User32\", Arena.global());\n\n        GetForegroundWindow = linker.downcallHandle(\n            lookup.findOrThrow(\"GetForegroundWindow\"),\n            FunctionDescriptor.of(\n                ValueLayout.ADDRESS)); // returns HWND\n\n        GetWindowThreadProcessId = linker.downcallHandle(\n            lookup.findOrThrow(\"GetWindowThreadProcessId\"),\n            FunctionDescriptor.of(\n                ValueLayout.JAVA_INT,                           // returns DWORD\n                ValueLayout.ADDRESS.withName(\"hWnd\"),           // HWND\n                ValueLayout.ADDRESS.withName(\"lpdwProcessId\")));// LPDWORD \n\n        GetWindowTextW = linker.downcallHandle(\n            lookup.findOrThrow(\"GetWindowTextW\"),\n            FunctionDescriptor.of(\n                ValueLayout.JAVA_INT,                           // returns int\n                ValueLayout.ADDRESS.withName(\"hWnd\"),           // HWND\n                ValueLayout.ADDRESS.withName(\"lpString\"),       // LPWSTR\n                ValueLayout.JAVA_INT.withName(\"nMaxCount\")));   // int\n    }\n\n    private WindowInfo toWindowInfo(MemorySegment hwnd) {\n        int rawPID;\n        String title;\n        try (Arena arena = Arena.ofConfined()) {\n            MemorySegment lpdwProcessId =\n                arena.allocateFrom(ValueLayout.JAVA_INT, 0);\n\n            int threadID;\n            try {\n                threadID = (int) GetWindowThreadProcessId.invokeExact(\n                    hwnd, lpdwProcessId);\n            } catch (Throwable t) {\n                throw new RuntimeException(\n                    \"GetWindowThreadProcessId failed.\", t);\n            }\n            if (threadID == 0) {\n                throw new RuntimeException(\"GetWindowThreadProcessId failed.\");\n            }\n            rawPID = lpdwProcessId.get(ValueLayout.JAVA_INT, 0);\n\n            int maxTitleLength = 1024;\n            MemorySegment titleBuffer =\n                arena.allocate(ValueLayout.JAVA_CHAR, maxTitleLength);\n\n            int titleCharCount;\n            try {\n                titleCharCount = (int) GetWindowTextW.invokeExact(\n                    hwnd, titleBuffer, maxTitleLength);\n            } catch (Throwable t) {\n                throw new RuntimeException(\"GetWindowTextW failed.\", t);\n            }\n            if (titleCharCount == 0) {\n                throw new RuntimeException(\"GetWindowTextW failed.\");\n            }\n            title = titleBuffer.getString(0, StandardCharsets.UTF_16LE);\n        }\n\n        long pid = ((long) rawPID) & 0xffffffffL;\n        return new WindowInfo(pid, title, hwnd);\n    }\n\n    public Optional<WindowInfo> detectForegroundWindow() {\n        MemorySegment hwnd;\n        try {\n            hwnd = (MemorySegment) GetForegroundWindow.invokeExact();\n        } catch (Throwable t) {\n            throw new RuntimeException(\"GetForegroundWindow failed.\", t);\n        }\n\n        if (hwnd.equals(MemorySegment.NULL)) {\n            return Optional.empty();\n        } else {\n            return Optional.of(toWindowInfo(hwnd));\n        }\n    }\n\n    public static void main(String[] args) {\n        Optional<WindowInfo> info =\n            new WindowsForegroundWindowDetector().detectForegroundWindow();\n\n        if (info.isPresent()) {\n            System.out.println(info.get());\n        } else {\n            System.out.println(\"No foreground window found.\");\n        }\n    }\n}",
    "platforms:\n- os: OS X\n  osVersion: Big Sur\n  browserName: Chrome\n  browserVersion: latest\n  chromeOptions: \n    args: \n    - incognito\n    - --start-maximized",
    "// Code #1\n cart.getCartItems().remove(cartItem);\n cartRepository.save(cart);",
    "// Code #2\n cartItemRepository.delete(cartItem);",
    "// Code #3\n cartItemRepository.deleteCartItemByProductIdAndCartId(cartId, productId);",
    "cart.getCartItems().remove(cartItem); // remove from parent collection\ncartItem.setCart(null);               // prevent Hibernate from reattaching it\ncartRepository.save(cart);             // persist changes \ncartItemRepository.delete(cartItem);   // ensure the entity is deleted if orphanRemoval fails",
    "set JFXHOME=C:\\java\\javafx-sdk-YY\nset JFXMOD=C:\\java\\javafx-jmods-YY",
    "javac --module-path \"%JFXHOME%/lib\" --add-modules javafx.controls,javafx.fxml --source-path src -d targetdir src\\application\\Main.java",
    "copy src\\application\\application.css targetdir\\application\\application.css",
    "java --module-path \"%JFXHOME%/lib\" --add-modules javafx.controls,javafx.fxml --class-path targetdir application.Main",
    "dir %JFXMOD%\\*.jmod",
    "jlink --module-path \"%JFXMOD%\" --add-modules javafx.controls,javafx.fxml --output myjre",
    "myjre\\bin\\java --class-path targetdir application.Main",
    "jar -c -f app.jar --main-class application.Main -C targetdir .",
    "myjre\\bin\\java -jar app.jar",
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.jamesd.examples</groupId>\n    <artifactId>springfx23</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <name>springfx23</name>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <junit.version>5.10.2</junit.version>\n    </properties>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>3.4.2</version>\n    </parent>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-controls</artifactId>\n            <version>23.0.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-fxml</artifactId>\n            <version>23.0.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-api</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.13.0</version>\n                <configuration>\n                    <source>23</source>\n                    <target>23</target>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <version>3.8.1</version>\n                <executions>\n                    <execution>\n                        <id>copy-dependencies</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>copy-dependencies</goal>\n                        </goals>\n                        <configuration>\n                            <excludeGroupIds>org.openjfx</excludeGroupIds>\n                            <outputDirectory>${project.build.directory}/lib</outputDirectory>\n                            <overWriteReleases>false</overWriteReleases>\n                            <overWriteSnapshots>false</overWriteSnapshots>\n                            <overWriteIfNewer>true</overWriteIfNewer>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>",
    "package org.jamesd.examples.springfx23;\n\npublic class MessageProvider {\n    public String getMessage() {\n        return \"Hello from JavaFX with Spring\";\n    }\n}",
    "package org.jamesd.examples.springfx23;\n\nimport javafx.fxml.FXML;\nimport javafx.scene.control.Label;\nimport org.springframework.beans.factory.annotation.Autowired;\n\npublic class HelloController {\n\n    @Autowired\n    private MessageProvider messageProvider;\n    @FXML\n    private Label welcomeText;\n\n    @FXML\n    protected void onHelloButtonClick() {\n        welcomeText.setText(messageProvider.getMessage());\n    }\n}",
    "package org.jamesd.examples.springfx23;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class Config {\n    @Bean\n    public HelloController helloController() {\n        return new HelloController();\n    }\n\n    @Bean\n    public MessageProvider messageProvider() {\n        return new MessageProvider();\n    }\n}",
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.layout.VBox?>\n\n<?import javafx.scene.control.Button?>\n<VBox alignment=\"CENTER\" spacing=\"20.0\" xmlns:fx=\"http://javafx.com/fxml\"\n      fx:controller=\"org.jamesd.examples.springfx23.HelloController\">\n    <padding>\n        <Insets bottom=\"20.0\" left=\"20.0\" right=\"20.0\" top=\"20.0\"/>\n    </padding>\n\n    <Label fx:id=\"welcomeText\"/>\n    <Button text=\"Hello!\" onAction=\"#onHelloButtonClick\"/>\n</VBox>",
    "package org.jamesd.examples.springfx23;\n\nimport javafx.application.Platform;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.ApplicationArguments;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\n\nimport java.io.IOException;\n\n@SpringBootApplication\npublic class HelloApplication implements ApplicationRunner {\n\n    @Autowired\n    private ApplicationContext appContext;\n\n    public void run(ApplicationArguments args) {\n        Platform.startup(this::runUI);\n    }\n\n    public void runUI() {\n        try {\n            Stage stage = new Stage();\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"hello-view.fxml\"));\n            fxmlLoader.setControllerFactory(appContext::getBean);\n            Scene scene = new Scene(fxmlLoader.load(), 320, 240);\n            stage.setTitle(\"Hello!\");\n            stage.setScene(scene);\n            stage.show();\n        } catch (IOException exc) {\n            exc.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        SpringApplication.run(HelloApplication.class, args);\n    }\n}",
    "jlink --add-modules javafx.base,javafx.graphics,javafx.controls,javafx.fxml --module-path javafx-mods/javafx-jmods-23.0.2 --output JavaWithFX23",
    "jpackage --runtime-image JavaWithFX23/ --name \"Hello Spring World\" --dest HelloSpring --main-jar ~/Documents/Java/FX\\ Projects/springfx23/target/springfx23-1.0-SNAPSHOT.jar --main-class org.jamesd.examples.springfx23.HelloApplication --input ~/Documents/Java/FX\\ Projects/springfx23/target/lib",
    "jpackage --add-modules javafx.controls,javafx.fxml --module-path javafx-mods/javafx-jmods-23.0.2 --name \"Hello Spring World\" --dest HelloSpring --main-jar ~/Documents/Java/FX\\ Projects/springfx23/target/springfx23-1.0-SNAPSHOT.jar --main-class org.jamesd.examples.springfx23.HelloApplication --input ~/Documents/Java/FX\\ Projects/springfx23/target/lib",
    "#  org.springframework.boot.autoconfigure.web.servlet.MultipartProperties\nspring.servlet.multipart:\n  max-file-size: 50MB\n  max-request-size: 60MB\n  file-size-threshold: 64KB",
    "import java.util.*;\n\npublic class KMostFrequent {\n    public static List<Integer> topKFrequent(int[] nums, int k) {\n        // Step 1: Count the frequency of each element\n        Map<Integer, Integer> frequencyMap = new HashMap<>();\n        for (int num : nums) {\n            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);\n        }\n\n        // Step 2: Use a MinHeap (PriorityQueue) to keep the top K elements\n        PriorityQueue<Map.Entry<Integer, Integer>> minHeap = new PriorityQueue<>(\n            Comparator.comparingInt(Map.Entry::getValue) // MinHeap based on frequency\n        );\n\n        // Step 3: Iterate over the frequency map and maintain only the top K elements\n        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {\n            minHeap.offer(entry);\n            if (minHeap.size() > k) {\n                minHeap.poll(); // Remove the least frequent element\n            }\n        }\n\n        // Step 4: Extract elements from the MinHeap\n        List<Integer> result = new ArrayList<>();\n        while (!minHeap.isEmpty()) {\n            result.add(minHeap.poll().getKey());\n        }\n        Collections.reverse(result); // Optional: to maintain descending order of frequency\n\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int[] nums = {1, 1, 1, 2, 2, 3};\n        int k = 2;\n        System.out.println(topKFrequent(nums, k)); // Expected Output: [1, 2]\n    }\n}",
    "public class KMostFrequent {\n\n   List<Integer> result = new ArrayList<>();\n   Map<Integer, Integer> frequencyMap = new HashMap<>();\n\n   public List<Integer> topKFrequent( int[] nums, int k ) {\n\n        // we generate the map with the values as the key, \n        // and the number of occurrences as value\n      for( int num : nums ) {\n         frequencyMap.put( num, frequencyMap.getOrDefault( num, 0 ) + 1 );\n      }\n\n        // iterate over the map\n      for( Map.Entry<Integer, Integer> entry : frequencyMap.entrySet() ) {\n         if( result.isEmpty() ) {\n            result.add( entry.getKey() );\n         }\n         else if( result.size() < k ) {\n              // in the case that **result** has a size smaller than **k**, \n              // there is a possibility that it has not been entered by the **add** \n              // method, in which case, we enter it here\n            if(  ! add( entry, k ) ) {\n               result.add( entry.getKey() );\n            }\n         }\n         else {\n            add( entry, k );\n         }\n      }\n      return result;\n   }\n\n   boolean add( Map.Entry<Integer, Integer> entry, int k ) {\n      boolean out = false;\n      for( int i = 0; i < result.size(); i ++ ) {\n\n           // if the condition is satisfied, we add the **key** to **result** then\n           // we check its size, and if it is greater than **k**, we delete the last item\n         if( entry.getValue() > frequencyMap.get( result.get( i ) ) ) {\n            result.add( i, entry.getKey() );\n            out = true;\n            if( result.size() > k ) {\n               result.remove( k );\n            }\n            break;\n         }\n      }\n      return out;\n   }\n\n   void init() {  // no unnecessary static methods :)\n      int[] nums = { 1, 1, 1, 2, 2, 3 };\n      int k = 2;\n      System.out.println( topKFrequent( nums, k ) ); \n   }\n\n   public static void main( String[] args ) {\n      new KMostFrequent().init();\n   }    \n}",
    "@Test\n@DisplayName(\"Update name\")\nvoid testTaskServiceUpdateName() {\n    String nextUniqueId = TaskService.generateUniqueId();\n    Task newTask = new Task(nextUniqueId, \"Test 1\", \"Description\");\n    TaskService.addTask(newTask);\n    String updatedName = \"Updated name\";\n    TaskService.updateName(nextUniqueId, updatedName);\n    assertEquals(updatedName, newTask.getName());\n}",
    "@Component\n@Slf4j\npublic class TransactionLogEventListener {\n  @EventListener\n  @TransactionalEventListener(phase = TransactionPhase.AFTER_COMMIT)\n  public void handleTransactionEvent(TransactionLogEvent event) {\n    log.info(\"save success! -> id : {}, target : {}\", event.getId(), event.getTarget());\n  }\n}",
    "@Getter\npublic class TransactionLogEvent extends ApplicationEvent {\n\n  private final Long id;\n  private final String target;\n\n  public TransactionEmailEvent(Object source, Long id, String target) {\n    super(source);\n    this.id = id;\n    this.target = target;\n  }\n}",
    "// .. Component\n// ... other codes\n@Autowired\nprivate ApplicationEventPublisher applicationEventPublisher;\n\n@Transactional\npublic void save(Long id, String target) {\n\n  repository.save(id, target);\n\n  applicationEventPublisher.publishEvent(new TransactionLogEvent(this, id, target));\n}",
    "public class TransactionUtil {\n    public static void runAfterCommit(Runnable action) {\n        TransactionSynchronizationManager.registerSynchronization(new TransactionSynchronization() {\n            @Override\n            public void afterCommit() {\n                action.run();\n            }\n        });\n    }\n}",
    "@Transactional\npublic void save(Long id, String target) {\n    repository.save(id, target);\n    runAfterCommit(() -> log.info(\"save success! -> id : {}, target : {}\", id, target))\n}",
    "Scanner s = new Scanner(System.in);\n// `.useDelimiter` is not called, so the delimiter is\n// the default one, which is `\\\\s+`, i.e. 1 or more whitespace.\n\ns.nextInt();",
    "// THIS IS NOT HOW IT WORKS!\n\nint out = 0;\nwhile (true) {\n  // 'in' = System.in here.\n  int v = in.read();\n\n  // If no user input is available, keep waiting.\n  if (v == -1) continue;\n\n  // Did we hit the delimiter? Then return the number.\n  if (Character.isWhitespace(v)) return out;\n\n  // 'stuff' the new digit into our output and go back\n  // to asking for more keystrokes.\n  int digit = v - '0';\n  out = (out * 10) + digit;\n}",
    "var writer = new PipedWriter();\nvar reader = new PipedReader(os);\nwriter.write(\"first turn finish_ \"); // remember the delimiter at the end!\nScanner in = new Scanner(reader);\nSystem.out.println(in.next() + \" \" + in.next() + \" \" + in.next());\nwriter.write(\"next turn_ \");\nSystem.out.println(in.next()+ \" \" + in.next());",
    "function doAuth(username, password) {\n    return fetch('http://localhost:8080/user/login', {\n            method: 'POST',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        })",
    "doAuth(\"foo\", \"bar\").then(request => request.json()).then(jsonRequest => {...setCookie})",
    "export async function POST(req, res) {\n    try {\n        const body = await req.json();\n\n        const response = NextResponse.json({message: 'Cookie set successfully'});\n\n        response.cookies.set('session', body.access_token, {\n            httpOnly: false,\n            path: '/',\n            maxAge: body.expires_in,\n            expires: new Date(Date.now() + (body.expires_in))\n        });\n\n        return response;\n\n    } catch (error) {\n        return new Response(error.message, {status: 500});\n    }\n}",
    "WebDriver driver = new ChromeDriver();\n    driver.get(\"https://www.google.com\");\n\n    // Open new tabs\n    driver.switchTo().newWindow(WindowType.TAB).get(\"https://www.facebook.com\");\n    driver.switchTo().newWindow(WindowType.TAB).get(\"https://stackoverflow.com\");\n\n    // Store window handles in a list\n    Set<String> handles = driver.getWindowHandles();\n    List<String> tabs = new ArrayList<>(handles);\n\n    // Switch between tabs using index\n    driver.switchTo().window(tabs.get(1)); // Facebook\n    driver.switchTo().window(tabs.get(2)); // StackOverflow\n    driver.switchTo().window(tabs.get(0)); // Back to Google\n\n    driver.quit();",
    "@Component\n@Scope(\"prototype\")\npublic class Processor {",
    "@Component\npublic abstract class ScheduledTasks {\n\n    private static final Logger log = LoggerFactory.getLogger(ScheduledTasks.class);\n\n    @Lookup\n    protected abstract Processor processor();",
    "flow = new GoogleAuthorizationCodeFlow.Builder(httpTransport, JSON_FACTORY, CLIENT_ID, CLIENT_SECRET, SCOPE)\n            .setAccessType(\"offline\")\n            .setApprovalPrompt(\"force\") //this is mandatory to retrieve refresh token later\n            .build();\n    String url = flow\n            .newAuthorizationUrl()\n            .setRedirectUri(REDIRECT_URI)\n            .build();",
    "textArea.setDropTarget(\n    new DropTarget(textArea, DnDConstants.ACTION_COPY,\n        new DropTargetAdapter() {\n            @Override\n            public void drop(DropTargetDropEvent) {\n                // ...\n            }\n        }));",
    "@Override\npublic void drop(DropTargetDropEvent dtde) {\n    try {\n        dtde.acceptDrop(DnDConstants.ACTION_COPY);\n\n        DataFlavor textFlavor =\n            DataFlavor.selectBestTextFlavor(dtde.getCurrentDataFlavors());\n        if (textFlavor != null) {\n            StringWriter data = new StringWriter();\n            try (Reader dataReader =\n                textFlavor.getReaderForText(dtde.getTransferable())) {\n\n                dataReader.transferTo(data);\n            }\n            textArea.setText(data.toString());\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}",
    "interface RetryableConfig {\n\n    RetryableConfig getOuterConfig();\n\n    void setOuterConfig(RetryableConfig outer);\n\n    default int getRetryCount();\n}",
    "@Getter @Setter\nabstract class RetryableConfigAbstract implements RetryableConfig {\n\n    protected RetryableConfig outerConfig;\n    private Integer retryCount;\n\n    public int getRetryCount() {\n        if (retryCount != null) \n           return retryCount;\n        return outerConfig.getRetryCount();\n    }\n}",
    "@Setter\n@Configuration\n@ConfigurationProperties(\"azure.eventhub\")\npublic class MyEventhubConfig extends RetryableConfigAbstract {\n    private EventhubSettings myEventhub1;\n    private EventhubSettings someEventHub;\n\n    public EventhubSettings getMyEventhub1() {\n        if (myEventHub1 != null) myEventHub.setOuter(this);\n        return myEventHub1;\n    }\n\n    // same for `someEventHub`\n\n}",
    "public class EventhubSettings extends RetryableConfigAbstract {\n    private String eventhubName;\n    private String sasKeyName;\n    private String sasKeyValue;\n    private int retryCount;\n    private int timeOut;\n}",
    "myEventHub.getMyEventhub1().getRetryCount();",
    "class EncYes {\n    const TAG_SIZE = 16;            // Fix 1: Set the tag length to 16 bytes (note that 16 bytes is the PHP/OpenSSL default).\n    const CIPHER =  \"aes-256-gcm\";  // Fix 2: set AES-256 as the algorithm, as a 32 bytes key is used.\n    public function encrypt($json, $key) {\n        $iv = str_repeat(\"\\0\", 12); // Keep in mind: A static IV is a serious vulnerability for GCM with a fixed key.\n        $tag = \"\";\n        $encrypted = openssl_encrypt($json, self::CIPHER, hex2bin($key), OPENSSL_RAW_DATA, $iv, $tag, \"\", self::TAG_SIZE); \n        if ($encrypted === false) {\n            throw new Exception(\"Encryption failed\");\n        }\n        return bin2hex($encrypted . $tag);\n    }\n    public function decrypt($json, $key) {\n        $iv = str_repeat(\"\\0\", 12); // Keep in mind: A static IV is a serious vulnerability for GCM with a fixed key.\n        $data = hex2bin($json);\n        $encrypted = substr($data, 0, -self::TAG_SIZE); \n        $tag = substr($data, -self::TAG_SIZE);\n        $decrypted = openssl_decrypt($encrypted, self::CIPHER, hex2bin($key), OPENSSL_RAW_DATA, $iv, $tag);\n        if ($decrypted === false) {\n            throw new Exception(\"Decryption failed\");\n        }\n        return $decrypted;\n    }\n}",
    "// decryption of your sample data\n$aesenc = new EncYes();\n$dt = $aesenc->decrypt(\"B062024E2B9C4D4FFB204AB3622459CEFEAEFF969D\", \"a59d23ac19020c989cd8566a4ea16646ad4e02f67516cedc3bd7d833efda516a\");\nprint($dt . PHP_EOL); // Hello\n\n// complete encryption/decryption cycle\n$ct = $aesenc->encrypt(\"The quick brown fox jumps over the lazy dog\", \"a59d23ac19020c989cd8566a4ea16646ad4e02f67516cedc3bd7d833efda516a\");\n$dt = $aesenc->decrypt($ct, \"a59d23ac19020c989cd8566a4ea16646ad4e02f67516cedc3bd7d833efda516a\");\nprint($dt . PHP_EOL); // The quick brown fox jumps over the lazy dog",
    "import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\nimport org.springframework.security.web.SecurityFilterChain;\n\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig {\n\n    @Bean\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n        http\n            .authorizeHttpRequests((requests) -> requests\n                .requestMatchers(\"/\", \"/home\").permitAll()\n                .anyRequest().authenticated()\n            )\n            .formLogin((form) -> form\n                .loginPage(\"/login\")\n                .permitAll()\n            )\n            .logout((logout) -> logout.permitAll());\n\n        return http.build();\n    }\n\n    @Bean\n    public UserDetailsService userDetailsService() {\n        UserDetails user =\n             User.withDefaultPasswordEncoder()\n                .username(\"user\")\n                .password(\"password\")\n                .roles(\"USER\")\n                .build();\n\n        return new InMemoryUserDetailsManager(user);\n    }\n}",
    "import java.io.FileInputStream;\n\nimport org.apache.poi.ss.formula.*;\nimport org.apache.poi.ss.formula.ptg.*;\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.xssf.usermodel.*;\nimport org.apache.poi.ss.util.CellAddress;\n\npublic class ExcelHyperlinkDestinationFromFormula {\n\n private static String getHyperlinkFormulaDestination(XSSFSheet sheet, String hyperlinkFormula) {\n  String result = \"HyperlinkFormulaDestination not found\";  \n  XSSFEvaluationWorkbook workbookWrapper = XSSFEvaluationWorkbook.create((XSSFWorkbook) sheet.getWorkbook());\n  Ptg[] ptgs = FormulaParser.parse(hyperlinkFormula, workbookWrapper, FormulaType.CELL, sheet.getWorkbook().getSheetIndex(sheet));\n  for (int i = 0; i < ptgs.length; i++) {\n   //System.out.println(ptgs[i]);\n   if (ptgs[i] instanceof FuncVarPtg) {\n    FuncVarPtg funcVarPtg = (FuncVarPtg)ptgs[i];\n    //System.out.println(funcVarPtg);\n    if (\"HYPERLINK\".equals(funcVarPtg.getName())) {\n     int firstOperand = funcVarPtg.getNumberOfOperands(); \n     Ptg firstOperandPtg = ptgs[i-firstOperand]; //Reverse Polish notation: first operand is number of operands before funcVarPtg\n     //System.out.println(firstOperandPtg);\n     if (firstOperandPtg instanceof StringPtg) {\n      result = ((StringPtg)firstOperandPtg).getValue();\n     } else if (firstOperandPtg instanceof RefPtg) {\n      Cell cell = sheet.getRow(((RefPtg)firstOperandPtg).getRow()).getCell(((RefPtg)firstOperandPtg).getColumn());\n      DataFormatter dataFormatter = new DataFormatter();\n      dataFormatter.setUseCachedValuesForFormulaCells(true);\n      result = dataFormatter.formatCellValue(cell);\n     } else if (firstOperandPtg instanceof FuncVarPtg) {\n      result = \"HyperlinkFormulaDestination behind FuncVarPtg not parsed\"; //ToDo\n     } else if (firstOperandPtg instanceof NamePtg) {\n      result = \"HyperlinkFormulaDestination behind NamePtg not parsed\"; //ToDo       \n     }\n    }\n   }\n  }\n  return result;\n }\n\n public static void main(String[] args) throws Exception {\n\n  XSSFWorkbook workbook = (XSSFWorkbook)WorkbookFactory.create(new FileInputStream(\"./test.xlsx\"));  \n  XSSFSheet sheet = workbook.getSheetAt(0);\n  for (Row row : sheet) {\n   for (Cell cell : row) {\n    if (cell.getCellType() == CellType.FORMULA) {\n     CellAddress source = cell.getAddress();\n     String formula = cell.getCellFormula();\n     if (formula.toLowerCase().contains(\"hyperlink(\")) {\n      System.out.println(source + \"=\" + formula);\n      String hyperlinkFormulaDestination = getHyperlinkFormulaDestination(sheet, formula);\n      System.out.println(hyperlinkFormulaDestination);\n     }   \n    }\n   }\n  }\n\n  workbook.close();\n }\n}",
    "String[] myArray1 = { \"foo\", \"bar\" };\n    String[] myArray2 = { \"bar\", \"baz\" };\n    // more arrays",
    "Map<Integer, List<String>> map\n            = Map.ofEntries(\n                    Map.entry(1, List.of(\"foo\", \"bar\")),\n                    Map.entry(2, List.of(\"bar\", \"baz\"))\n                    // more entries\n    );",
    "HashMap<Integer, ArrayList<String>> map\n            = new HashMap<>(Map.ofEntries(\n                    Map.entry(1, new ArrayList<>(List.of(\"foo\", \"bar\"))),\n                    Map.entry(2, new ArrayList<>(List.of(\"bar\", \"baz\")))\n                    // more entries\n    ));",
    "public class MyArrays {\n    int myArray1[] = { 1, 1 };\n    int myArray2[] = { 2, 2 };\n    int myArray3[] = { 3, 3 };\n    int myArray4[] = { 4, 4 };\n    int myArray5[] = { 5, 5 };\n}",
    "public class ComplicatedWay {\n\n   void usingReflexion() {\n\n        // we create an instance of \"MyArrays\"\n      MyArrays mys = new MyArrays(); \n\n        // using the method \u201cgetDeclaredFields\u201d of the \u201cField\u201d class, \n        // we obtain the fields of the class\n      Field fields[] = MyArrays.class.getDeclaredFields();\n\n      String name;    \n        // Here I'm simply going to sequentially look up the different names, \n        // but in a real scenario, it could be very useful in cases where the array \n        // to use depends on certain conditions, for example, the method could \n        // receive an array with the names of the arrays that are needed.\n      for( int i = 0; i < fields.length; i ++ ) {\n         name = \"myArray\" + ( i + 1 );\n         for( Field field : fields ) {\n            if( field.getName().equals( name ) ) {\n               int aux[] = {};\n               try {\n                    // we iterate over the \u201cfields\u201d fields, and if the name matches, \n                    // we get the array we are interested in, asking the object with \n                    // its \u201cget\u201d method passing the object itself as parameter, \n                    // yes, weird, haha\n                  aux = (int[]) field.get( mys );\n               }\n               catch( IllegalArgumentException | IllegalAccessException ex ) { }\n               for( int item : aux ) {\n                  System.out.print( item + \" \" );\n               }\n               System.out.println( \"\" );\n            }\n         }\n      }\n   }\n\n   void usingMap() {\n        // this is decidedly the most complicated in relation to its effectiveness,\n        // at least I have not found any use cases for it.\n      Map<String, String[]> myMap = new HashMap<>();\n      String myArray1[] = \"hello world\".split( \" \" );\n      String myArray2[] = \"is,all,the\".split( \",\" );\n      String myArray3[] = \"time,in,war\".split( \",\" );\n      myMap.put( \"myArray1\", myArray1 );\n      myMap.put( \"myArray2\", myArray2 );\n      myMap.put( \"myArray3\", myArray3 );    \n      System.out.println( myMap.get( \"myArray1\" )[ 0 ] );    \n   }\n\n   void uncomplicated() {\n      String dat = \"Hello world, you are all the time in war, stop... I want to get off \";\n      String dat2[] = dat.split( \",\" );\n      String datOut[][] = new String[ dat2.length ][];\n      for( int i = 0; i < dat2.length; i++ ) {\n         datOut[ i ] = dat2[ i ].split( \" \" );\n      }\n      for( String arr[] : datOut ) {\n         for( String word : arr ) {\n            System.out.println( word );\n         }\n      }\n   }\n\n   public static void main( String[] args ) {\n      ComplicatedWay cw = new ComplicatedWay();\n      cw.usingReflexion();\n      cw.usingMap();\n      cw.uncomplicated();\n   }\n}",
    "import java.util.Locale;\nimport javax.swing.JOptionPane;\n\npublic class Test {\n    public static void main(String[] args) {\n        \n        //Locale.setDefault(Locale.FRANCE); // Doesn't work\n        Locale.setDefault(Locale.GERMANY); // Works !\n        \n        JOptionPane.showConfirmDialog(null, \"Message\");\n    }\n\n}",
    "import jakarta.validation.constraints.NotBlank;\nimport lombok.AllArgsConstructor;\nimport lombok.NoArgsConstructor;\n\n@NoArgsConstructor\n@AllArgsConstructor\npublic class TestDto {\n\n    @NotBlank\n    private String name;\n\n}",
    "import jakarta.validation.ConstraintViolation;\nimport jakarta.validation.Validator;\nimport jakarta.validation.ValidatorFactory;\nimport jakarta.validation.Validation;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Set;\n\nclass ValidatorUnitTest {\n\n    @Test\n    void test() {\n        // prepare\n        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();\n        Validator validator = factory.getValidator();\n\n        // act\n        Set<ConstraintViolation<Object>> validate1 = validator.validate(new TestDto(\"Patrick\"));\n        Set<ConstraintViolation<Object>> validate2 = validator.validate(new TestDto());\n\n        // assert\n        Assertions.assertEquals(0, validate1.size());\n        Assertions.assertEquals(1, validate2.size());\n    }\n}",
    "TemplateBuilder templateBuilder = compute.templateBuilder();\ntemplateBuilder.fromImage(compute.getImage(\"debian-7-wheezy-v20140408\")); \ntemplateBuilder.locationId(\"europe-west1-a\"); // specifying the zone",
    "public <R extends Record> SelectWhereStep<R> selectFrom(Table<R> table);",
    "@Entity\nclass AuthorEntity {\n\n    @Id\n    Long id;\n\n    @Column\n    String name;\n\n    @OneToMany(fetch = FetchType.LAZY, mappedBy = \"author\")\n    List<BookEntity> books;\n\n}\n\n@Entity\nclass BookEntity {\n\n    @Id\n    Long id;\n\n    @Column\n    String label;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn\n    AuthorEntity author;\n\n}",
    "@Query(\"select book \" +\n        \"from BookEntity book \" +\n        \"where book.label = 'some label'\")\nList<BookEntity> getBooks();",
    "@Query(\"select book.id as bookId, book.author.id as authorId \" +\n        \"from BookEntity book inner join book.author \" +\n        \"where book.label = 'some label'\")\nList<BookEntityDto> getBooks();\n\ninterface BookEntityDto {\n\n    Long getBookId();\n\n    Long getAuthorId();\n\n}",
    "@Query(\"select b as book, b.author.name as authorName \" +\n        \"from BookEntity b inner join b.author \" +\n        \"where b.label = 'some label'\")\nList<BookEntityDto> getBooks();\n\ninterface BookEntityDto {\n\n    BookEntity getBook();\n\n    String getAuthorName();\n\n}",
    "@Query(\"select book \" +\n        \"from BookEntity book \" +\n        \"where book.label = 'some label' order by book.id asc\")\nList<BookEntity> getBooks(Pageable limit);",
    "query = QueryBuilders.termQuery(\"abcField\", xyz);\n                                 ^^^^^^^^",
    "{\n    \"term\" : {\n        \"abcField.keyword\" : {\n            \"value\" : \"xyz\",\n            \"boost\" : 1.0\n        }\n    }\n}",
    "query = QueryBuilders.termQuery(\"abcField.keyword\", xyz);\n                                 ^^^^^^^^^^^^^^^^",
    "def registerEncryptedCertificate(certificateResponse: CertificateResponse)(implicit actorSystem: akka.actor.ActorSystem): Boolean = {\n    var success = false\n\n    try {\n      val decryptedCertificateData = decrypt(Base64.getDecoder.decode(certificateResponse.encryptedCertificate), DatabaseUtil.hashString(PASSWORD))\n      val certificateString = String(decryptedCertificateData, \"UTF-8\")\n\n      // write the certificate to file if it doesn't exist\n      if (!fileExists(SSL_ROOT + s\"${certificateResponse.serverID}.crt\")) {\n        writeFile(SSL_ROOT + s\"${certificateResponse.serverID}.crt\", Seq(certificateString))\n\n        // load the certificate into truststore depending on platform\n        OS.getOS match {\n          case MAC =>\n            Seq(\"bash\", \"-c\", s\"keytool -import -v -trustcacerts -alias ${certificateResponse.serverID} \" +\n              s\"-file ${SSL_ROOT + certificateResponse.serverID}.crt \" +\n              \"-storepass changeit -noprompt -keystore $(/usr/libexec/java_home)/lib/security/cacerts\") !!\n            \n              success = true\n\n          case LINUX =>\n            Seq(\"bash\", \"-c\", s\"keytool -import -v trustcacerts -alias ${certificateResponse.serverID} \" +\n              s\"-file ${SSL_ROOT + certificateResponse.serverID}.crt \" +\n              \"-storepass changeit -noprompt -keystore $(dirname $(dirname $(readlink -f $(which javac))))/lib/security/cacerts\") !!\n\n            success = true\n          //TODO: WINDOWS OS support\n        }\n      } else {\n        actorSystem.log.warning(s\"Certificate for serverID:${certificateResponse.serverID} already exists.\")\n        success = true\n      }\n\n    } catch {\n      case e: Exception =>\n        actorSystem.log.error(s\"Something went wrong processing the certificateResponse:${certificateResponse.toProtoString}\", e)\n    }\n    \n    success\n  }\n\n  def registerEncryptedCertificate(certificateRequest: CertificateRequest)(implicit actorSystem: ActorSystem[_]): CertificateResponse = {\n    var result: CertificateResponse = CertificateResponse(null, SERVER_ID, false, \"Failed to register certificate\")\n\n    try {\n      val decryptedCertificateData = decrypt(Base64.getDecoder.decode(certificateRequest.encryptedCertificate), DatabaseUtil.hashString(PASSWORD))\n      val certificateString = String(decryptedCertificateData, \"UTF-8\")\n\n      // write the certificate to file if it doesn't exist\n      if (!fileExists(SSL_ROOT + s\"${certificateRequest.serverID}.crt\")) {\n        writeFile(SSL_ROOT + s\"${certificateRequest.serverID}.crt\", Seq(certificateString))\n\n        // load the certificate into truststore depending on platform\n        OS.getOS match {\n          case MAC =>\n            Seq(\"bash\", \"-c\", s\"keytool -import -v -trustcacerts -alias ${certificateRequest.serverID} \" +\n              s\"-file ${SSL_ROOT + certificateRequest.serverID}.crt \" +\n              \"-storepass changeit -noprompt -keystore $(/usr/libexec/java_home)/lib/security/cacerts\") !!\n            \n            val encryptedCertificateString = getEncryptedCertificate(PASSWORD)\n\n            result = CertificateResponse(encryptedCertificateString, SERVER_ID, true, \"Successfully registered certificate\")\n\n          case LINUX =>\n            Seq(\"bash\", \"-c\", s\"keytool -import -v trustcacerts -alias ${certificateRequest.serverID} \" +\n              s\"-file ${SSL_ROOT + certificateRequest.serverID}.crt \" +\n              \"-storepass changeit -noprompt -keystore $(dirname $(dirname $(readlink -f $(which javac))))/lib/security/cacerts\") !!\n\n            val encryptedCertificateString = getEncryptedCertificate(PASSWORD)\n\n            result = CertificateResponse(encryptedCertificateString, SERVER_ID, true, \"Successfully registered certificate\")\n          //TODO: WINDOWS OS support\n        }\n      } else {\n        val encryptedCertificateString = getEncryptedCertificate(PASSWORD)\n        result = CertificateResponse(encryptedCertificateString, SERVER_ID, true, \"Certificate already registered\")\n      }\n\n    } catch {\n      case e: Exception =>\n        actorSystem.log.error(s\"Something went wrong processing the certificateRequest:${certificateRequest.toProtoString}\", e)\n    }\n\n    result\n  }\n\n  private def getEncryptedCertificate(password: String): String = {\n    // get our encrypted certificate to return\n    val certificateContents = readFile(SSL_CERTIFICATE_PATH)\n    val encryptedCertificateData = encrypt(certificateContents.getBytes, DatabaseUtil.hashString(password))\n    Base64.getEncoder.encodeToString(encryptedCertificateData)\n  }\n\n  def createCertificateRequest(password: String)(implicit actorSystem: akka.actor.ActorSystem): CertificateRequest = {\n    var result: CertificateRequest = null\n    try {\n      val encryptedCertificate = getEncryptedCertificate(password)\n\n      result = CertificateRequest(encryptedCertificate, SERVER_ID)\n    } catch {\n      case e: Exception =>\n        actorSystem.log.error(e, \"Failed to create certificate request\")\n    }\n    result\n  }",
    "syntax = \"proto3\";\n\npackage api;\n\nmessage CertificateRequest {\n  string encryptedCertificate = 1;\n  string serverID = 2;\n}",
    "syntax = \"proto3\";\n\npackage api;\n\nmessage CertificateResponse {\n  string encryptedCertificate = 1;\n  string serverID = 2;\n  bool success = 3;\n  string message = 4;\n}",
    "val keyStore = loadKeyStore(KEY_STORE_PATH, KEY_STORE_PASS)\n    val entry = keyStore.getEntry(ALIAS, new KeyStore.PasswordProtection(KEY_PASS))\n\n    val keyManagerFactory: KeyManagerFactory = KeyManagerFactory.getInstance(\"SunX509\")\n    keyManagerFactory.init(keyStore, KEY_STORE_PASS)\n\n    val tmf: TrustManagerFactory = TrustManagerFactory.getInstance(\"SunX509\")\n    tmf.init(keyStore)\n\n    val sslContext = SSLContext.getInstance(\"TLS\")\n    sslContext.init(keyManagerFactory.getKeyManagers, tmf.getTrustManagers, new SecureRandom)",
    "val sslContext = SSLManager.getSSLContext\n    val https: HttpsConnectionContext = ConnectionContext.httpsServer(sslContext)\n\n    // create https Engine\n    ConnectionContext.httpsServer(() => {\n      val engine = sslContext.createSSLEngine()\n      engine.setUseClientMode(false)\n      engine.setNeedClientAuth(true)\n      engine\n    })\n\n    Http().newServerAt(\"localhost\", 8443).enableHttps(https).bind(new HydraRoute(HttpsRoutes(clientManager)).masterRoute)\n      .onComplete {\n        case Success(binding) =>\n          val address = binding.localAddress\n          system.log.info(s\"HTTPS Server is listening on ${address.getHostString}:${address.getPort}\")\n        case Failure(ex) =>\n          system.log.error(\"HTTPS Server could not be started\", ex)\n          stop()\n      }",
    "private val sslContext: SSLContext = SSLManager.getSSLContext\n  \n  private def fetchHttps(request: HttpRequest): Unit = {\n    val connectionContext = ConnectionContext.httpsClient(sslContext)\n    http.singleRequest(request = request, connectionContext = connectionContext).pipeTo(self)\n  }",
    "mvn versions:set",
    "mvn versions:set -DnewVersion=\"1.7.2-SNAPSHOT\" versions:update-child-modules",
    "public static enum SortDirection { ASC, DESC };\n\npublic static Comparator<Student> nameCompare(SortDirection sortDirection)\n{\n    return switch (sortDirection) {\n        case ASC -> Comparator.comparing(Student::getName);\n        case DESC -> Comparator.comparing(Student::getName).reversed();\n    };\n}",
    "Objects.requireNonNull(sortDirection);",
    "public static void main(String[] args) {\n        var students = new ArrayList(List.of(new Student(\"A\"), new Student(\"B\")));\n        var ascComparator = Comparator.comparing(Student::getName);\n        var descComparator = Comparator.comparing(Student::getName).reversed();\n\n        students.sort(ascComparator);\n        System.out.println(students);\n\n        students.sort(descComparator);\n        System.out.println(students);\n    }",
    "import java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.FlowLayout;\n\nimport javax.swing.BorderFactory;\nimport javax.swing.ImageIcon;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.SwingUtilities;\n\npublic class JLabelExample implements Runnable {\n\n    public static void main(String[] args) {\n        SwingUtilities.invokeLater(new JLabelExample());\n    }\n\n    @Override\n    public void run() {\n        JFrame frame = new JFrame(\"Frame Test n\u00ba 1\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n        frame.add(createMainPanel(), BorderLayout.CENTER);\n\n        frame.pack();\n        frame.setLocationByPlatform(true);\n        frame.setVisible(true);\n    }\n\n    private JPanel createMainPanel() {\n        JPanel panel = new JPanel(new FlowLayout());\n        panel.setBorder(BorderFactory.createEmptyBorder(50, 200, 50, 200));\n        panel.setBackground(new Color(0x123456));\n\n        JLabel label = new JLabel(\"h\");\n        label.setForeground(Color.WHITE);\n        label.setFont(panel.getFont().deriveFont(36f));\n        panel.add(label);\n\n        return panel;\n    }\n\n}",
    "<activity\n    android:name=\".YourActivity\"\n    android:configChanges=\"orientation|screenSize|screenLayout\" />",
    "public class MainActivity extends AppCompatActivity { \n\n    private static final String TAG = \"ScreenDimensions\";\n    private WindowManager windowManagerInstance;\n    private int currentWidth;\n    private int currentHeight;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        windowManagerInstance = getWindowManager();\n        getScreenDimensions(); // Get initial dimensions\n    }\n\n\n    @Override\n    public void onConfigurationChanged(@NonNull Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        Log.d(TAG, \"onConfigurationChanged called\");\n        getScreenDimensions(); // Update dimensions on config change\n    }\n\n    private void getScreenDimensions() {\n\n        if (VERSION.SDK_INT >= VERSION_CODES.R) {\n            WindowMetrics metrics = windowManagerInstance.getCurrentWindowMetrics();\n            currentWidth = metrics.getBounds().width();\n            currentHeight = metrics.getBounds().height();\n\n        } else {\n            DisplayMetrics metrics = new DisplayMetrics();\n            windowManagerInstance.getDefaultDisplay().getRealMetrics(metrics);\n            currentWidth = metrics.widthPixels;\n            currentHeight = metrics.heightPixels;\n        }\n\n        Log.d(TAG, \"Width: \" + currentWidth + \", Height: \" + currentHeight);\n        // Use currentWidth and currentHeight for your screen capture\n    }\n}",
    "public class LecturerCourseBalancingConstraintProvider implements ConstraintProvider {\n    @Override\n    public Constraint @NonNull [] defineConstraints(@NonNull ConstraintFactory constraintFactory) {\n        return new Constraint[] {\n            fairLecturerCourseAssignment(constraintFactory),\n        };\n    }\n\n    Constraint fairLecturerCourseAssignment(ConstraintFactory constraintFactory) {\n        return constraintFactory.forEach(LecturerCourseAssignment.class)\n            .groupBy(LecturerCourseAssignment::getLecturer, ConstraintCollectors.sum(x -> x.getCourse().getDuration()))\n            .complement(Lecturer.class, t -> 0)\n            .groupBy(ConstraintCollectors.loadBalance((lecturer, totalDuration) -> lecturer, (lecturer, totalDuration) -> totalDuration))\n            .penalizeBigDecimal(HardSoftBigDecimalScore.ONE_SOFT, LoadBalance::unfairness)\n            .asConstraint(\"fairLecturerCourseAssignment\");\n    }\n}",
    "2025-01-31 11:06:18,752 INFO  [ai.tim.sol.cor.imp.sol.DefaultSolver] (pool-19-thread-1) Solving started: time spent (1), best score (-4init/0hard/0soft), environment mode (FULL_ASSERT), move thread count (NONE), random (JDK with seed 0).\n2025-01-31 11:06:18,752 INFO  [ai.tim.sol.cor.imp.sol.DefaultSolver] (pool-19-thread-1) Problem scale: entity count (4), variable count (4), approximate value count (2), approximate problem scale (16).\n2025-01-31 11:06:18,756 INFO  [ai.tim.sol.cor.imp.con.DefaultConstructionHeuristicPhase] (pool-19-thread-1) Construction Heuristic phase (0) ended: time spent (5), best score (0hard/-7.07107soft), move evaluation speed (2666/sec), step total (4).\n2025-01-31 11:06:18,756 INFO  [com.aim.SolverResource] (pool-20-thread-1) Score: 0hard/-7.07107soft\n2025-01-31 11:06:18,756 INFO  [com.aim.SolverResource] (pool-20-thread-1) Courses:\n2025-01-31 11:06:18,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=1, name=Ahmad], course=Course [id=1, name=Fizik 1, duration=70]]\n2025-01-31 11:06:18,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=2, name=Faizal], course=Course [id=2, name=Chem 1, duration=60]]\n2025-01-31 11:06:18,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=2, name=Faizal], course=Course [id=3, name=Math 1, duration=60]]\n2025-01-31 11:06:18,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=1, name=Ahmad], course=Course [id=4, name=Programming 1, duration=60]]\n2025-01-31 11:06:28,751 INFO  [ai.tim.sol.cor.imp.loc.DefaultLocalSearchPhase] (pool-19-thread-1) Local Search phase (1) ended: time spent (10000), best score (0hard/-7.07107soft), move evaluation speed (7051/sec), step total (35182).\n2025-01-31 11:06:28,754 INFO  [ai.tim.sol.cor.imp.sol.DefaultSolver] (pool-19-thread-1) Solving ended: time spent (10002), best score (0hard/-7.07107soft), move evaluation speed (7047/sec), phase total (2), environment mode (FULL_ASSERT), move thread count (NONE).\n2025-01-31 11:06:28,754 INFO  [com.aim.SolverResource] (pool-20-thread-1) Found best solution for job 53d7ba83-4677-4e0c-9e31-3eb5f5d15263\n2025-01-31 11:06:28,755 INFO  [com.aim.SolverResource] (pool-20-thread-1) Best solution: com.aimandaniel.LecturerCourseBalancing@36282a99\n2025-01-31 11:06:28,755 INFO  [com.aim.SolverResource] (pool-20-thread-1) Score: 0hard/-7.07107soft\n2025-01-31 11:06:28,756 INFO  [com.aim.SolverResource] (pool-20-thread-1) Courses:\n2025-01-31 11:06:28,756 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=1, name=Ahmad], course=Course [id=1, name=Fizik 1, duration=70]]\n2025-01-31 11:06:28,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=2, name=Faizal], course=Course [id=2, name=Chem 1, duration=60]]\n2025-01-31 11:06:28,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=2, name=Faizal], course=Course [id=3, name=Math 1, duration=60]]\n2025-01-31 11:06:28,757 INFO  [com.aim.SolverResource] (pool-20-thread-1) LecturerCourseAssignment [lecturer=Lecturer [id=1, name=Ahmad], course=Course [id=4, name=Programming 1, duration=60]]",
    "public static int solve(int[] a) {\n        if (a.length < 2) return 0; // Nothing to do\n        if (a[a.length - 2] % 3 != 0 && a[a.length - 1] % 3 != 0) return -1; // No solution\n        int nonMultiplesOf3 = 0;\n        int result = 0;\n        for (var value : a) {\n            if (value % 3 != 0) {\n                nonMultiplesOf3++;\n                result = Math.max(result, nonMultiplesOf3);\n            } else {\n                nonMultiplesOf3 = 0;\n            }\n        }\n        return result;\n    }",
    "record SomeRequest(\n            @NotEmpty(message = \"Please enter the title\")\n            String title,\n            @ConditionalNotEmpty(property = \"validate.isEmpty\") // in properties it will be validate.isEmpty=true\n            String string) {\n    }",
    "import jakarta.validation.Constraint;\nimport jakarta.validation.Payload;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@Constraint(validatedBy = ConditionalNotEmptyStringValidator.class)\n@Target({ElementType.FIELD})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface ConditionalNotEmpty {\n    String property();\n    \n    String message() default \"Field is invalid\";\n\n    Class<?>[] groups() default {};\n\n    Class<? extends Payload>[] payload() default {};\n}",
    "import jakarta.validation.ConstraintValidator;\nimport jakarta.validation.ConstraintValidatorContext;\nimport org.springframework.core.env.Environment;\n\npublic class ConditionalNotEmptyStringValidator implements ConstraintValidator<ConditionalNotEmpty, String> {\n\n    private final Environment environment; // autowire to get property value\n\n    private String propertyKey;\n\n\n    public ConditionalNotEmptyStringValidator(Environment environment) {\n        this.environment = environment;\n    }\n\n    @Override\n    public void initialize(ConditionalNotEmpty constraintAnnotation) {\n        this.propertyKey = constraintAnnotation.property();\n    }\n\n    @Override\n    public boolean isValid(String value, ConstraintValidatorContext context) {\n        boolean isValidationEnabled = Boolean.parseBoolean(environment.getProperty(this.propertyKey, \"false\")); // find validate.isEmpty value in properties, if not found - false\n\n        if (isValidationEnabled) {\n            return value != null && !value.isEmpty();\n        } else {\n            return true;\n        }\n    }\n}",
    "<plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <annotationProcessorPaths>\n                        <path>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                        </path>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>",
    "record SomeRequest(\n\n            @NotEmpty(message = \"Please enter the title\")\n            String title,\n\n            @NotNull\n            @NotEmpty\n            @Valid\n            List<@NotNull @Valid Foo> foos // here @NotNull added\n\n    ) {\n}",
    "@GetMapping(\"/createNewSession\")\n    public String createNewSession(HttpServletRequest request) {\n        var currentSession = request.getSession(false);\n\n        String currentSessionId;\n        if (currentSession != null) {\n            currentSessionId = currentSession.getId();\n            currentSession.invalidate();\n        } else {\n            currentSessionId = \"none\";\n        }\n\n        // create new session\n        var newSession = request.getSession(true);\n\n        return \"Old session-ID: \" + currentSessionId + \", new session-ID: \" + newSession.getId();\n    }",
    "Old session-ID: 840E96334EF4D11C5D9385E5E99A6BDC, new session-ID: 7AF16EF4DF9107C7D068833EEA8D7F69",
    "command: --port 27018",
    "name: mongodb\nservices:\n  mongodb:\n    image: mongo:8.0.3    \n    command: --port 27018\n    ports:\n      - \"27018:27018\"\n    environment:\n      - MONGO_INITDB_ROOT_USERNAME=admin\n      - MONGO_INITDB_ROOT_PASSWORD=secret",
    "Collection<Parts> parts = request.getParts();",
    "List<Part> partsList = request.getParts().stream.toList();",
    "String metadata = new BufferedReader(new InputStreamReader(partsList.get(1)\n                      .getInputStream()\n                      .lines()\n                      .collect(Collectors.joining(\"\\n\"));",
    "public class EksPrivateClusterStack extends Stack {\n\n  public EksPrivateClusterStack(final Construct scope, final String id) {\n    this(scope, id, null);\n  }\n\n  public EksPrivateClusterStack(final Construct scope, final String id, final StackProps props) {\n    super(scope, id, props);\n\n    Cluster cluster = createEksCluster();\n  }\n\n  private Cluster createEksCluster() {\n    return Cluster.Builder.create(this, \"mycluster\")\n             .kubectlLayer(new KubectlLayer(this.scope, \"kubectlLayer\"))\n             .version(KubernetesVersion.V1_29)\n             .build();\n  }\n\n}",
    "configurations {\n    testImplementation {\n        exclude group: 'ch.qos.logback'\n    }\n}",
    "configurations {\n    testImplementation {\n        exclude group: 'org.slf4j', module: 'slf4j-nop'\n    }\n}",
    "import re\n\nurl = \"https://example.com/profile/12345\"\nmatch = re.search(r'profile/(\\d+)', url)\nif match:\n    user_id = match.group(1)\n    print(user_id)",
    "if (jwtUtil.validateToken(jwt, userDetails.getUsername())) { // Pass username UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken( userDetails, null, userDetails.getAuthorities() ); SecurityContextHolder.getContext().setAuthentication(authToken); // This ensures Spring Security recognizes the user. }",
    "$ python3\nPython 3.12.3 (main, Jan 17 2025, 18:03:48) [GCC 13.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import hashlib\n>>> print (hashlib.sha256('blahblah'.encode(\"utf-8\")).digest().hex())\n40b1bbb5445fc021a312315379f4633284851e14d1db83fb0730f58872d6033b\n>>>",
    "import java.nio.charset.StandardCharsets;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.HexFormat;\n\npublic class Main {\n    public static void main(String[] args) throws NoSuchAlgorithmException {\n        MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n        System.out.println(HexFormat.of().formatHex(digest.digest(\"blahblah\".getBytes(StandardCharsets.UTF_8))));\n    }\n}\n40b1bbb5445fc021a312315379f4633284851e14d1db83fb0730f58872d6033b",
    "String text = input.replace ( \" \" , \"T\" ) ;\nLocalDateTime ldt = LocalDateTime.parse ( text ) ;",
    "OffsetDateTime now = OffsetDateTime.now( ZoneOffset.UTC ) ;\nmyPreparedStatement.setObject ( \u2026 , now ) ;\n\u2026\nOffsetDateTime odt = myResultSet.getObject ( \u2026 , OffsetDateTime.class ) ;",
    "Date data = df.parse(tempoInizio);\nLocalDateTime ldt = data.toInstant()\n                        .atZone(ZoneId.systemDefault())\n                        .toLocalDateTime();",
    "private static final DateTimeFormatter DTF = DateTimeFormatter.ofPattern(\n                                                 \"uuuu-MM-dd HH:mm:ss.SSSSSS\",\n                                                 Locale.ENGLISH\n                                             );",
    "LocalDateTime ldt = LocalDateTime.parse(tempoInizio, DTF);",
    "\"java.configuration.runtimes\": [\n  {\n    \"name\": \"JavaSE-1.8\",\n    \"path\": \"/path/to/jdk-8\",\n  },\n  {\n    \"name\": \"JavaSE-11\",\n    \"path\": \"/path/to/jdk-11\",\n  },\n  {\n    \"name\": \"JavaSE-17\",\n    \"path\": \"/path/to/jdk-17\",\n    \"default\": true\n  },\n]",
    "package org.mabb.fontverter.cff;\n\nimport com.tugalsan.api.unsafe.client.TGS_UnSafe;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\nimport org.apache.fontbox.cff.CFFCIDFont;\nimport org.apache.fontbox.cff.CFFFont;\nimport org.apache.fontbox.cff.CFFType1Font;\nimport org.apache.fontbox.cff.CIDKeyedType2CharString;\nimport org.apache.fontbox.cff.Type2CharString;\nimport org.apache.fontbox.cff.Type2CharStringParser;\nimport org.apache.fontbox.type1.Type1CharStringReader;\n\npublic class CffFontPatchUtils {\n\n    public static record Result(Type2CharString charStr, List<Object> type2Sequence) {\n\n        public static Result of(Type2CharString charStr, List<Object> type2Sequence) {\n            return new Result(charStr, type2Sequence);\n        }\n    }\n\n    public static Result getType2CharString(CFFFont font, int cidOrGid) {\n        if (font instanceof CFFType1Font _font) {\n            return CFFType1Font_getType2CharString(_font, cidOrGid);\n        }\n        if (font instanceof CFFCIDFont _font) {\n            return CFFCIDFont_getType2CharString(_font, cidOrGid);\n        }\n        return null;\n    }\n\n    private static Result CFFType1Font_getType2CharString(CFFType1Font font, int gid) {\n        String name = \"GID+\" + gid; // for debugging only\n        return CFFType1Font_getType2CharString(font, gid, name);\n    }\n\n    // Returns the Type 2 charstring for the given GID, with name for debugging\n    private static Result CFFType1Font_getType2CharString(CFFType1Font font, int gid, String name) {\n        return TGS_UnSafe.call(() -> {\n            var field_charStringCache = font.getClass().getDeclaredField(\"charStringCache\");\n            field_charStringCache.setAccessible(true);\n            var charStringCache = (Map<Integer, Type2CharString>) field_charStringCache.get(\"charStringCache\");\n\n            var type2 = charStringCache.get(gid);\n            List<Object> type2seq = null;\n            if (type2 == null) {\n\n                var field_charStrings = font.getClass().getDeclaredField(\"charStrings\");\n                field_charStrings.setAccessible(true);\n                var charStrings = (byte[][]) field_charStrings.get(\"charStrings\");\n\n                byte[] bytes = null;\n                if (gid < charStrings.length) {\n                    bytes = charStrings[gid];\n                }\n                if (bytes == null) {\n                    bytes = charStrings[0]; // .notdef\n                }\n\n                var method_getParser = font.getClass().getDeclaredMethod(\"getParser\");\n                method_getParser.setAccessible(true);\n                var parser = (Type2CharStringParser) method_getParser.invoke(font);\n\n                var field_globalSubrIndex = font.getClass().getDeclaredField(\"globalSubrIndex\");\n                field_globalSubrIndex.setAccessible(true);\n                var globalSubrIndex = (byte[][]) field_globalSubrIndex.get(\"globalSubrIndex\");\n\n                var method_getLocalSubrIndex = font.getClass().getDeclaredMethod(\"getLocalSubrIndex\");\n                method_getLocalSubrIndex.setAccessible(true);\n                var getLocalSubrIndex = (byte[][]) method_getLocalSubrIndex.invoke(font, gid);\n\n                type2seq = parser.parse(bytes, globalSubrIndex, getLocalSubrIndex, name);\n\n                var field_reader = font.getClass().getDeclaredField(\"reader\");\n                field_reader.setAccessible(true);\n                var reader = (Type1CharStringReader) field_reader.get(\"reader\");\n\n                var method_getDefaultWidthX = font.getClass().getDeclaredMethod(\"getDefaultWidthX\");\n                method_getDefaultWidthX.setAccessible(true);\n                var getDefaultWidthX = (Integer) method_getDefaultWidthX.invoke(font, gid);\n\n                var method_getNominalWidthX = font.getClass().getDeclaredMethod(\"getNominalWidthX\");\n                method_getNominalWidthX.setAccessible(true);\n                var getNominalWidthX = (Integer) method_getNominalWidthX.invoke(font, gid);\n\n                type2 = new Type2CharString(reader, font.getName(), name, gid, type2seq, getDefaultWidthX, getNominalWidthX);\n                charStringCache.put(gid, type2);\n            }\n            return Result.of(type2, type2seq);\n        });\n    }\n\n    private static Result CFFCIDFont_getType2CharString(CFFCIDFont font, int cid) {\n        return TGS_UnSafe.call(() -> {\n            var field_charStringCache = font.getClass().getDeclaredField(\"charStringCache\");\n            field_charStringCache.setAccessible(true);\n            var charStringCache = (Map<Integer, CIDKeyedType2CharString>) field_charStringCache.get(\"charStringCache\");\n\n            var type2 = charStringCache.get(cid);\n            List<Object> type2seq = null;\n            if (type2 == null) {\n                var gid = font.getCharset().getGIDForCID(cid);\n\n                var field_charStrings = font.getClass().getDeclaredField(\"charStrings\");\n                field_charStrings.setAccessible(true);\n                var charStrings = (byte[][]) field_charStrings.get(\"charStrings\");\n\n                byte[] bytes = null;\n                if (gid < charStrings.length) {\n                    bytes = charStrings[gid];\n                }\n                if (bytes == null) {\n                    bytes = charStrings[0]; // .notdef\n                }\n\n                var method_getParser = font.getClass().getDeclaredMethod(\"getParser\");\n                method_getParser.setAccessible(true);\n                var parser = (Type2CharStringParser) method_getParser.invoke(font);\n\n                var field_globalSubrIndex = font.getClass().getDeclaredField(\"globalSubrIndex\");\n                field_globalSubrIndex.setAccessible(true);\n                var globalSubrIndex = (byte[][]) field_globalSubrIndex.get(\"globalSubrIndex\");\n\n                var method_getLocalSubrIndex = font.getClass().getDeclaredMethod(\"getLocalSubrIndex\");\n                method_getLocalSubrIndex.setAccessible(true);\n                var getLocalSubrIndex = (byte[][]) method_getLocalSubrIndex.invoke(font, gid);\n\n                type2seq = parser.parse(bytes, globalSubrIndex, getLocalSubrIndex, String.format(Locale.US, \"%04x\", cid));\n\n                var field_reader = font.getClass().getDeclaredField(\"reader\");\n                field_reader.setAccessible(true);\n                var reader = (Type1CharStringReader) field_reader.get(\"reader\");\n\n                var method_getDefaultWidthX = font.getClass().getDeclaredMethod(\"getDefaultWidthX\");\n                method_getDefaultWidthX.setAccessible(true);\n                var getDefaultWidthX = (Integer) method_getDefaultWidthX.invoke(font, gid);\n\n                var method_getNominalWidthX = font.getClass().getDeclaredMethod(\"getNominalWidthX\");\n                method_getNominalWidthX.setAccessible(true);\n                var getNominalWidthX = (Integer) method_getNominalWidthX.invoke(font, gid);\n\n                type2 = new CIDKeyedType2CharString(reader, font.getName(), cid, gid, type2seq, getDefaultWidthX, getNominalWidthX);\n                charStringCache.put(cid, type2);\n            }\n            return Result.of(type2, type2seq);\n        });\n    }\n}",
    "public List<CffGlyph> getGlyphs() throws IOException {\n        List<CffGlyph> glyphs = new ArrayList<CffGlyph>();\n        for (GlyphMapReader.GlyphMapping mapOn : getGlyphMaps()) {\n            CffGlyph glyph = createGlyph();\n//            Type2CharString charStr = font.getType2CharString(mapOn.glyphId);\n            var result = CffFontPatchUtils.getType2CharString(font, mapOn.glyphId);\n//            glyph.readType2Sequence(charStr.getType2Sequence());\n            glyph.readType2Sequence(result.type2Sequence());\n            glyph.map = mapOn;\n//            glyph.charStr = charStr;\n            glyph.charStr = result.charStr();\n            glyphs.add(glyph);\n        }\n        return glyphs;\n    }",
    "@ExtendWith(MockitoExtension.class)\nclass FlexibleServiceTest {\n  @InjectMocks\n  FlexibleService target;\n\n  @Test\n  void shouldHandleItWhenUnreliableServiceIsNotAvailable() {\n    // Since there's no mock for unreliableService, it's implicitly null\n    target.doSomething();\n\n    // expect handling to be made\n  }\n}",
    "@ExtendWith(MockitoExtension.class)\npublic class FlexibleServiceTest {\n\n    @InjectMocks\n    FlexibleService target;\n\n    // don't have Mockito create an UnreliableService Mock instance\n\n    @Test\n    void shouldHandleItWhenUnreliableServiceIsNotAvailable() {\n        target.doSomething();\n\n        // expect handling to be made\n    }\n}",
    "public class FlexibleServiceTest {\n\n    @Test\n    void shouldHandleItWhenUnreliableServiceIsNotAvailable() {\n        final FlexibleService target = new FlexibleService();\n        target.doSomething();\n\n        // expect handling to be made\n    }\n}",
    "GetObjectRequest getObjectRequestgetObjectRequest =\n          GetObjectRequest.builder()\n                          .bucket(bucketName)\n                          .key(keyName)\n                  .responseContentType(contentType)\n                  .responseContentDisposition(contentDisposition)\n                          .build();\n        \n           \n\n     // Create a GetObjectPresignRequest to specify the signature duration\n    GetObjectPresignRequest getObjectPresignRequest =\n        GetObjectPresignRequest.builder()\n                             .signatureDuration(Duration.ofMillis(expirationMs))\n                             .getObjectRequest(getObjectRequest)\n                             .build();",
    "@Retention(RetentionPolicy.RUNTIME)",
    "@Component\nclass CacheableReportHttpInterface {\n\n    private final ReportHttpInterface reportHttpInterface;\n\n    CacheableReportHttpInterface(ReportHttpInterface reportHttpInterface) {\n        this.reportHttpInterface = reportHttpInterface;\n    }\n\n    @Cacheable(\"report\")\n    public String getReport(String name) {\n        return reportHttpInterface.getReport(name);\n    }\n}",
    "@Bean\npublic Job bankJob(FlatFileItemReader<BankTransaction> flatFileItemReader) { // Inject here\n        TaskletStep step1 = new StepBuilder(\"step-load-data\", jobRepository)\n                .<BankTransaction, BankTransaction>chunk(100, platformTransactionManager)\n                .reader(flatFileItemReader)\n                .processor(bankTransactionItemProcessor)\n                .writer(bankTransactionItemWriter)\n                .build();\n    \n        return new JobBuilder(\"ETL-job\", jobRepository)\n                .start(step1)\n                .build();\n    }",
    "@Autowired\n@Lazy\nprivate ItemReader<BankTransaction> flatFileItemReader;",
    "dragSource.setEffectAllowed(EffectAllowed.MOVE);",
    "retryFor = {LockAcquisitionException.class, SQLServerException.class},",
    "spring.data.mongodb.uri=mongodb://<user>:<password>@<host>:<port>/<db>?socketTimeoutMS=60000&connectTimeoutMS=30000&maxPoolSize=50",
    "if not os.path.exists(fifo_path):\n        os.mkfifo(fifo_path)",
    "python_process = multiprocessing.Process(\n        target=child_func,\n    )\n    python_process.start()\n    \n   \n    write_fd = open(fifo_path, \"w\")\n    write_fd.close()",
    "fifo = os.open(fifo_path, os.O_RDONLY)\n      fzf = subprocess.Popen(\n           [\n               \"fzf\",\n           ],\n           stdin=fifo,\n           text=True,\n       )",
    "def mergeFiles(folder):\n\nfolder = os.path.abspath(folder)   # make sure folder is absolute path\n\n# make a lists\nfileList1 = Path(folder).glob('*text1.pdf')\n\n\noutputName = ''\noutputFolderPath = folder + '\\\\somefolder'\np = Path(outputFolderPath)\nif not p.exists():\n        os.makedirs(outputFolderPath)\nn = 0\nfolderLenght = len(folder)+1\nfileNameArea = folderLenght+12\nprint(f'Adding files in {outputFolderPath}...')\n\n\nfor filename1 in fileList1:\n    n += 1\n    fileList2 = Path(folder).glob('*text2.pdf') #Move fileList2 inside first loop\n    # match test                   = SECOND LOOP\n    for filename2 in fileList2:\n        string1 = str(filename1)[folderLenght:fileNameArea].lower()\n        string2 = str(filename2)[folderLenght:fileNameArea].lower()\n\n        # Add choosen files in this folder to the PDF file by string.    \n        if string1 == string2:\n            outputName = 'D' + \\\n            str(filename1)[folderLenght + 4: folderLenght + 6].upper() + \\\n            '_' + str(filename1)[folderLenght + 9: folderLenght + 12] + \\\n            '_text3.pdf'\n\n            outputName = outputFolderPath + '\\\\' + outputName\n            file1Out = str(filename1)\n            file2Out = str(filename2)\n            pdfMerge([file1Out, file2Out], outputName)  #  function, works fine\n            \n            break\n        \n    print (f'{n}. {os.path.basename(outputName)}')\n\nprint('Done.')\n\nmergeFiles('X:\\\\MergeTest')",
    "[[ 0.06007468  0.56167836 -0.10374915]\n [-0.56167836  0.         -0.32523301]\n [-0.10374915  0.32523301  0.17917509]]",
    "def rotMat( a, theta ):        # rotation matrix for a rotation of angle theta about axis a\n    R = np.zeros( ( 3, 3 ) )\n    n = a / np.linalg.norm( a )\n    C = np.cos( theta )\n    S = np.sin( theta )\n\n    R[0,0] = C + n[0] * n[0] * ( 1.0 - C )\n    R[0,1] =     n[0] * n[1] * ( 1.0 - C ) - n[2] * S\n    R[0,2] =     n[0] * n[2] * ( 1.0 - C ) + n[1] * S\n    R[1,1] = C + n[1] * n[1] * ( 1.0 - C )\n    R[1,2] =     n[1] * n[2] * ( 1.0 - C ) - n[0] * S\n    R[1,0] =     n[1] * n[0] * ( 1.0 - C ) + n[2] * S\n    R[2,2] = C + n[2] * n[2] * ( 1.0 - C )\n    R[2,0] =     n[2] * n[0] * ( 1.0 - C ) - n[1] * S\n    R[2,1] =     n[2] * n[1] * ( 1.0 - C ) + n[0] * S\n\n    return R",
    "rotation_matrix = rotMat( rotation_axis, theta )",
    "CREATE TABLE employee_settlement ( employee_id int, amount int, created_at date);\n\n\ninsert into employee_settlement values(1,950,'2024-12-01');\ninsert into employee_settlement values(1,1000,'2025-01-01');\ninsert into employee_settlement values(1,1050,'2025-02-01');",
    "WITH balance_cte AS (\n    SELECT \n        employee_id,\n        created_at,\n        amount AS change,\n        SUM(amount) OVER (PARTITION BY employee_id ORDER BY created_at) AS final_balance\n    FROM employee_settlement\n    WHERE employee_id = 1 -- Replace with a specific employee_id\n)\nSELECT \n    employee_id,\n    COALESCE(LAG(final_balance) OVER (PARTITION BY employee_id ORDER BY created_at), 0) AS start_balance,\n    change,\n    final_balance\nFROM balance_cte\nORDER BY created_at;",
    "qIncSt[qIncSt.index.quarter == 1]",
    "qIncSt[qIncSt.index.astype(str).str.contains('Q1')]",
    "months = [\"2023-01\", \"2023-02\", \"2023-03\", \"2023-04\", \"2023-05\"]\nqIncSt = pd.DataFrame({\n    'fiscalDateEnding': pd.to_datetime(months),\n    'foobar': range(len(months))})\nqIncSt.index = pd.PeriodIndex(\n    qIncSt['fiscalDateEnding'],\n    freq='Q',\n    name='Quarter')",
    ">>> qIncSt\n        fiscalDateEnding  foobar\nQuarter                         \n2023Q1        2023-01-01       0\n2023Q1        2023-02-01       1\n2023Q1        2023-03-01       2\n2023Q2        2023-04-01       3\n2023Q2        2023-05-01       4\n\n>>> qIncSt[qIncSt.index.quarter == 1]\n        fiscalDateEnding  foobar\nQuarter                         \n2023Q1        2023-01-01       0\n2023Q1        2023-02-01       1\n2023Q1        2023-03-01       2\n\n>>> qIncSt[qIncSt.index.astype(str).str.contains('Q1')]\n        fiscalDateEnding  foobar\nQuarter                         \n2023Q1        2023-01-01       0\n2023Q1        2023-02-01       1\n2023Q1        2023-03-01       2",
    "import atexit\nimport functools\nimport multiprocessing as mp\nfrom multiprocessing.shared_memory import SharedMemory\nimport numpy as np\n\ndef init_child(name, shape, dtype):\n    global ARR\n    # initialise array from pre-existing shared memory buffer\n    mem = SharedMemory(name)\n    ARR = np.ndarray(shape, dtype=dtype, buffer=mem.buf)\n    # the following will also keep the SharedMemory object alive until the end \n    # of the child process\n    atexit.register(functools.partial(cleanup_child, mem))\n\ndef cleanup_child(mem: SharedMemory):\n    import os\n    print(f'child: cleaning up (PID: {os.getpid()})')\n    mem.close()  # let OS know this process is done with the memory\n    print(f'child: done in PID {os.getpid()}')\n\ndef job(arg: tuple[int, int]) -> np.float64:\n    \"\"\"set value in ARR, and return original value\"\"\"\n    i, value = arg\n    original = ARR[i]\n    ARR[i] = value\n    return original\n\ndef main():\n    # initialise shared buffer and numpy wrapper around it\n    shape = (10,)\n    dtype = np.float64\n    # NB: OS may decide to allocate more memory than you requested. This is\n    # usually because an OS only wants to care about allocating pages and not\n    # individual bytes \n    mem = SharedMemory(create=True, size=np.dtype(dtype).itemsize * np.prod(shape))\n    arr = np.ndarray(shape, dtype=dtype, buffer=mem.buf)\n\n    print('parent: starting multiprocessing pool')\n    ctx = mp.get_context('spawn')  # force spawn over fork (shows data is only shared \n                                   # via the SharedMemory object)\n    with ctx.Pool(initializer=init_child, initargs=(mem.name, shape, dtype)) as pool:\n        # set some data in the array\n        # I would usually do this before creating the pool, but this way will\n        # prove the child process can see changes to the data the parent makes\n        arr[:] = np.arange(10, dtype=dtype)\n        assert np.all(arr == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n        if False:\n            # or use a numpy Generator to fill an array in-place\n            np.random.default_rng().random(out=arr)\n            # ie. as no copy is required, it is more efficient than:\n            # arr[:] = np.random.random(shape)\n\n        # get initial value and set value to 10-index in the child process\n        result = pool.map(job, [(i, 10-i) for i in range(10)])\n\n        # ensure we wait for child processes to close and run their cleanup\n        pool.close()\n        pool.join()\n    print('parent: done with pool')\n\n    # assert that memory changes by the parent are visible in the child processes\n    assert np.all(result == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n    # assert that memory changes in child processes are visible in the parent\n    assert np.all(arr == [10, 9, 8, 7, 6, 5, 4, 3, 2, 1])\n\n    # Let OS know parent process is done with the shared memory and release it back to\n    # the OS\n    mem.close()\n    mem.unlink()\n\n    print('parent: finished')\n\nif __name__ == '__main__':\n    main()",
    "@rt.get(\"/files\")\ndef files_selected(my_files: list[pathlib.Path] = []):\n   print(\"\\n\".join(f.name for f in my_files))",
    "array - 120",
    "result <= 0",
    "consumer.commit(asynchronous=False)",
    "def d6():\n    return random.randint(1,6)",
    "from d6 import *\n\nprint (d6())\nprint (d6())",
    "import tkinter as tk\n\nroot = tk.Tk()\nroot.title(\"Event-Driven Messages in Frame\")\nroot.geometry(\"500x200\")\n\nframe2 = tk.Frame(root)\nframe = tk.Canvas(frame2)\n\n\nmessage_label = tk.Label(frame, text=\"\", bg=\"lightgray\", font=(\"Arial\", 16))\nmessage_label.pack(pady=20)\n\n\ndef on_mouse_motion(event):\n    if event.x > 200:\n        frame2.config(cursor=\"xterm\")\n        message_label.config(text=f\"XTERM: x:{event.x}, y:{event.y})\")\n    else:\n        frame2.config(cursor=\"crosshair\")\n        message_label.config(text=f\"CROSSHAIR: at x:({event.x}, y:{event.y})\")\n\nframe.bind(\"<Motion>\", on_mouse_motion)\n\nframe.pack(expand=True, fill=\"both\")\nframe2.pack(expand=True, fill=\"both\")\nroot.mainloop()",
    "from scipy import stats\n\ndef statistic(x):\n    params = stats.genpareto.fit(x, floc=0)\n    return params[0], params[2]\n\nres = stats.bootstrap((exceedences,), statistic)\nres.confidence_interval\n# ConfidenceInterval(low=array([0.37175838, 3.1441693 ]), high=array([0.89366334, 5.76439797]))",
    "import numpy as np\nfrom scipy import differentiate\n\ndef llf(p):  # vectorized log-likelihood function\n    shape, scale = (pi[..., np.newaxis] for pi in p)\n    return np.sum(dist.logpdf(exceedences, shape, 0, scale), axis=-1)\n\ndist = stats.genpareto\nparams = dist.fit(exceedences, floc=0)\np = np.asarray([params[0], params[2]])\n\n# The observed Fisher information matrix is the negative Hessian\n# of the LLF evaluated at the MLE parameters. \nres = differentiate.hessian(llf, p, initial_step=0.1)\nJ = -res.ddf\n# To get the standard error of each parameter, invert this matrix,\n# extract the diagonal elements, and take the square root.\ncov = np.linalg.inv(J)\nse = np.sqrt(np.diag(cov))\n# These can be used to estimate confidence intervals.\nalpha = 0.05\nz = stats.norm.isf(alpha/2)\np - z*se, p + z*se\n# (array([0.36907457, 3.22570315]), array([0.83608425, 5.44687804]))",
    "import numba as nb\n\n\n@nb.njit(fastmath=True)\ndef mult_matrix_coo(a, b, coo_row, coo_col, coo_data):\n    assert len(coo_row) == len(coo_col) == len(coo_data)\n    sum_ = 0\n    for i in range(len(coo_row)):\n        row = coo_row[i]\n        col = coo_col[i]\n        data = coo_data[i]\n        sum_ += a[row] * b[col] * data\n    return sum_\n\n\ndef func_nb(a: np.ndarray, b: np.ndarray, sparse_matrices: Tuple[csr_matrix]) -> np.ndarray:\n    \"\"\"\n    a and b are np.arrays of length N\n    sparse_matrices is precomputed tuple of coo_matrices\n    \"\"\"\n    return np.array([mult_matrix_coo(a, b, M.row, M.col, M.data) for M in sparse_matrices])\n\nsparse_matrices_coo = tuple(m.tocoo() for m in sparse_matrices)\nfunc_nb(u, u, sparse_matrices_coo)",
    ">>> %timeit func(u, u, sparse_matrices)\n12.7 ms \u00b1 108 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n>>> %timeit func_nb(u, u, sparse_matrices_coo)\n1.82 ms \u00b1 10.9 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1,000 loops each)",
    "M3U_TEMPLATE = jinja2.Template(\n    \"\"\"\n        {% for item in playlist %}\n            #EXTALB:{{ item.strAlbum }} ({{ item.release }})\n            #EXTART:{{ item.strAlbumArtists }}\n            #EXTINF:{{ item.iDuration }},{{ item.strArtists }} - {{ item.strTitle }}\n            {{ item.path }}\n        {% endfor %}\n    \"\"\"\n)\n\nprint(\n    textwrap.dedent(\n        M3U_TEMPLATE.render(\n            playlist=[\n                {\"strAlbum\": \"album\", \"release\": \"v1.0\", \"strAlbumArtists\": \"artist\", \"iDuration\": \"tooLong\", \"strArtists\": \"AnotherArtist\", \"strTitle\": \"title\", \"path\": \"path\"},\n                {\"strAlbum\": \"album1\", \"release\": \"v2.0\", \"strAlbumArtists\": \"artist1\", \"iDuration\": \"tooLong1\", \"strArtists\": \"AnotherArtist1\", \"strTitle\": \"title1\", \"path\": \"path1\"}\n            ]\n        )\n    )\n)",
    "M3U_TEMPLATE = jinja2.Template(\n    textwrap.dedent(\"\"\"\\\n        #EXTM3U\n        \n        {% for item in playlist -%}\n        #EXTALB:{{ item.strAlbum }} ({{ item.release }})\n        #EXTART:{{ item.strAlbumArtists }}\n        #EXTINF:{{ item.iDuration }},{{ item.strArtists }} - {{ item.strTitle }}\n        {{ item.path }}\n        {% endfor %}\n    \"\"\")\n)",
    "import multiprocessing\nimport numpy as np\nimport time\nimport copy\n\n\ndef bubble_sort(array):\n    n = len(array)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if array[j] > array[j + 1]:\n                array[j], array[j + 1] = array[j + 1], array[j]\n    return array\n\n\ndef merge_chunks(left, right):\n    merged = []\n    left_index = 0\n    right_index = 0\n\n    while left_index < len(left) and right_index < len(right):\n        if left[left_index] <= right[right_index]:\n            merged.append(left[left_index])\n            left_index += 1\n        else:\n            merged.append(right[right_index])\n            right_index += 1\n\n    merged.extend(left[left_index:])\n    merged.extend(right[right_index:])\n    return merged\n\n\ndef parallel_bubble_sort(array):\n    num_processes = multiprocessing.cpu_count()  # Use all available cores\n    chunk_size = (len(array) + num_processes - 1) // num_processes\n    pool = multiprocessing.Pool(processes=num_processes)\n    \n    chunks = []\n    start = 0\n    for i in range(num_processes):\n        end = min((i + 1) * chunk_size, len(array))\n        chunks.append(array[start:end])\n        start = end\n    \n    results = pool.map(bubble_sort, chunks)\n    \n    pool.close()\n    pool.join()\n    \n    # Merge the sorted chunks\n    while len(results) > 1:\n        new_results = []\n        for i in range(0, len(results), 2):\n            if i + 1 < len(results):\n                merged_chunk = merge_chunks(results[i], results[i+1])\n                new_results.append(merged_chunk)\n            else:\n                new_results.append(results[i])\n        results = new_results\n    \n    return results[0]\n\n\n\nif __name__ == \"__main__\":\n    array_size = 10000\n    array = np.random.randint(0, 1000, array_size).tolist()\n    array_copy = copy.deepcopy(array)\n    \n    start_time = time.perf_counter()\n    sorted_array = bubble_sort(array)\n    end_time = time.perf_counter()\n    print(\"Bubble sort without multiprocessing: \", end_time - start_time)\n    \n    start_time = time.perf_counter()\n    sorted_array = parallel_bubble_sort(array_copy)\n    end_time = time.perf_counter()\n    print(\"Bubble sort with multiprocessing: \", end_time - start_time)",
    "Bubble sort without multiprocessing:  17.12360268399061\nBubble sort with multiprocessing:  1.380762806002167",
    "from multiprocessing import Process\nimport time\nimport numpy as np\n\ndef bubble_sort(array: np.ndarray) -> None:\n    check = True\n    while check == True:\n        check = False\n        for i in range(len(array) - 1):\n            if array[i] > array[i + 1]:\n                check = True\n                temp = array[i]\n                array[i] = array[i + 1]\n                array[i + 1] = temp\n\nif __name__ == \"__main__\":\n    data = np.random.randint(0, 1_000, 10_000)\n\n    p = Process(target=bubble_sort, args=(data,))\n    start = time.time()\n    p.start()\n    p.join()\n    print(time.time() - start)\n\n    start = time.time()\n    bubble_sort(data)\n    print(time.time() - start)",
    "15.966789960861206\n15.38444972038269",
    "def abbrev_name (name):  \n    output = \"\"\n    arr = list(name.upper().split())\n    for i in arr:\n        output +=  i[0] + \".\"\n\n    output = output[0:-1]\n    print(output)\n  \nabbrev_name(\"albert einstein\")",
    "def abbrev_name(name):  \n    print(\".\".join(word[0] for word in name.upper().split()))\n  \nabbrev_name(\"albert einstein\")",
    "from selenium import webdriver\nimport pytest\n\n\n@pytest.fixture\ndef setup(request):\n    driver = webdriver.Chrome()\n    driver.get(\"https://dev-web-azamtv.videoready.tv\")\n    request.cls.driver = driver\n    yield driver\n    driver.quit()\n\n\n@pytest.mark.usefixtures(\"setup\")\nclass VerifyLoginTest:\n\n    def test_login(self):\n        self.driver",
    "====================== test session starts ================================\nplatform linux -- Python 3.13.2, pytest-8.3.4, pluggy-1.5.0\ncollected 0 items",
    "import unittest\n\nfrom selenium import webdriver\nimport pytest\n\n\n@pytest.fixture\ndef setup(request):\n    driver = webdriver.Chrome()\n    driver.get(\"https://dev-web-azamtv.videoready.tv\")\n    request.cls.driver = driver\n    yield driver\n    driver.quit()\n\n\n@pytest.mark.usefixtures(\"setup\")\nclass VerifyLoginTest(unittest.TestCase):\n\n    def test_login(self):\n        self.driver",
    "======================== test session starts =========================\nplatform linux -- Python 3.13.2, pytest-8.3.4, pluggy-1.5.0\ncollected 1 item                                                                                                                                   \n\ntest_driver.py .                                                                                                [100%]\n\n======================= 1 passed in 5.90s ============================",
    "from selenium import webdriver\nimport pytest\n\n\n@pytest.fixture\ndef driver(request):\n    driver = webdriver.Chrome()\n    driver.get(\"https://dev-web-azamtv.videoready.tv\")\n    yield driver\n    driver.quit()\n\n\n\ndef test_login(driver):\n    driver",
    "# models.py\nclass Profile(...):\n    memberid = models.CharField(\n            ...\n            default=create_new_ref_number # IMPORTANT: no parentheses i.e. no ()\n        )\n\n# function stays in the same file as the model\ndef create_new_ref_number(...):\n    ...",
    "print(f\"Is CUDA supported by this system? {torch.cuda.is_available()}\")\nprint(f\"CUDA version: {torch.version.cuda}\")\n\nif torch.cuda.is_available():\n    cuda_id = torch.cuda.current_device()\n    print(f\"ID of current CUDA device: {cuda_id}\")\n    print(f\"Name of current CUDA device: {torch.cuda.get_device_name(cuda_id)}\")\nelse:\n    print(\"CUDA is not available.\")```",
    "import random\n\nwhile True:\n    choice = input(\"Roll the dice? (y/n): \").lower()\n    if choice == 'n':\n        break\n    count = int(input(\"How many dice would you like to roll? \"))\n    dice = []\n    for i in range(count):\n        dice.append( random.randint(1,6) )\n    print(dice)",
    "import os\nlines = []\nlines.append(\"line 1\")\nlines.append(\"line 2\")\nlines.append(\"line 3\")\nwith open(\"filename\", \"w\") as textfile:\n    textfile.write(os.linesep.join(lines))",
    "from pathlib import Path\nfrom datetime import datetime\nfrom time import time\nimport os\n\n\nclass ReadMe:\n    def __init__(self, main_heading):\n        self.readme = []\n        self.h1(main_heading + \" - README\")\n        timestamp = datetime.fromtimestamp(time())\n        self.text(f\"first generated on {timestamp}\")\n\n    def __heading(self, level, heading_text):\n        self.text(\"#\" * level + \" \" + heading_text)\n\n    def h1(self, heading):\n        self.__heading(1, heading)\n\n    def h2(self, heading):\n        self.__heading(2, heading)\n\n    def h3(self, heading):\n        self.__heading(3, heading)\n\n    def text(self, line):\n        self.readme.append(line)\n        self.readme.append(\"\")  # add blank lines in markdown\n\n    def write(self, path):\n        readme_text = os.linesep.join(self.readme)\n        with open(Path(path) / \"README.md\", \"w\") as f:\n          f.write(readme_text)",
    "application_readme = ReadMe(f\"Job Application for Acme Corp\")\napplication_readme.text(\"interviewed by Jack\")\napplication_readme.h2(\"Feedback\")\napplication_readme.text(\"Jack liked my responses to SRE questions\")\napplication_readme.h2(\"Revision\")\napplication_readme.text(\"1. Kubernetes Daemonsets\")\napplication_readme.write('/home/kim/Documents/acme')",
    "# Job Application for Acme Corp - README\n\nfirst generated on 2024-08-27 12:47:40.250140\n\ninterviewed by Jack\n\n## Feedback\n\nJack liked my responses to SRE questions\n\n## Revision\n\n1. Kubernetes Daemonsets",
    "print(dfdt.subs({x1: xt, y1: yt}))",
    "using DataFrames, CSV\n\n# Used your sample data\ndf = DataFrame(CSV.File(\"data.tsv\"))\n\n# Filter the columns by country name\nfrance_cols = findall(x -> occursin(\"France\", x), names(df))\n\n# Subset the df\ndg = select(df, france_cols)\n\n# Optional : use \"sampleX\" as col names instead of the country name\nrename!(dg, collect(dg[1, :]))\ndg = dg[2:end, :]\n\ndisplay(dg)\nprintln(size(dg))",
    "def minus_plus( L, i = 0 ):\n    if i >= len( L ):\n        return True                    # Take your pick, depending on what you want to\n#       return len( L ) > 0            #    answer for an empty list\n    if len( L ) % 2 == 1:\n        return False\n    value = L[i]\n    if L.count( value ) != L.count( -value ):\n        return False\n    else:\n        return minus_plus( L, i + 1)\n\n\nsomeTests = [ [], [-5,-7,2,5,-2,7], [5,-5,3,5], [5,-5,5], [5,-5,-5,-5], [2, -2], [2,2] ]\nfor test in someTests: print( test, '--->', minus_plus( test ) )",
    "[] ---> True\n[-5, -7, 2, 5, -2, 7] ---> True\n[5, -5, 3, 5] ---> False\n[5, -5, 5] ---> False\n[5, -5, -5, -5] ---> False\n[2, -2] ---> True\n[2, 2] ---> False",
    "def minus_plus(lst):\n    return sorted(lst) == sorted(map(lambda x: -x, lst))",
    "def minus_plus(lst):\n    if len(lst)%2:\n        return False\n    if len(lst)==2:\n        return sum(lst)==0\n    return (\n            minus_plus(lst[1:-1]) and (lst[0] == -lst[-1])\n            if sorted(lst) == lst\n            else minus_plus(sorted(lst))\n        )",
    "print(minus_plus([-5, -7, 2, 5, -2, 7]))\n# True\n\nprint(minus_plus([5, -5, 3, 5]))\n# False\n\nprint(minus_plus([5, -5, 5]))\n# False",
    "for room in available_rooms:  \n    if room[\"username\"] in used_rooms:  \n        continue  \n  \n    if room[\"profile_type\"] != member.profile_type:  \n        continue  \n  \n    users.add(member.username)  \n    matched_items.append((member, room))  \n    used_rooms.add(room[\"username\"])  \n    break",
    "import itertools  \nimport operator  \n  \nit = itertools.groupby(members, key=operator.attrgetter('profile_type')) \nfor profile_type, [*members] in it:  \n    if len(rooms_by_type[profile_type]) >= len(members):  \n        print('There are enough rooms')  \n    else:  \n        print(\"There aren't enough rooms to assign to all users\")",
    "def match_maker(self, members, room_data: list):\n    import random\n    from collections import defaultdict, deque\n    from copy import deepcopy\n    from itertools import cycle\n\n    matched_items = []\n    room_data_copy = deepcopy(room_data)\n\n    rooms_by_type = defaultdict(deque)\n    for room in room_data_copy:\n        if len(room[\"body\"]) >= 5:\n            rooms_by_type[room[\"profile_type\"]].append(room)\n\n    members_by_type = defaultdict(list)\n    for member in members:\n        if not member.is_staff:\n            members_by_type[member.profile_type].append(member)\n\n\n    for room_type, available_rooms in rooms_by_type.items():\n        members_it = cycle(members_by_type[room_type])\n        while available_rooms:\n            available_room = available_rooms.popleft()\n            member = next(members_it)\n            matched_items.append((member, available_room))\n    random.shuffle(matched_items)\n    return matched_items",
    "CT_A = 1.0\nCT_B = 2.0\n# etc.",
    "import constants",
    "from constants import *",
    "CT = {\n  'A': 1.0,\n  'B': 2.0\n}",
    "class A:\n    class Constants:\n        CT_A = 1.0\n        CT_B = 2.0\n        \n    def __init__(self):\n        ...\n        \n    def method_class(self):\n        return self.Constants.CT_A * (self.Constants.CT_B + 10.0)",
    "A.Constants.CT_A",
    "class Weekday:\n    class Order:\n        MONDAY = 0\n        TUESDAY = 1\n        WEDNESDAY = 2\n        THURSDAY = 3\n        FRIDAY = 4\n        SATURDAY = 5\n        SUNDAY = 6\n\n    def order_from_name(self, name):\n        return getattr(self.Order, name.upper())",
    "Weekday.Order.MONDAY",
    "@nb.jit(nb.float64[:, :](nb.float64[:, ::1], nb.float64[:, ::1]), fastmath=True, nopython=True)\ndef fastDot(X, Y):\n    return np.dot(X, Y)",
    "X = np.ascontiguousarray(X).copy()\neigenVectors = np.ascontiguousarray(eigenVectors).copy()",
    "s = \"3425%4368\"\n\nx, y = s.split('%')\n\nprint(set(x) & set(y))",
    "{'4', '3'}",
    "from collections import Counter\n\ns = \"3425%4368\"\nx, y = s.split('%')\nxcount, ycount = Counter(x), Counter(y)\n\nprint((xcount & ycount).keys())",
    "1@%L1\n12%21\n12%2112%21",
    "import re\n\ns = \"3425%4368\"\nx, y = s.split('%')\nxsort, ysort = ''.join(sorted(x)), ''.join(sorted(y))\nmatches = re.findall(r'(\\d+).*(\\1)', xsort + ysort)\n\nprint(matches)",
    ">> re.findall(r'(\\d)(?=.*%.*\\1)', '3425%4368')\n['3', '4']",
    "@tree.command(\n    name=\"play\",\n    description=\"insert a youtube url for music\",\n    guild=discord.Object(id=806555220468432906)\n)\nasync def play_command(command: discord.Interaction) -> None:\n    source = discord.PCMVolumeTransformer(discord.FFmpegPCMAudio(\"Music.m4a\"))\n    voice_channel = command.user.voice.channel\n    voice_client = await voice_channel.connect()\n    voice_client.play(source)\n    await voice_client.disconnect()",
    "import pandas as pd\nfrom openpyxl import load_workbook\nfrom openpyxl.styles import PatternFill\n\ndata = {\n    \"ID\": [1, 2, 3, 4, 5],\n    \"Status\": [\"OK\", \"NO\", \"OK\", \"NO\", \"OK\"]\n}\n\ndf = pd.DataFrame(data)\n\nexcel_filename = \"status.xlsx\"\ndf.to_excel(excel_filename, index=False)\n\nwb = load_workbook(excel_filename)\nws = wb.active\n\n# Define fill colors\ngreen_fill = PatternFill(start_color=\"00FF00\", end_color=\"00FF00\", fill_type=\"solid\")  # Green for \"OK\"\nred_fill = PatternFill(start_color=\"FF0000\", end_color=\"FF0000\", fill_type=\"solid\")    # Red for \"NO\"\n\n# Apply color based on cell value in the \"Status\" column\nfor row in ws.iter_rows(min_row=2, max_row=ws.max_row, min_col=2, max_col=2):  \n    for cell in row:\n        if cell.value == \"OK\":\n            cell.fill = green_fill\n        elif cell.value == \"NO\":\n            cell.fill = red_fill\n\nwb.save(excel_filename)\n\nprint(\"Excel file created successfully!\")",
    "import pandas as pd\n\ndf = pd.DataFrame({\n    \"ID\": [1, 2, 3, 4, 5],\n    \"Status\": [\"OK\", \"NO\", \"OK\", \"NO\", \"OK\"]\n})\n\n\ndef highlight_ok(t):\n    text_is_OK = t == \"OK\"\n\n    return ['background-color: lightgreen' if v else 'background-color: red' for v in text_is_OK]\n\n# determining the name of the file\ncamp = 'A'\nfile_name = camp + '_Last_20' + '.xlsx'\n \n# saving the excel\ndf.style.apply(highlight_ok, subset=['Status']).to_excel(file_name, freeze_panes=(1, 0), index=False)\n\nprint('Tournament is written to Excel File successfully.')",
    "import pandas as pd\nfrom openpyxl.styles import PatternFill\n\ndf = pd.DataFrame({\n    \"ID\": [1, 2, 3, 4, 5],\n    \"Status\": [\"OK\", \"NO\", \"OK\", \"NO\", \"OK\"]\n})\n\ncamp = 'A'  # Dummy value for the file_name creation\nfile_name = camp + '_Last_20' + '.xlsx'\nexcel_sheet = 'Sheet1'\n\nwith pd.ExcelWriter(file_name, mode='w', engine=\"openpyxl\") as writer:\n    df.to_excel(writer, sheet_name=excel_sheet, index=False, freeze_panes=(1, 0))\n\n    ws = writer.sheets[excel_sheet]  # This is the Openpyxl worksheet\n\n    # Apply color based on cell value in the \"Status\" column\n    for row in ws.iter_rows(min_row=2, max_row=ws.max_row, min_col=2, max_col=2):\n        value = df[\"Status\"].iloc[row[0].row - 2]  # value is \"OK\" or \"NO\"\n        row[0].fill = PatternFill(\"solid\", start_color=(\"90EE90\" if value == \"OK\" else 'FF0000'))\n\n\nprint('Tournament is written to Excel File successfully.')",
    "# Use Conditional formatting\n# Import CellIsRule --> from openpyxl.formatting.rule import CellIsRule\n\n# Conditional Format range\ncf_range = 'B2:B6'\n# Define fill colors\ngreen_fill = PatternFill(start_color=\"90EE90\", end_color=\"90EE90\", fill_type=\"solid\")  # Green for \"OK\"\nred_fill = PatternFill(start_color=\"FF0000\", end_color=\"FF0000\", fill_type=\"solid\")    # Red for \"NO\"\n\nws.conditional_formatting.add(cf_range, CellIsRule(operator='equal', formula=['\"OK\"'], fill=green_fill))\nws.conditional_formatting.add(cf_range, CellIsRule(operator='equal', formula=['\"NO\"'], fill=red_fill))",
    "import re\n\npattern = r\"(?<!\\d)999(?!\\d)\"\nparsed = re._parser.parse(pattern)\n\nhas_positive_lookbehind = any(t[0] == re._parser.ASSERT and t[1][0] == -1 for t in parsed)\nhas_negative_lookbehind = any(t[0] == re._parser.ASSERT_NOT and t[1][0] == -1 for t in parsed)\nhas_positive_lookahead = any(t[0] == re._parser.ASSERT and t[1][0] == 1 for t in parsed)\nhas_negative_lookahead = any(t[0] == re._parser.ASSERT_NOT and t[1][0] == 1 for t in parsed)\n\nprint(\"Has positive lookbehind:\", has_positive_lookbehind)\nprint(\"Has negative lookbehind:\", has_negative_lookbehind)\nprint(\"Has negative lookahead:\", has_positive_lookahead)\nprint(\"Has negative lookahead:\", has_negative_lookahead)",
    "import sre_parse\n\nrx = r\"(?<!\\d)999(?!\\d)\"\nparsed = sre_parse.parse(rx)\n\nhas_positive_lookbehind = any(t[0] == sre_parse.ASSERT and t[1][0] == -1 for t in parsed)\nhas_negative_lookbehind = any(t[0] == sre_parse.ASSERT_NOT and t[1][0] == -1 for t in parsed)\nhas_positive_lookahead = any(t[0] == sre_parse.ASSERT and t[1][0] == 1 for t in parsed)\nhas_negative_lookahead = any(t[0] == sre_parse.ASSERT_NOT and t[1][0] == 1 for t in parsed)\n\nprint(\"Has positive lookbehind:\", has_positive_lookbehind)\nprint(\"Has negative lookbehind:\", has_negative_lookbehind)\nprint(\"Has positive lookahead:\", has_positive_lookahead)\nprint(\"Has negative lookahead:\", has_negative_lookahead)",
    "Has positive lookbehind: False\nHas negative lookbehind: True\nHas negative lookahead: False\nHas negative lookahead: True",
    "import re, io, contextlib\n\ndef has_lookarounds(pattern):\n    buffer = io.StringIO()\n    with contextlib.redirect_stdout(buffer):  # Redirect stdout\n        re.compile(pattern, re.DEBUG)\n    return any(n in ['ASSERT_NOT -1','ASSERT_NOT 1','ASSERT -1','ASSERT 1'] for n in buffer.getvalue().splitlines())\n\npattern = r\"(?<!\\d)(?<=[A-Z])welcome(?!\\S)(?=\\s)\"\nprint( has_lookarounds(pattern) )",
    "\\(\\?(?:=|!|<=|<!)",
    "(?<!\\\\)(?:\\\\\\\\)*(?:\\[[^\\]\\\\]*(?:\\\\[\\S\\s][^\\]\\\\]*)*\\]|(\\(\\?(?:=|!|<=|<!)))",
    "(?:\\\\\\\\)*\\\\[\\S\\s]|\\[[^\\]\\\\]*(?:\\\\[\\S\\s][^\\]\\\\]*)*\\]|(\\(\\?(?:=|!|<=|<!))",
    "(?: \\\\\\\\ )*                   # escapes\n  \\\\ [\\S\\s] \n| \n  \\[ [^\\]\\\\]*                   # class\n  (?: \\\\ [\\S\\s] [^\\]\\\\]* )*\n  \\] \n| \n  (                             # (1), assertion \\(\\?<?[!=]\n    \\( \\? \n    (?: = | ! | <= | <! ) \n  )",
    "from icu import RuleBasedCollator\n\nl=[\"a\",\"\u00e4\"]\nrbc = RuleBasedCollator('&[before 1]a < \u00e4')\nprint(sorted(l, key=rbc.getSortKey))",
    "if string_data.count(\"r\") >= 2",
    "string_data = input()\n\nprint(\"\\n\")\nif string_data.count(\"r\") >= 2:\n    print(string_data.replace(\"r\", \"(deleted)\", 2))\nelse:\n    print(\"No matches\")",
    "import re\n\nstring_data = input()\nif re.search(r'r.*r', string_data):\n    print(\"MATCH\")\nelse:\n    print(\"NO MATCH\")",
    "import subprocess\nprint(subprocess.run([\"whoami\"], capture_output=True, text=True).stdout)",
    "print(subprocess.run(\"whoami\", shell=True, capture_output=True, text=True).stdout)",
    "import getpass\nprint(getpass.getuser())",
    "import os\nprint(os.getlogin())",
    "import os\n\n\nprint(f\"something here {os.getlogin()} something here\")",
    "import time\nimport os\nfrom watchdog.observers import Observer\nfrom watchdog.events import FileSystemEventHandler\n\nclass StableFileHandler(FileSystemEventHandler):\n    def __init__(self, delay=2):\n        \"\"\"\n        :param delay: Time in seconds to wait for the file to stabilize (default: 2s)\n        \"\"\"\n        self.delay = delay\n\n    def on_created(self, event):\n        if not event.is_directory:  # Ignore folder creation\n            file_path = event.src_path\n            print(f\"New file detected: {file_path}. Waiting for completion...\")\n\n            while True:\n                try:\n                    initial_size = os.path.getsize(file_path)\n                    time.sleep(self.delay)\n                    final_size = os.path.getsize(file_path)\n\n                    if initial_size == final_size:  # File size stabilized\n                        print(f\"File fully written: {file_path}\")\n                        # add your processing part here \n\n                        break\n                except FileNotFoundError:\n                    # Handle cases where file might be removed before stabilization\n                    print(f\"File {file_path} was removed before completion.\")\n                    break\n\ndef monitor_directory(path_to_watch):\n    \"\"\"\n    Monitors the given directory for file creation events.\n    \"\"\"\n    event_handler = StableFileHandler()\n    observer = Observer()\n    observer.schedule(event_handler, path_to_watch, recursive=True)\n    observer.start()\n\n    try:\n        print(f\"Monitoring directory: {path_to_watch}\")\n        while True:\n            time.sleep(1)  # Keep script running\n    except KeyboardInterrupt:\n        observer.stop()\n        print(\"Stopping monitoring...\")\n    observer.join()\n\nif __name__ == \"__main__\":\n    directory_to_watch = \"./folder\"  # Change this to your target folder and ensure the folder exists\n    monitor_directory(directory_to_watch)",
    "from ctypes import *\nfrom ctypes.util import find_library\n\ngs = CDLL(find_library(\"gs\"))\nerror_names_ptr = cast(gs.gs_error_names, POINTER(c_char_p))\nerror_names = []\ni = 0\nwhile val := error_names_ptr[i]:\n    error_names.append(val)\n    i += 1\nprint(error_names)",
    "// Note C string constants have an additional nul added,\n// So this is double nul-terminated.\n__declspec(dllexport)\nconst char *data1 = \"abc\\0def\\0ghi\\0jkl\\0\";\n\n// Also true if the array is unsized, double-nul terminated.\n__declspec(dllexport)\nconst char data2[] = \"abc\\0def\\0ghi\\0jkl\\0\";",
    "import ctypes as ct\n\ndll = ct.CDLL('./test')\ndata1 = ct.POINTER(ct.c_char).in_dll(dll, 'data1')  # unknown length\ndata2 = (ct.c_char * 17).in_dll(dll, 'data2')  # if length known\ndata3 = ct.c_char.in_dll(dll, 'data2')  # unknown length\n\nprint(data1[:17])  # slice to view multiple bytes\nprint(data2.raw)   # Known length of 17\n\n# If you don't know the length of char*, convert the\n# pointer to a void pointer, the value of which is\n# a Python integer that is the pointer address.\np = ct.cast(data1, ct.c_void_p).value\nwhile s := ct.string_at(p):\n    print(s)\n    p += len(s) + 1\n\n# If you don't know the length of char[], take the\n# address of the array.\np = ct.addressof(data2)\nwhile s := ct.string_at(p):\n    print(s)\n    p += len(s) + 1",
    "b'abc\\x00def\\x00ghi\\x00jkl\\x00\\x00'\nb'abc\\x00def\\x00ghi\\x00jkl\\x00\\x00'\nb'abc'\nb'def'\nb'ghi'\nb'jkl'\nb'abc'\nb'def'\nb'ghi'\nb'jkl'",
    "x = \"int_32\\n' \"\nnew_x = x.strip(\"\\n' \")\nprint(new_x)",
    "import re\nx = \"int_32\\n' \"\nnew_x = re.split(\"\\n\", x)[0]\nprint(new_x)",
    "int_32",
    "import re\nsplit_list = re.split(\"\\n\", x)\nprint(split_list)",
    "['int_32', \"' \"]",
    "import re\nx = \"int_32\\n' \"\nx = re.findall(r\"(.*)\\n\", x)[0]\nprint(x)",
    "int_32",
    "import re\nx = \"int_32\\n' \"\npattern = r\"(.*?)\\n\"\nmatch_list = re.findall(pattern, x)\nx = match_list[0]\nprint(match_list) \nprint(x)",
    "['int_32']  \nint_32",
    "Traceback (most recent call last):\n  File \"/path/to/your/file.py\", line 17, in <module>\n    simple_plugin,\nTypeError: register() takes at least 11 arguments (10 given)",
    "register(\n    \"python-fu-simple-plugin\",\n    \"Simple Plugin Test\",\n    \"A simple test plugin\",\n    \"Your Name\",\n    \"Your Name\",\n    \"2024\",\n    \"<Image>/Filters/Simple Test\",  # Or any menu location\n    \"RGB*\",\n    [],  # <- your existing list of input values\n    [],  # <- your missing list of returned values \n    simple_plugin,\n)",
    "#!/usr/bin/env python\nfrom gimpfu import *\n\ndef simple_plugin(image, drawable):\n    gimp.message(\"Simple plugin, working on %s in %s\" % (drawable.name,image.name))\n\nregister(\n    \"simple-plugin\",            # \"python-fu\" added by default anyway...\n    \"Simple Plugin Test\",\n    \"A simple test plugin\",\n    \"Your Name\",\n    \"Your Name\",\n    \"2025\",\n    \"Simple Test\",      # Just the menu item\n    \"RGB*,GRAY*\",       # GRAY necessary if you want the plugin to also work on mask/Channels.\n    [\n        (PF_IMAGE,   'image',   'Input image',   None),   # Explicit input image (if necessary)\n        (PF_DRAWABLE,'drawable','Input drawable',None),   # Explicit input drawable (if necessary)\n    ],\n    [],\n    simple_plugin,\n    menu=\"<Image>/Filters\" # Menu location of menu item above\n)\n\nmain()",
    "Enter Number of Quadrans: 21432\nAureus:  13\nGold Quinarius:  0\nAntoninianus:  4\nDenarius:  1\nQuinarius:  1\nSestertius:  1\nDupondius:  1\nAs:  0\nSemis:  0\nQuadrans:  0",
    "accountBalance = int(input(\"Enter Number of Quadrans: \"))\n\n# Define each coin in terms of Quadrans (integer values)\naureus = 1600\ngold_quinarius = 800\nantoninianus = 128\ndenarius = 64\nquinarius = 32\nsestertius = 16\ndupondius = 8\nas_coin = 4\nsemis = 2\nquadrans_coin = 1\n\n# Calculate the number of each coin starting from the largest\naureus_p = accountBalance // aureus\naccountBalance %= aureus\n\ngold_quinarius_p = accountBalance // gold_quinarius\naccountBalance %= gold_quinarius\n\nantoninianus_p = accountBalance // antoninianus\naccountBalance %= antoninianus\n\ndenarius_p = accountBalance // denarius\naccountBalance %= denarius\n\nquinarius_p = accountBalance // quinarius\naccountBalance %= quinarius\n\nsestertius_p = accountBalance // sestertius\naccountBalance %= sestertius\n\ndupondius_p = accountBalance // dupondius\naccountBalance %= dupondius\n\nas_p = accountBalance // as_coin\naccountBalance %= as_coin\n\nsemis_p = accountBalance // semis\naccountBalance %= semis\n\nquadrans_p = accountBalance // quadrans_coin\n\n# Print the results\nprint(\"Aureus: \", aureus_p)\nprint(\"Gold Quinarius: \", gold_quinarius_p)\nprint(\"Antoninianus: \", antoninianus_p)\nprint(\"Denarius: \", denarius_p)\nprint(\"Quinarius: \", quinarius_p)\nprint(\"Sestertius: \", sestertius_p)\nprint(\"Dupondius: \", dupondius_p)\nprint(\"As: \", as_p)\nprint(\"Semis: \", semis_p)\nprint(\"Quadrans: \", quadrans_p)",
    "import math\n\nAs = 4\nSemis = 0.5 * As\nQuadrans = 0.5 * Semis\nDupondius = 2 * As\nSestertius = 2 * Dupondius\nQuinarius = 2 * Sestertius\nDenarius = 2 * Quinarius\nAntoninianus = 2 * Denarius\nGoldQuinarius = 25 * Quinarius\nAureus = 25 * Denarius\n\naccountBalance = int(input( \"Enter Number of Quadrans: \" ))\nAureusP = math.floor(accountBalance / Aureus)\naccountBalance %= Aureus\nGoldQuinariusP = math.floor(accountBalance / GoldQuinarius)\naccountBalance %= GoldQuinarius\nAntoninianusP = math.floor(accountBalance / Antoninianus)\naccountBalance %= Antoninianus\nDenariusP = math.floor(accountBalance / Denarius)\naccountBalance %= Denarius\nQuinariusP = math.floor(accountBalance / Quinarius)\naccountBalance %= Quinarius\nSestertiusP = math.floor(accountBalance / Sestertius)\naccountBalance %= Sestertius\nDupondiusP = math.floor(accountBalance / Dupondius)\naccountBalance %= Dupondius\nAsP = math.floor(accountBalance / As)\naccountBalance %= As\nSemisP = math.floor(accountBalance / Semis)\naccountBalance %= Semis\nQuadransP = math.floor(accountBalance / Quadrans)\n\n\nprint(\"Aureus: \",AureusP)\nprint(\"Gold Quinarius: \", GoldQuinariusP)\nprint(\"Antoninianus: \", AntoninianusP)\nprint(\"Denarius: \", DenariusP)\nprint(\"Quinarius: \", QuinariusP)\nprint(\"Sestertius: \", SestertiusP)\nprint(\"Dupondius: \", DupondiusP)\nprint(\"As: \", AsP)\nprint(\"Semis: \", SemisP)\nprint(\"Quadrans: \", QuadransP)",
    "# Find the element **again** after login\nelement2 = driver.find_element(By.LINK_TEXT, 'About')\n\n# Perform ActionChains\nActionChains(driver) \\\n    .key_down(Keys.CONTROL) \\\n    .click(element2) \\\n    .key_up(Keys.CONTROL) \\\n    .perform()",
    "from selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nelement2 = WebDriverWait(driver, 10).until(\n    EC.presence_of_element_located((By.LINK_TEXT, \"About\"))\n)",
    "class CommonHeaders(BaseModel):\n    simpleheader: str\n    a_kebab_header: str | None = Field(\n        default=None,\n        title=\"a-kebab-header\",\n        serialization_alias=\"a-kebab-header\",\n        description=\"This is a header that should be specified as `a-kebab-header`\",\n    )",
    "from typing import Annotated\nfrom fastapi import Depends, FastAPI, Header\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\nclass CommonHeaders(BaseModel):\n    simpleheader: str\n    a_kebab_header: str | None\n\ndef get_common_headers(\n    simpleheader: Annotated[str, Header()],\n    a_kebab_header: str | None = Header(\n        default=None,\n        title=\"a-kebab-header\",\n        alias=\"a-kebab-header\",\n        description=\"This is a header that should be specified as `a-kebab-header`\",\n    ),\n):\n    return CommonHeaders(simpleheader=simpleheader, a_kebab_header=a_kebab_header)\n\n\n@app.get(\"/\")\ndef root_endpoint(\n    headers: Annotated[CommonHeaders, Depends(get_common_headers)],\n):\n    result = {\"headers received\": headers}\n    return result\n\n\n@app.get(\"/another\")\ndef another_endpoint(\n    headers: Annotated[CommonHeaders, Depends(get_common_headers)],\n):\n    result = {\"headers received\": headers}\n    return result",
    "with open(Filename, \"r\", encoding=\"utf-8\") as edifact_file:\n    edifact_string = edifact_file.read()\n\nencoded_edifact_string = edifact_string.encode('latin_1', 'ignore')\nif encoded_edifact_string.decode('latin_1', 'ignore') == edifact_string:\n    print('Is latin_1')\n    print(edifact_string)\n    print(encoded_edifact_string.decode('latin_1', 'ignore'))\nelse:\n    print('Is no latin_1')\n    print(edifact_string)\n    print(encoded_edifact_string.decode('latin_1', 'ignore'))",
    "def find():\n    with open(\"dataset.txt\") as datahandle:\n        count = 0\n        for countingdata in datahandle:\n            countingdata = countingdata.rstrip() # Copied from OP, but not really needed.\n            count = count + 1\n    return count",
    "os.environ[\"HIP_VISIBLE_DEVICES\"]=\"0\"",
    "async def make_request(url, session, get_html=False):     # get_html = False means we want response, True means we want html\n    async with session.get(url) as response:\n        if response.ok:\n            if get_html:\n                return await response.text()    # Return html\n            return response                     # Return response object\n        else:\n            print(f'{url} returned: {response.status}')\n\n\nasync def get_image_page(queue, session):\n    url = \"https://c.xkcd.com/random/comic/\"\n    response = await make_request(url, session)\n    await queue.put(str(response.url))\n\ndef parse_link(html):\n    soup = BeautifulSoup(html, 'lxml')\n    u = soup.select_one('div#comic>img').get('src')\n    image_url = f'https:{u}'\n    return image_url\n\n\nasync def get_image_url(pages_queue, image_urls_queue, session):\n    while True:\n        url = await pages_queue.get()\n        html = await make_request(url, session, True)     # Get html isntead of response object\n\n        loop = asyncio.get_running_loop()\n        with ProcessPoolExecutor() as pool:\n            image_url = await loop.run_in_executor(\n                pool, parse_link, html\n            )\n\n        await image_urls_queue.put(image_url)\n\n        pages_queue.task_done()",
    "import asyncio\nfrom concurrent.futures import ProcessPoolExecutor\n\nfrom bs4 import BeautifulSoup\nimport aiohttp\n\nasync def get_page_text(url, session):\n    async with session.get(url) as response:\n        if response.ok:\n            return await response.text()\n        else:\n            print(f'{url} returned: {response.status}')\n    # There is an implcit return None here:\n    #return None\n\n# Rename queue to pages_queue so we know which queue this is:\nasync def get_image_page(pages_queue, session):\n    # We have simplified the code so in this implementation\n    # the session argument is not used.\n    url = \"https://c.xkcd.com/random/comic/\"\n    await pages_queue.put(url)\n\ndef parse_link(html):\n    soup = BeautifulSoup(html, 'lxml')\n    img = soup.select_one('div#comic>img')\n    return f\"https:{img.get('src')}\" if img else None\n\nasync def get_image_url(pages_queue, image_urls_queue, session, pool):\n    while True:\n        url = await pages_queue.get()\n        html = await get_page_text(url, session)\n        # get_page_text can return None, so test for it:\n        if html:\n            loop = asyncio.get_running_loop()\n            image_url = await loop.run_in_executor(\n                pool, parse_link, html\n            )\n            await image_urls_queue.put(image_url)\n\n        pages_queue.task_done()\n\nasync def main():\n    async with aiohttp.ClientSession() as session:\n        # Create the pool only once and pass it as an argument\n        with ProcessPoolExecutor() as pool:\n\n            pages_queue = asyncio.Queue()\n            image_urls_queue = asyncio.Queue()\n\n            # Use a list comprehension:\n            page_getters = [\n                asyncio.create_task(\n                    get_image_page(pages_queue, session)\n                )\n                for _ in range(4)\n            ]\n\n            # Use a list comprehension (and a slightly renamed variable):\n            url_getters = [\n                asyncio.create_task(\n                    get_image_url(pages_queue, image_urls_queue, session, pool)\n                )\n                for _ in range(4)\n            ]\n\n            # Wait for all URLs to placed in the pages queue:\n            await asyncio.gather(*page_getters)\n\n            # Now we can be sure that when we join the queue, all pages have\n            # been retrieved:\n            await pages_queue.join()\n\n            # No reason to cancel these tasks, which have completed:\n            \"\"\"\n            for task in url_getters:\n                task.cancel()\n            \"\"\"\n\n            # Retrive all entries:\n            try:\n                while True:\n                    item = image_urls_queue.get_nowait()\n                    print(item)\n            except asyncio.QueueEmpty:\n                pass\n\nif __name__ == '__main__':\n    asyncio.run(main())",
    "https://imgs.xkcd.com/comics/familiar.jpg\nhttps://imgs.xkcd.com/comics/prometheus.png\nhttps://imgs.xkcd.com/comics/vaccine_research.png\nhttps://imgs.xkcd.com/comics/evidence_of_alien_life.png",
    "import src.get_foos\n\n@patch(src.get_store.Client1)\ndef test_get_store(self,mock_client)\n   mock_client.get_foo.return_value = 'myfoo'\n   result = src.get_foos.get_foo()\n   assert result === 'myfoo'",
    "cities = [[\"Miami\", \"Atlanta\", \"Dallas\", \"Los Angeles\"], [\"New York\", \"Chicago\", \"Portland\", \"Sacramento\"]]\n\ndef printList(nightwatch):\n    for r in nightwatch:  \n        for c in r:\n            print(c, end=' ')  \n\ndef flipOrder(listy):\n    listy = [x[::-1] for x in listy[::-1]]\n    printList(listy)\n\n    \nprintList(cities)\nprint ()\nprint ()\nprint ()\nflipOrder(cities)",
    "Miami Atlanta Dallas Los Angeles New York Chicago Portland Sacramento \n\n\nSacramento Portland Chicago New York Los Angeles Dallas Atlanta Miami",
    "for r in nightwatch:\n...",
    "for c in r:\n...",
    "cities = [[\"Miami\", \"Atlanta\", \"Dallas\", \"Los Angeles\"], [\"New York\", \"Chicago\", \"Portland\", \"Sacramento\"]]\n\ndef printList(nightwatch):\n    for r in nightwatch:          \n        print(r, end=' ')  \ndef flipOrder(listy):\n    temp = []\n    for r in range (len(listy)):\n        for c in range (len(listy[r])):\n            temp.insert (0, listy[r][c])\n    listy = temp\n    printList(listy)\n    \nprintList(cities)\nprint ()\nprint ()\nprint ()\nflipOrder(cities)",
    "import plotly.graph_objects as go\nimport plotly.express as px \nimport pandas as pd\n\n\ndata = {'x': [1.5, 1.6, -1.2],\n        'y': [21, -16, 46],\n        'circle-size': [10, 5, 6],\n        'circle-color': [\"red\",\"red\",\"green\"],\n        'tttt': [\"ggg\",\"vvvv\",\"rrrr\"],\n        \n        \n        }\n\n# Create DataFrame\ndf = pd.DataFrame(data)\nfig = px.scatter(\n    df,\n    x=\"x\", \n    y=\"y\", \n    color=\"circle-color\",\n    size='circle-size',\n    # text=\"tttt\",\n    # hover_name=\"tttt\",\n    color_discrete_map={\"red\": \"red\", \"green\": \"green\"}\n)\nfig.update_traces(textposition='middle right', textfont_size=14, textfont_color='black', textfont_family=\"Inter\", hoverinfo=\"skip\")\n\nx_pad = (max(df.x) - min(df.x)) / 8\ny_pad = (max(df.y) - min(df.y)) / 30\n\nfor x0, y0 in zip(data['x'], data['y']):\n    fig.add_shape(type=\"rect\",\n        x0=x0 + (x_pad)/5, \n        y0=y0 - y_pad, \n        x1=x0 + x_pad, \n        y1=y0 + y_pad,\n        xref='x', yref='y',\n        line=dict(\n            color=\"black\",\n            width=2,\n        ),\n        fillcolor=\"#1CBE4F\",\n        layer=\"below\"\n    )\n\nfig.add_trace(\n    go.Scatter(\n        x=df[\"x\"].values + (x_pad)/2,\n        y=df[\"y\"],\n        text=df[\"tttt\"],\n        mode=\"text\",\n        showlegend=False\n    )\n)\n\nfig.show()",
    "def to_prefix_dict(prefix, entity):\n    if not entity:\n        return {}\n    return {\n        f'{prefix.lower()}_{c.name}': getattr(entity, c.name) for c in entity.__table__.columns\n    }",
    "import functools\nimport sqlalchemy as sa\n...\n\n# This code is vanilla SQLAlchemy, but Flask-SQLAlchemy code will be \n# essentially the same: substitute `db.session.query` for `sa.select` and\n# `db.session` for `s`.\nwith Session() as s:\n    q = sa.select(Department, Supplier).outerjoin(\n        Supplier, Department.default_supplier_id == Supplier.id\n    )\n    rs = s.execute(q)\n    result = [\n        functools.reduce(\n            dict.__or__,\n            [to_prefix_dict(key, entity) for key, entity in zip(rs.keys(), row)],\n        )\n        for row in rs\n    ]",
    "[\n  {\n    \"department_id\": 1,\n    \"department_name\": \"D1\",\n    \"department_default_supplier_id\": 1,\n    \"supplier_id\": 1,\n    \"supplier_name\": \"S1\"\n  },\n  {\n    \"department_id\": 2,\n    \"department_name\": \"S2\",\n    \"department_default_supplier_id\": null\n  }\n]",
    "def to_dict(entity):\n    if not entity:\n        return {}\n    return {c.name: getattr(entity, c.name) for c in entity.__table__.columns}",
    "...\n    result = [\n        {key_name: to_dict(entity) for key_name, entity in zip(rs.keys(), row)}\n        for row in rs\n    ]",
    "[                   \n  { \n    \"Department\": {\n      \"id\": 1,         \n      \"name\": \"D1\", \n      \"default_supplier_id\": 1\n    },\n    \"Supplier\": {                                                                                        \n      \"id\": 1,                                                                                           \n      \"name\": \"S1\"                                                                                       \n    }\n  },\n  {                  \n    \"Department\": { \n      \"id\": 2,\n      \"name\": \"S2\",\n      \"default_supplier_id\": null\n    },              \n    \"Supplier\": {}\n  }\n]",
    "import numpy as np\nimport matplotlib.pyplot as plt\n\nT = 40.0\nT = 150\nN = 10000                                          # For accurate frequency, N and number of cycles must be large\nt = np.linspace( 0.0, T, N, endpoint=False )\nsignal = 75000 * ( t / 150 ) ** 1.5 * ( 1 + 0.8 * np.sin( 2 * np.pi * t / 12 ) + 0.4 * np.sin( 2 * np.pi * t / 4 ) )\n\ndw = 2 * np.pi / T                                 # Frequency interval in rad/time_unit\ndf = 1 / T                                         # Frequency interval in cycles/time_unit\ndt = T / N\n\nFT = np.fft.rfft( signal )                         # Use rfft for a real signal (note: only about half the components)\nA = np.abs( FT ) / N                               # Normalised magnitude of Fourier components\nw = np.linspace( 0.0, N * dw, N, endpoint=False )  # Frequency values in rad/time_unit\n\nlow = 4                                            # Number of low-frequency components to exclude\nm = low + np.argmax( A[low:] )                     # Index of dominant frequency (excluded low frequencies)\nomega = m * dw                                     # Dominant frequency in rad/s\nf = omega / ( 2 * np.pi )                          # Dominant frequency in Hz\n#f = np.fft.rfftfreq( N, dt )[m]                   # Alternative, direct from numpy.fft\n\nprint( 'Index:', m )\nprint( 'Frequency interval in rad/time_unit    (dw):', dw    )\nprint( 'Dominant frequency in rad/time_unit    (w) :', omega )\nprint( 'Frequency interval in cycles/time_unit (df):', df    )\nprint( 'Dominant frequency in cycles/time_unit (f) :', f     )\n\nplt.title( \"Time Domain\" )\nplt.plot( t, signal, 'b-' )\nplt.xlabel( 't' )\nplt.show()\n\nplt.title( \"Frequency Domain\" )\nplt.plot( w[:len(A)] / ( 2 * np.pi ), A, 'r-' )\nplt.xlim( 0.0, 0.6 )\nplt.xlabel( 'f' )\nplt.show()",
    "Index: 12\nFrequency interval in rad/time_unit    (dw): 0.041887902047863905\nDominant frequency in rad/time_unit    (w) : 0.5026548245743668\nFrequency interval in cycles/time_unit (df): 0.006666666666666667\nDominant frequency in cycles/time_unit (f) : 0.07999999999999999",
    "import serial\n\nbuffer = b\"\"\nis_reading = False\n\nwith serial.Serial(\"/dev/ttyACM0\", 115200) as ser:\n    if ser.in_waiting:\n        ser.reset_input_buffer()\n    while True:\n        if ser.in_waiting:\n            byte = ser.read()\n            if byte == b\"$\":\n                is_reading = True\n            elif byte != b\";\" and is_reading:\n                buffer+= byte\n            else:\n                if is_reading:\n                    is_reading = False\n                    data = buffer.decode(\"utf-8\")\n                    buffer = b\"\"\n                    ser.reset_input_buffer()\n                    ser.reset_output_buffer()",
    "cols = ['reference', 'sicovam', 'label', 'id', 'date']\n\ndf['price'] = (\n    df.set_index('TTM')\n    .groupby(cols)['price']\n    .transform(lambda x: x.interpolate(method='index'))\n    .values\n    )",
    "df.iloc[4:7]\n\n            reference sicovam  label      id        date  TTM      price\n4 SCOM_WTI   68801903     WTI  Nymex  BBG:CL  2015-01-02   77  53.690000\n5 SCOM_WTI   68801903     WTI  Nymex  BBG:CL  2015-01-02   90  53.986562\n6 SCOM_WTI   68801903     WTI  Nymex  BBG:CL  2015-01-02  109  54.420000",
    "import ctypes\nimport itertools\n\n# Make sure this matches the definition in the docs:\n# https://docs.python.org/3/c-api/import.html#c._frozen\nclass _frozen(ctypes.Structure):\n    _fields_ = [('name', ctypes.c_char_p),\n                ('code', ctypes.POINTER(ctypes.c_ubyte)),\n                ('size', ctypes.c_int),\n                ('is_package', ctypes.c_bool)]\n\nPyImport_FrozenModules = ctypes.POINTER(_frozen).in_dll(ctypes.pythonapi, 'PyImport_FrozenModules')\n\nif PyImport_FrozenModules:\n    for i in itertools.count():\n        record = PyImport_FrozenModules[i]\n        if record.name is None:\n            break\n        print(record.name)",
    "# Extra for Python 3.11 and up\nfor name in ['_PyImport_FrozenBootstrap', '_PyImport_FrozenStdlib', '_PyImport_FrozenTest']:\n    records = PyImport_FrozenModules = ctypes.POINTER(_frozen).in_dll(ctypes.pythonapi, name)\n    for i in itertools.count():\n        record = records[i]\n        if record.name is None:\n            break\n        print(record.name)",
    "import zipfile\nwith zipfile.ZipFile(\"final_analysis_data.zip\") as z: # 100m compressed\n    with z.open(\"final_analysis_data.csv\") as f:      # 650m uncompressed\n        first_row = next(f).decode()\n        input(\"check memory useage now, press enter to continue\")\nprint(first_row)",
    "(\n    df\n    .with_columns(\n        ge_low=(pl.col(\"x\") >= pl.col(\"y\").struct[\"low\"].explode()).implode().over(pl.int_range(pl.len())),\n        le_up=(pl.col(\"x\") <= pl.col(\"y\").struct[\"up\"].explode()).implode().over(pl.int_range(pl.len())),\n    )\n    .with_columns(\n        check=(pl.col(\"ge_low\").explode() & pl.col(\"le_up\").explode()).implode().over(pl.int_range(pl.len()))\n    )\n)",
    "shape: (2, 5)\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 x   \u2506 y                       \u2506 ge_low              \u2506 le_up                 \u2506 check                 \u2502\n\u2502 --- \u2506 ---                     \u2506 ---                 \u2506 ---                   \u2506 ---                   \u2502\n\u2502 i64 \u2506 struct[2]               \u2506 list[bool]          \u2506 list[bool]            \u2506 list[bool]            \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 0   \u2506 {[-1, 0, 1],[1, 2, 3]}  \u2506 [true, true, false] \u2506 [true, true, true]    \u2506 [true, true, false]   \u2502\n\u2502 4   \u2506 {[-2, -1, 0],[0, 1, 2]} \u2506 [true, true, true]  \u2506 [false, false, false] \u2506 [false, false, false] \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
    "import polars as pl\n\ndf = pl.DataFrame(\n    {\n        \"x\": [0, 4, 2],\n        \"y\": [\n            {\"low\": [-1, 0, 1], \"up\": [1, 2, 3]},\n            {\"low\": [-2, -1], \"up\": [0, 1]},\n            {\"low\": [-3, -2, -1, 0], \"up\": [1, 2, 3, 4]},\n        ],\n    }\n)\n\n# 1. Get the length of the \"low\" lists:\ndf = df.with_columns(low_len=pl.col(\"y\").struct[\"low\"].list.len())\n\n# 2. Get the length of the \"up\" lists:\ndf = df.with_columns(up_len=pl.col(\"y\").struct[\"up\"].list.len())\n\nprint(df)  # Print the DataFrame with low_len and up_len\n\n# 3. If you want the maximum of the two:\ndf = df.with_columns(max_len=pl.max([pl.col(\"y\").struct[\"low\"].list.len(), pl.col(\"y\").struct[\"up\"].list.len()]))\nprint(df)  # Print the DataFrame with max_len\n\n# 4. Handle potential missing struct fields gracefully (returning 0 if missing):\ndf = df.with_columns(\n    low_len=pl.col(\"y\").struct.field(\"low\").list.len().fill_null(0),\n    up_len=pl.col(\"y\").struct.field(\"up\").list.len().fill_null(0),\n)\n\nprint(df)  # Print the DataFrame with low_len and up_len, handling missing fields",
    "m = ~df['B'].isna()\ndf.loc[m, ['A', 'B', 'C']] = df.loc[m, ['X', 'Y', 'Z']].values",
    "cols_left = ['A', 'B', 'C']\ncols_right = ['X', 'Y', 'Z']\ndf.loc[~df['B'].isna(), cols_left] = df[cols_right].rename(\n    columns=dict(zip(cols_right, cols_left))\n)",
    "A     B   C   X   Y   Z\n0  10    40  70  10  40  70\n1   2  <NA>   8  20  50  80\n2  30    60  90  30  60  90",
    "import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.007705615446897033,\n -0.007705615446897033, -0.05709260606658533, -0.05709260606658533,\n -0.12137136703522947, -0.12137136703522947, -0.1535107475195779,\n -0.1535107475195779, -0.18565012800417238, -0.18565012800417238])\n\nxp = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n 0.0, -1.34689e-06, -0.000273863136, -0.001326340329, -0.00287521918,\n -0.004941795493, -0.007555995729, -0.01071049581, -0.01439643971,\n -0.018603479056, -0.02331980126, -0.028531366613, -0.034172728629,\n -0.040283876545, -0.046985078741, -0.053797694609, -0.060610310434,\n -0.067422926258, -0.07423554208, -0.081048157901, -0.087860773721,\n -0.09467338954, -0.101486005358, -0.108298621175, -0.115111236993,\n -0.12192385281, -0.128736468628, -0.135549084446, -0.142361700265,\n -0.149174316084, -0.155986931905, -0.162799547727, -0.16961216355,\n -0.176424779375, -0.183237395203, -0.190050011032, -0.196862626864,\n -0.203675242698, -0.210487858535, -0.217300474376])\n\nfp = np.array([0.0, 0.010598548767, 0.021197097534, 0.031795646301, 0.042394195067,\n 0.052992743834, 0.063591292601, 0.074189841368, 0.084788390135,\n 0.095386938902, 0.105985487669, 0.116584036435, 0.127182585202,\n 0.137781133969, 0.148379682736, 0.158978231503, 0.16957678027,\n 0.180175329037, 0.190773877804, 0.20137242657, 0.211970975337,\n 0.222569524104, 0.233168072871, 0.243766621638, 0.254365170405,\n 0.264963719172, 0.275562267938, 0.286160816705, 0.296759365472,\n 0.307357914239, 0.317956463006, 0.328555011773, 0.33915356054,\n 0.349752109306, 0.360350658073, 0.37094920684, 0.381547755607,\n 0.392146304374, 0.402744853141, 0.413343401908, 0.423941950675,\n 0.434540499441, 0.445139048208, 0.455737596975, 0.466336145742,\n 0.476934694509, 0.487533243276, 0.498131792043, 0.508730340809,\n 0.519328889576, 0.529927438343, 0.54052598711, 0.551124535877,\n 0.561723084644, 0.572321633411, 0.582920182177, 0.593518730944,\n 0.604117279711, 0.614715828478, 0.625314377246, 0.635912926032,\n 0.646511474256, 0.657104739543, 0.667649141654, 0.678133049978,\n 0.688526896259, 0.698796708974, 0.708913631472, 0.718849263002,\n 0.728575709565, 0.738065661756, 0.74729295673, 0.756264519149,\n 0.764920687899, 0.773130776065, 0.781249735501, 0.789368694886,\n 0.797487654269, 0.80560661365, 0.813725573029, 0.821844532407,\n 0.829963491784, 0.838082451161, 0.846201410536, 0.854320369912,\n 0.862439329287, 0.870558288663, 0.878677248039, 0.886796207416,\n 0.894915166794, 0.903034126173, 0.911153085554, 0.919272044936,\n 0.927391004321, 0.935509963708, 0.943628923097, 0.95174788249,\n 0.959866841886, 0.967985801285, 0.976104760687])\n\n# filter zero values\nx=x[x<0]\nfp=fp[xp<0]\nxp=xp[xp<0]\n\n# just take the negative of x and xp to mirror it in the y axis\ny = np.interp(-x, -xp, fp)\n\nplt.plot(xp,fp,'x')\nplt.plot(x,y,'x')\n\n\nprint(y)\n\nplt.show()\n\n\n\n[0.69927656 0.69927656 0.78517646 0.78517646 0.8617809  0.8617809\n 0.90008312 0.90008312 0.93838535 0.93838535]",
    "A = x[i][j] = 4\nB = x[j][i] = 2",
    "A = B  # what is the value of A now? of B?\nB = A  # what is the value of B now? of A?",
    "A, B = B, A",
    "h_values = list(range(0, 150, '0.1'))[-1]",
    "h_values = range(0, 10, '0.1')\na_values = range(decimal.Decimal('0.1', 0.5, '0.1')\n\nfor h in h_values:\n    for a in a_values:\n        print(f\"h={h} a={a}\")",
    "h=0.0 a=0.1\nh=0.0 a=0.2\nh=0.0 a=0.3\nh=0.0 a=0.4",
    "h_values = frange(0, 10, '0.1')\n\nfor h in h_values:\n    a_values = frange(decimal.Decimal('0.1'), 0.5, '0.1')\n    for a in a_values:\n        print(f\"h={h} a={a}\")",
    "import decimal\nimport math\n\ndef calculate_c(a, h):\n    return (1 * 15 * (4 * (h ** (3/2))) ) / (3 * (a ** (1/2)))\ndef calculate_d(a, h, u):\n    return 2 * ((u * h) - ((1/3) * a * (u ** 3)))\ndef calculate_F(a, u):\n    return ((math.asinh(2 * abs(a) * u) / (4 * abs(a))) + ((u * math.sqrt((4 * (a ** 2) * (u ** 2)) + 1)) /2))\ndef calculate_g(F):\n    return 2 * F * 1.24 * 0.5 * 0.2 * 15\n# Defini\u00ebren van zoekbereik\ndef frange(x, y, jump):\n    while x < y:\n        yield float(x)\n        x += decimal.Decimal(jump)\n\nh_values = frange(0, 15, '0.1') # h moet kleiner zijn dan 15\n\nmax_c = 0\nbest_h, best_a = None, None\nfor h in h_values:\n    a_values = frange(decimal.Decimal('0.1'), 100, '0.1') # a mag niet te klein zijn om te voorkomen dat sqrt(h/a) < 7.5\n    for a in a_values:\n        u = math.sqrt(h / a)\n        if u < 7.5:\n            d = calculate_d(a, h, u)\n            if d <= 25:\n                c = calculate_c(a, h)\n                if c > max_c:\n                    max_c = c\n                    best_h, best_a = h, a\n                    \nbest_u = math.sqrt(best_h / best_a)\nbest_d = calculate_d(best_a, best_h, best_u)\nbest_F = calculate_F(best_a, best_u)\nbest_g = calculate_g(best_F)\n\nprint(f'Maximale waarde van c: {max_c}')\nprint(f'Optimale waarde van h: {best_h}')\nprint(f'Optimale waarde van a: {best_a}')\n\nprint(f'Waarde van u: {best_u}')\nprint(f'Waarde van d (dwarsdoorsnede): {best_d}')\nprint(f'Waarde van F: {best_F}')\nprint(f'Gewicht van de boot (g): {best_g}')",
    "Maximale waarde van c: 375.00000000000006\nOptimale waarde van h: 7.5\nOptimale waarde van a: 1.2\nWaarde van u: 2.5\nWaarde van d (dwarsdoorsnede): 25.0\nWaarde van F: 8.122573965507131\nGewicht van de boot (g): 30.21597515168653",
    "import subprocess\nimport sys\ndef test_parallel_fitting(n_covariates, n_models, n_processes):\n    # Create two identical but independent processes\n    processes = []\n    n_covariates = int(n_covariates)\n    n_models = int(n_models)\n    n_processes = int(n_processes)\n    n_models_per_process = n_models // n_processes\n    for i in range(n_processes):\n        command = [\"python\", \"-c\", f\"\"\"\nimport numpy as np\nimport time\nfrom scipy import optimize\nimport multiprocessing\nfrom threadpoolctl import threadpool_limits\n\nn_cpu_cores = multiprocessing.cpu_count()\ncores_per_process = n_cpu_cores // {n_processes}\nwith threadpool_limits(limits=cores_per_process, user_api='blas'):\n    for f in range({n_models_per_process}):\n        start_time = time.time()\n        X = np.random.rand(1500, {n_covariates})\n        y = np.random.rand(1500)\n        def model(params, X, y):\n            return np.sum((y - np.dot(X, params)) ** 2)\n        result = optimize.minimize(model, x0=np.ones({n_covariates}), args=(X, y))\n        print(f\"Process {i}:\",f,\" finished in \", time.time() - start_time, \" seconds\")\n\"\"\"]\n        p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        processes.append(p)\n    \n    # Wait for completion and time it\n    for p in processes:\n        p.wait()\n        output, error = p.communicate()\n        print(output.decode())\n        print(error.decode())\n    print(\"Parallel fitting completed\")\n\nif __name__ == \"__main__\":\n    args = sys.argv[1:]\n    test_parallel_fitting(*args)",
    "from scipy.spatial import cKDTree\n\nif hasattr(mesh.visual, 'vertex_colors') and mesh.visual.vertex_colors is not None:\n        tree = cKDTree(mesh.vertices)\n        _, indices = tree.query(cut_mesh.vertices)\n        cut_mesh.visual.vertex_colors = mesh.visual.vertex_colors[indices]",
    "from queue import Queue\nfrom threading import Thread\nimport time\nimport tkinter as tk\nimport requests\n\nqueue = Queue()\n\n# function to be executed in a thread\ndef fetch_data(queue):\n    while True:\n        try:\n            data = requests.get(url=\"http://api.open-notify.org/iss-now.json\")\n            data.raise_for_status()\n            data = data.json()\n            queue.put(data)\n        except Exception as ex:\n            print('exception:', ex)\n        time.sleep(0.5)\n\n# function for after loop\ndef update_position():\n    if not queue.empty():\n        data = queue.get()\n        latitude = data[\"iss_position\"][\"latitude\"]\n        longitude = data[\"iss_position\"][\"longitude\"]\n        my_canvas.itemconfig(my_text, text=f\"latitude = {latitude}\\nlongitude = {longitude}\")\n    window.after(1000, update_position)\n\ndef position():\n    my_button['state'] = 'disabled' # make sure only one thread is created\n    Thread(target=fetch_data, args=(queue,), daemon=True).start()\n\nwindow = tk.Tk()\nwindow.title(\"ISS Position\")\nwindow.config(padx=50, pady=50)\nwindow.minsize(300, 300)\n\nmy_canvas = tk.Canvas(height=300, width=300, highlightthickness=0)\nmy_canvas.grid(column=0, row=0, padx=10, columnspan=2)\nmy_text = my_canvas.create_text(150, 150, text=\"ISS POSITION\", font=(\"arial\", 16, \"bold\"))\n\nmy_button = tk.Button(text=\"Enter\", command=position, font=(\"arial\", 16, \"bold\"))\nmy_button.grid(column=0, row=1, columnspan=2)\n\nupdate_position() # start the update after loop\nwindow.mainloop()",
    "out = (df\n   .ffill(axis=1).rename_axis(index='idx', columns='col')\n   .replace('-', pd.NA)\n   .stack().reset_index(name='value')\n   .groupby(['idx', 'value'], as_index=False)['col']\n   .agg(lambda x: f'=output[{x.min()}:{x.max()}]')\n   .assign(n = lambda x: x.groupby('idx').cumcount(),\n           value=lambda x: x['value']+x.pop('col'))\n   .pivot(index='idx', columns='n', values='value')\n   .rename_axis(index=None, columns=None)\n)",
    "0                       1                     2                     3                     4\n0   Apple=output[col0:col7]                     NaN                   NaN                   NaN                   NaN\n1  Banana=output[col4:col7]   Cat=output[col0:col3]                   NaN                   NaN                   NaN\n2     Dog=output[col0:col3]                     NaN                   NaN                   NaN                   NaN\n3     Egg=output[col1:col4]  Fish=output[col0:col0]                   NaN                   NaN                   NaN\n4      G1=output[col4:col4]    G2=output[col3:col3]  G3=output[col2:col2]  G4=output[col1:col1]  G5=output[col0:col0]\n5      HA=output[col6:col6]    HB=output[col5:col5]  HC=output[col4:col4]  HD=output[col0:col3]                   NaN",
    "def label(x):\n    return f'{x.iloc[0]}=output[{x.index[0]}:{x.index[-1]}]'\n\nout = (df\n   .ffill(axis=1).replace('-', pd.NA)\n   .apply(lambda s: s.groupby(s).agg(label).tolist(), axis=1)\n   .pipe(lambda s: pd.DataFrame(s.tolist(), index=s.index))\n)",
    "0                       1                     2                     3                     4\n0   Apple=output[col7:col0]                    None                  None                  None                  None\n1  Banana=output[col7:col4]   Cat=output[col3:col0]                  None                  None                  None\n2     Dog=output[col3:col0]                    None                  None                  None                  None\n3     Egg=output[col4:col1]  Fish=output[col0:col0]                  None                  None                  None\n4      G1=output[col4:col4]    G2=output[col3:col3]  G3=output[col2:col2]  G4=output[col1:col1]  G5=output[col0:col0]\n5      HA=output[col6:col6]    HB=output[col5:col5]  HC=output[col4:col4]  HD=output[col3:col0]                  None",
    "for _, row in df.ffill(axis=1).replace('-', pd.NA).iterrows():\n    row.dropna(inplace=True)\n    for _, s in row.groupby(row.ne(row.shift()).cumsum()):\n        print(f'{s.iloc[0]}=output[{s.index[0]}:{s.index[-1]}]')",
    "Apple=output[col7:col0]\nBanana=output[col7:col4]\nCat=output[col3:col0]\nDog=output[col3:col0]\nEgg=output[col4:col1]\nFish=output[col0:col0]\nG1=output[col4:col4]\nG2=output[col3:col3]\nG3=output[col2:col2]\nG4=output[col1:col1]\nG5=output[col0:col0]\nHA=output[col6:col6]\nHB=output[col5:col5]\nHC=output[col4:col4]\nHD=output[col3:col0]",
    "for (x, y), row in (df.set_index(['X', 'Y'])\n                      .ffill(axis=1)\n                      .replace('-', pd.NA).iterrows()):\n    row.dropna(inplace=True)\n    for _, s in row.groupby(row.ne(row.shift()).cumsum()):\n        print(f'{x}.{s.iloc[0]}=output[{y}][{s.index[0]}:{s.index[-1]}]')",
    "1.Apple=output[1][col7:col0]\n54.Banana=output[1][col7:col4]\n54.Cat=output[1][col3:col0]\n7.Dog=output[2][col3:col0]\n8.Egg=output[2][col4:col1]\n8.Fish=output[2][col0:col0]\n22.G1=output[3][col4:col4]\n22.G2=output[3][col3:col3]\n22.G3=output[3][col2:col2]\n22.G4=output[3][col1:col1]\n22.G5=output[3][col0:col0]\n21.HA=output[3][col6:col6]\n21.HB=output[3][col5:col5]\n21.HC=output[3][col4:col4]\n21.HD=output[3][col3:col0]",
    "import sys\n\n# Move cursor up one line\ndef move_cursor_up():\n    sys.stdout.write(\"\\033[1A\")  \n    sys.stdout.flush()\n\n# Save current cursor position\ndef save_cursor_position():\n    sys.stdout.write(\"\\033[s\")  \n    sys.stdout.flush()\n\n# Restore saved cursor position\ndef restore_cursor_position():\n    sys.stdout.write(\"\\033[u\")  \n    sys.stdout.flush()\n\n# Invert text color (swap foreground/background)\ndef invert_colors():\n    sys.stdout.write(\"\\033[7m\")  \n    sys.stdout.flush()\n\n# Reset text formatting\ndef reset_format():\n    sys.stdout.write(\"\\033[0m\")  \n    sys.stdout.flush()",
    "# =============== example structure ===============\n\u251c\u2500 src\n\u2502   \u2514\u2500 project\n\u2502       \u2514\u2500 mymodule.py\n\u2514\u2500 test\n    \u2514\u2500 test.py",
    "# =============== importing in test.py ===============\n\nfrom importmonkey import add_path\nadd_path(\"../src/project\")  # relative to current __file__\nimport mymodule\n\n# add as many paths as needed, absolute or relative\n# unix path conventions work so you can use '..' and '.'\n# add_path validates the paths and returns added path as string",
    "from PyQt5.QtWidgets import QApplication, QWidget, QLabel\nfrom PyQt5.QtGui import QIcon\n\napp = QApplication([])\n\n# Using app instead of window to set the icon\napp.setWindowIcon(QIcon(\"icon.png\"))\n\nwindow = QWidget()\nwindow.setWindowTitle('Alarm App')\n\nlabel = QLabel('Alarm App', window)\n\nlabel.move(100, 50)\nwindow.show()\n\napp.exec_()",
    "import csv\nimport re\nimport sys\n\nwriter = csv.writer(sys.stdout)\nfor row in csv.reader(['\"\"\"QA12345\"\"\",\"\"\"Some Other Text\"\"\"']):\n    # ['\"QA12345\"', '\"Some Other Text\"']\n    print(row)\n\n    # Strip \" off the front and back of each item in the row.\n    row[:] = [ re.sub(r'^\"(.*)\"$', r'\\1', item) for item in row]\n\n    # ['QA12345', 'Some Other Text']\n    print(row)\n\n    # QA12345,Some Other Text\n    writer.writerow(row)",
    "with fileinput.input(input_file, inplace=True) as stream:\n    print(next(stream), end=\"\")\n    for line in stream:\n        print(line.replace('\"\"\"', '\"'), end=\"\")",
    "^( .+?)??( Com:.*)?$",
    "^((?! Com) (?:(?! Com).)+)?( Com:.*)?$",
    "class HasFacility:\n    def set_address(self, address):\n        self._address = address\n    \n    def address(self):\n        return self._address\n    \n    def set_facility_id(self, facility_id):\n        self._facility_id = facility_id\n    \n    def facility_id(self):\n        return self._facility_id\n\nclass HasWarehouse:\n    def store_item(self, item):\n        print(f\"I will store {item}\")\n\n    def retrieve_item(self, item):\n        print(f\"I will retrieve {item}\")\n\nclass HasShippingCenter:\n    def shipper(self):\n        raise NotImplementedError\n\n    def ship_item(self, item, customer):\n        print(f\"I will ship {item} to {customer} using {self.shipper()}\")\n\nclass HybridFacility(HasFacility, HasWarehouse, HasShippingCenter):\n    def shipper(self):\n        return \"PostHaste\"\n    \n    def retrieve_item(self, item):\n        print(f\"I will FETCH the {item}\")\n\nhf = HybridFacility()\nhf.set_address(\"123 Four Five Road\")\nprint(hf.address())\nhf.store_item(\"that thing\")\nhf.retrieve_item(\"that thing\")\nhf.ship_item(\"that thing\", \"you\")",
    "class Bag(HasWarehouse):\n    pass\n\nbag = Bag()\nbag.store_item(\"sugar packets\")\nbag.retrieve_item(\"sugar packets\")",
    "#  settings.py\nSOCIALACCOUNT_STORE_TOKENS = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True",
    "def get_user_google_tokens(request: HttpRequest, limit: int = 1) -> list[dict]:\n    from allauth.socialaccount.models import SocialToken\n    from django.db import models\n\n    user_google_tokens = list(\n        SocialToken.objects\n        .filter(account__provider='google', account__user_id=request.user.pk)\n        .annotate(google_user_id=models.F('account__uid'))\n        .order_by('-expires_at')\n        .values('token', 'token_secret', 'expires_at', 'google_user_id')[:limit]\n    )\n    print(user_google_tokens)\n    #  [\n    #   {'token': '...', \n    #    'token_secret': '...', \n    #    'expires_at': datetime.datetime(2025, 2, 7, 16, 38, 16, 611588, tzinfo=datetime.timezone.utc), \n    #    'google_user_id': '...'}\n    #  ]\n    return user_google_tokens",
    "import struct\n\ndata = b\"\"\ndata += struct.pack(\">I\", len(string1.encode('utf-8')))   # add length as big-endian unsigned int\ndata += string1.encode('utf-8')\ndata += struct.pack(\">I\", len(string2.encode('utf-8')))\ndata += string2.encode('utf-8')",
    "import leb128\n\ndata = bytearray()\ndata += leb128.u.encode(len(string1.encode()))\ndata += string1.encode()\ndata += leb128.u.encode(len(string2.encode())) \ndata += string2.encode()",
    "def encode_leb128(number):\n    if number == 0:\n        return bytearray([0])\n    \n    result = bytearray()\n    while number > 0:\n        byte = number & 0x7f\n        number >>= 7\n        if number > 0:\n            byte |= 0x80\n        result.append(byte)\n    return result",
    "form = page.locator(\"#register-email\").click()",
    "form = page.locator(\"#register-email\")\nform.click()",
    "form = page.locator(\"#register-email\")\nform.click()\nform.fill(\"test@email.com\")",
    "{\n    \"SCOPE\": [\"profile\", \"email\"],\n    \"AUTH_PARAMS\": {\n        \"access_type\": \"online\",\n        \"redirect_uri\": \"https://www.********.com/accounts/google/login/callback/\"\n    },\n    \"OAUTH_PKCE_ENABLED\": true\n}",
    "# settings.py\n\nSOCIALACCOUNT_PROVIDERS = {  \n    'google': {  \n        'APP': {  \n            'client_id': '123',  \n            'secret': '456',  \n            'key': '789',  \n            'settings': {  \n                'scope': [  \n                    'profile',  \n                    'email',  \n                ],  \n                'auth_params': {  \n                    'access_type': 'online',  \n                },  \n                'oauth_pkce_enabled': True,  \n            },  \n        }  \n    },  \n}",
    "SOCIALACCOUNT_PROVIDERS = {\n    'google': {\n        'FETCH_USERINFO': True,\n    },\n}",
    "SOCIALACCOUNT_PROVIDERS = {\n    \"google\": {\n        \"SCOPE\": [\n            \"profile\",\n            \"email\",\n        ],\n        \"AUTH_PARAMS\": {\n            \"access_type\": \"online\",\n            \"redirect_uri\": \"https://www.********.com/accounts/google/login/callback/\",\n        },\n        \"OAUTH_PKCE_ENABLED\": True,\n    }\n}",
    "from urllib.parse import quote\n\nURLQUOTE_ARGS = {'safe': ''}\n\ndef format_url(\n    url_template: str,\n    *args: str,\n    **kwargs: str\n) -> str:\n    return url_template.format(\n        *[quote(arg, **URLQUOTE_ARGS) for arg in args],\n        **{k: quote(v, **URLQUOTE_ARGS) for k, v in kwargs.items()})",
    "format_url(url_template, user_id=user_id)",
    "import tkinter as tk\n\nroot = tk.Tk()\n\n\nturn = \"X\"\ndef on_click():\n    global turn\n    if turn == \"X\":\n        btn.config(text = \"X\")\n        turn = \"O\"\n    else:\n        btn.config(text = \"O\")\n        turn = \"X\"\n        \ndef on_click2():\n   global turn\n   if turn == \"X\":\n        btn2.config(text = \"X\")\n        turn = \"O\"\n   else:\n        btn2.config(text = \"O\")\n        turn = \"X\"\n        \ndef on_click3():\n    global turn\n    if turn == \"X\":\n        btn3.config(text = \"X\")\n        turn = \"O\"\n    else:\n        btn3.config(text = \"O\")\n        turn = \"X\"\n\nbtn = tk.Button(root, text = \"X\", height = 4, width = 10, command=on_click)\nbtn.grid(row = 0, column = 0)\n\nbtn2 = tk.Button(root, text = \"X\", height = 4, width = 10, command=on_click2)\nbtn2.grid(row = 0, column = 1)\n\nbtn3 = tk.Button(root, text = \"X\", height = 4, width = 10, command=on_click3)\nbtn3.grid(row = 0, column = 2)\n\nroot.mainloop()",
    "mylist = [0, 2, 4, 2, 3, 2, 1, 0, 3, 0]\nmydict = {}\nmax_value = 0\n\nfor i, val in enumerate(mylist):\n    mydict.setdefault(val, []).append(i)\n    max_value = max(val, max_value)",
    "import random\n\nnewlist = [random.choice(mydict[i]) if i in mydict else None for i in range(max_value + 1)]",
    "try:\n        location = pyautogui.locateOnScreen('1.png', confidence=0.9)\n        if pyautogui.locateOnScreen('1.png', confidence=0.9):\n            call_count = 0\n            if pyautogui.locateOnScreen('1.png', confidence=0.9):\n                while call_count <= 7:\n                    logging.info(call_count)\n                    call_count += 1\n                if has_restarted:\n                    return\n        restarting_function(True)\n        restarting_function()\n    except pyautogui.ImageNotFoundException:\n        pass",
    "import os\n\nCHUNK = 2048\nPADDING = b'\\xff' * 64\nINPUT_SIZE = 0x80_00000  # 128MiB\n\n# Generate example input\nwith open('input.bin', 'wb') as file:\n    for addr in range(0, INPUT_SIZE, 4):  # 128MiB\n        file.write(addr.to_bytes(4))\n\n# Add FF chunks.  Note this multiline with syntax requires Python 3.10+.\nwith (open('input.bin', 'rb') as infile,\n      open('output.bin', 'wb') as outfile\n):\n# Pre-3.10 statement...\n# with open('input.bin', 'rb') as infile, open('output.bin', 'wb') as outfile:\n    for _ in range(0, os.path.getsize('input.bin'), CHUNK):\n        chunk = infile.read(CHUNK)\n        outfile.write(chunk)\n        outfile.write(PADDING)",
    "00000000 00 00 00 00 00 00 00 04 00 00 00 08 00 00 00 0C\n00000010 00 00 00 10 00 00 00 14 00 00 00 18 00 00 00 1C\n...\n000007F0 00 00 07 F0 00 00 07 F4 00 00 07 F8 00 00 07 FC\n00000800 00 00 08 00 00 00 08 04 00 00 08 08 00 00 08 0C\n00000810 00 00 08 10 00 00 08 14 00 00 08 18 00 00 08 1C\n...\n00001000 00 00 10 00 00 00 10 04 00 00 10 08 00 00 10 0C\n00001010 00 00 10 10 00 00 10 14 00 00 10 18 00 00 10 1C\n...\n07FFFFE0 07 FF FF E0 07 FF FF E4 07 FF FF E8 07 FF FF EC\n07FFFFF0 07 FF FF F0 07 FF FF F4 07 FF FF F8 07 FF FF FC",
    "00000000 00 00 00 00 00 00 00 04 00 00 00 08 00 00 00 0C\n00000010 00 00 00 10 00 00 00 14 00 00 00 18 00 00 00 1C\n...\n000007F0 00 00 07 F0 00 00 07 F4 00 00 07 F8 00 00 07 FC\n00000800 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00000810 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00000820 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00000830 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00000840 00 00 08 00 00 00 08 04 00 00 08 08 00 00 08 0C\n00000850 00 00 08 10 00 00 08 14 00 00 08 18 00 00 08 1C\n...\n00001030 00 00 0F F0 00 00 0F F4 00 00 0F F8 00 00 0F FC\n00001040 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00001050 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00001060 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00001070 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n00001080 00 00 10 00 00 00 10 04 00 00 10 08 00 00 10 0C\n...\n083FFFA0 07 FF FF E0 07 FF FF E4 07 FF FF E8 07 FF FF EC\n083FFFB0 07 FF FF F0 07 FF FF F4 07 FF FF F8 07 FF FF FC\n083FFFC0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n083FFFD0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n083FFFE0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n083FFFF0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF",
    "import os\n\nCHUNK = 2048\nPADDING = b'\\xff' * 64\nINPUT_SIZE = 0x8000000  # 128MiB \n\n# Generate example input\n# with open('input.bin', 'wb') as file:\n#   for addr in range(0, INPUT_SIZE, 4):  # 128MiB\n#      file.write(addr.to_bytes(4))\n\n# Add FF chunks.\nwith open('input.bin', 'rb') as infile, open('output.bin', 'wb') as outfile:\n    for _ in range(0, os.path.getsize('input.bin'), CHUNK):\n        chunk = infile.read(CHUNK)\n        outfile.write(chunk)\n        outfile.write(PADDING)",
    "import logging \nfrom opentelemetry.sdk._logs.export import BatchLogRecordProcessor as rith\nfrom azure.monitor.opentelemetry.exporter import AzureMonitorLogExporter as testPack\nfrom opentelemetry._logs import (get_logger_provider as glp,set_logger_provider as rc,)\nfrom opentelemetry.sdk._logs import (LoggerProvider,LoggingHandler,)\nfrom opentelemetry import metrics\nfrom opentelemetry.sdk.metrics import Counter, MeterProvider\nfrom opentelemetry.sdk.metrics.export import PeriodicExportingMetricReader\nfrom azure.monitor.opentelemetry.exporter import AzureMonitorMetricExporter\n\nexp = AzureMonitorMetricExporter.from_connection_string(\"InstrumentationKey=faderithwik02;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/;ApplicationId=a6rithwikb1\"\n)\nrr = PeriodicExportingMetricReader(exp, export_interval_millis=5000)\nmetrics.set_meter_provider(MeterProvider(metric_readers=[rr]))\nri_out = {\n    \"Name\": \"Chotu\"\n}\nch_meter = metrics.get_meter(\"testname\")\nch_cnter = ch_meter.create_counter(\"testcounter\")\nch_cnter.add(8, ri_out)\n\nrc(LoggerProvider())\nri_ex = testPack(\n    connection_string=\"InstrumentationKey=fadrithwik02;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/;ApplicationIdrithwikc4b1\"\n)\nglp().add_log_record_processor(rith(ri_ex))\n\ncho = LoggingHandler()\nchlg = logging.getLogger(__name__)\nchlg.addHandler(cho)\nchlg.setLevel(logging.INFO)\n\n\nchlg.info(\"Rithwik from Info\")\nchlg.error(\"Rithwik from Error\")\nchlg.warning(\"Rithwik from WARNING \")",
    "import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\ndata = pd.DataFrame({\n    'col1': np.linspace(0, 0.2, 100),\n    'col2': np.linspace(0, 0.2, 100),\n    'col3': np.linspace(0.2, 1, 100),\n    'col4': np.linspace(0.2, 1, 100)\n})\n\nfig, ax = plt.subplots()\n\nfor i in range(0, data.shape[1]):\n   if i%2 == 0:\n      ax.plot(data.iloc[:,i], data.iloc[:,i+1])\n       \nax.set_xlabel('Strain (mm)')\nax.set_ylabel('Stress (lbf)')",
    "import matplotlib.pyplot as plt\nimport pandas as pd\nfrom io import StringIO\n\ntest_data = StringIO(\"0 0 0 1 0 2\\n1 1 1 2 1 3\\n2 2 2 3 2 4\")\ndata = pd.read_csv(test_data, sep=\" \")\n\nfor i in range(0,data.shape[1], 2):\n    plt.plot(data.iloc[:,i], data.iloc[:,i+1])\n\nplt.xlabel('Strain (mm)')\nplt.ylabel('Stress (lbf)')\nplt.show()",
    "import dask.dataframe as dd\nimport numpy as np\n\n# Example: Large Dask DataFrame\ndf = dd.read_parquet(\"mydata.parquet\")  # Replace with your actual data source\n\n# Example: NumPy array of codes to exclude\nmycodes = np.array([1001, 1002, 1003])\n\n# Convert NumPy array to a list for better compatibility\nmycodes_list = mycodes.tolist()\n\n# Filter rows where CODE is NOT in mycodes\nfiltered_df = df[~df[\"CODE\"].isin(mycodes_list)]\n\n# Trigger computation if needed\n# This pulls the result into memory\nresult = filtered_df.compute()\nprint(result)",
    "from django.utils import timezone\n\nclass Users(models.Model):\n    user_id = models.AutoField(primary_key=True, null=False, blank=True)\n    username = models.CharField(max_length=100)\n    email = models.CharField(max_length=254)\n    password_hash = models.CharField(max_length=30, blank=True, null=True)\n    created_at = models.DateTimeField(default=timezone.now, null=False, blank=True)\n\n    class Meta:\n        managed = False\n        db_table = 'users'",
    "class Users(models.Model):\n    ...\n    \n    created_at = models.DateTimeField(auto_now=True, null=False, blank=True)\n\n    class Meta:\n        managed = False\n        db_table = 'users'",
    "from functools import partial\n\n@partial(jax.jit, static_argnames=['degree'])\ndef bspline(t_values, knots, coefficients, degree):\n  ...",
    "# /// script\n# dependencies = [\n#    \"ebooklib\"\n# ]\n# ///\n\nfrom ebooklib import epub\n\n\ndef create_epub():\n    book = epub.EpubBook()\n    book.set_title(\"Minimal EPUB Example\")\n    book.set_language(\"en\")\n    book.add_author(\"Author Name\")\n\n    # Section 1\n    section1 = epub.EpubHtml(\n        title=\"Section 1\",\n        file_name=\"section1.xhtml\",\n        content=\"<a name='section1'><h1>Section 1</h1><p>Preamble text...</p>\\n\" +\n                \"<a name='section1-chapter1'><h2>Chapter 1</h2><p>Content of Chapter 1</p>\\n\" +\n                \"<a name='section1-chapter1'><h2>Chapter 2</h2><p>Content of Chapter 2</p>\",\n    )\n\n    # Section 2\n    chapter3 = epub.EpubHtml(\n        title=\"Chapter 1 (Section 2)\",\n        file_name=\"chapter3.xhtml\",\n        content=\"<h2>Chapter 1 (Section 2)</h2><p>Content of Chapter 1 in Section 2</p>\",\n    )\n\n    # Add chapters to book\n    for item in [section1, chapter3]:\n        book.add_item(item)\n\n    # Define table of contents with Link\n    book.toc = [\n        (epub.Link(\"section1.xhtml\", \"Section 1\", \"sec1\"), (\n            epub.Link(\"section1.xhtml#section1-chapter1\", \"Chapter 1\", \"chap1\"),\n            epub.Link(\"section1.xhtml#section1-chapter2\", \"Chapter 2\", \"chap2\"),\n        )),\n        epub.Link(\"chapter3.xhtml\", \"Chapter 1 (Section 2)\", \"chap3\"),\n    ]\n\n    # Define book spine\n    book.spine = [\"nav\", section1, chapter3]\n\n    # Add navigation files\n    book.add_item(epub.EpubNcx())\n    book.add_item(epub.EpubNav())\n\n    # Write to file\n    epub.write_epub(\"minimal_epub_link.epub\", book, {})\n    print(\"EPUB created: minimal_epub_link.epub\")\n\n\nif __name__ == \"__main__\":\n    create_epub()",
    "import streamlit as st\nimport plotly.express as px\nimport pandas as pd\n\ndata = {\n    'x': [1.5, 1.6, -1.2],\n    'y': [21, -16, 46],\n    'circle-size': [10, 5, 6],\n    'circle-color': [\"red\", \"blue\", \"green\"]\n}\n\ndf = pd.DataFrame(data)\n\nfig = px.scatter(\n    df,\n    x=\"x\", \n    y=\"y\", \n    color=\"circle-color\",\n    size='circle-size'\n)\n\nfig.update_layout(\n    xaxis={\n        \"range\": [-100, 100],\n        'zeroline': True, \n        'zerolinewidth': 3, \n        \"zerolinecolor\": \"green\",\n        \"tick0\": -100,\n        \"dtick\": 25,\n        \"constrain\": \"domain\",\n        \"showline\": True\n    },\n    yaxis={\n        \"range\": [-100, 100],\n        'zeroline': True, \n        'zerolinewidth': 3, \n        \"zerolinecolor\": \"red\",\n        \"tick0\": -100,\n        \"dtick\": 25,\n        \"constrain\": \"domain\",\n        \"showline\": True\n    },\n    width=500,\n    height=500\n)\n\n\n\nst.plotly_chart(fig, use_container_width=False)",
    "1.Reorganize on-disk folder structure to match standard Protobuf convention(com/company/app1/entity1/v1) so that package com.company.app1.entity1.v1; matches directory layout\n2. Disable particular lint rules in buf.yaml that enforce directory/package matching\n3.Post-process(rename)your generated code after Buf runs in order to get your desired `dots in folder names` layout",
    "import asyncio\nfrom azure.identity.aio import ClientSecretCredential\nfrom msgraph import GraphServiceClient\nfrom msgraph.generated.sites.sites_request_builder import SitesRequestBuilder\nfrom kiota_abstractions.base_request_configuration import RequestConfiguration\n\ntenant_id = \"TenantID\"\nclient_id = \"ClientID\"\nclient_secret = \"Secret\"\n\ncredential = ClientSecretCredential(tenant_id, client_id, client_secret)\nscopes = ['https://graph.microsoft.com/.default']\n\ngraph_client = GraphServiceClient(credential, scopes)\n\nquery_params = SitesRequestBuilder.SitesRequestBuilderGetQueryParameters(\n    search=\"RukSite\",  \n\nrequest_configuration = RequestConfiguration(\n    query_parameters=query_params,\n)\n\nasync def get_site_id():\n   \n    result = await graph_client.sites.get(request_configuration=request_configuration)\n    site_id = result.value[0].id  \n    return site_id\n\n# Get the drives of the site by site_id\nasync def get_drives(site_id):\n    drives = await graph_client.sites.by_site_id(site_id).drives.get()\n    return drives\n\nasync def main():\n    \n    site_id = await get_site_id()\n\n    # Print the Site ID\n    print(f\"Site ID: {site_id}\")\n\n    # Fetch the drives for the site using the site ID\n    drives = await get_drives(site_id)\n\n    # Print the drives\n    print(f\"Drives: {drives}\")\n\n# Run the main async function\nasyncio.run(main())",
    "if keyboard.is_pressed(\"Esc\"):",
    "import keyboard\n\n\nno_of_lines = 5\nline_count = no_of_lines\nlines = \"\"\n\nwhile line_count > 0:\n    lines += input() + \"\\n\"\n    line_count -= 1\n    if keyboard.is_pressed(\"Esc\"):\n        print(\"lines set to 0\")\n        line_count=0\n    if line_count == 0:\n        print(\"last line\")\n        try:\n            inc_line = int(input(\"0 or extra line::\"))\n        except ValueError:\n            inc_line = 0  \n        if inc_line > 0:\n            no_of_lines += inc_line\n            line_count += inc_line\n            \n\nprint(\"Press 'S' to save.\")\nwhile True:\n    if keyboard.is_pressed(\"s\"):\n        print(\"User pressed save. Saving...\")\n        filename = input(\"filename >\")\n        path = input(\"path >\")\n        with open(f\"{path}{filename}\",\"w\") as file:\n            file.write(lines)\n        break",
    "volumes:\n  - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags\n  - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs \n  - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins",
    "docker-compose down\ndocker-compose up -d",
    "names = [\"Joey Tribbiani\", \"Monica Geller\", \"Chandler Bing\", \"Phoebe Buffay\"]\nusernames = []\n\nfor i in names: \n    usernames.append(i.replace(\" \", \"_\"))\n\nprint(usernames)",
    "/*\n  The idea is to reduce the problem to 2D square matrix inversion.\n  Step 1. Calculate the shape of the result and the shape of the intermediate 2D matrix.\n  Step 2. Reshape `self` to 2D matrix.\n  Step 3. Invert the 2D matrix self.to_2D()\n          There is no quick way to find out whether the matrix is invertible,\n          so at this stage an error from at::inverse can be thrown.\n          Note that for CUDA this causes cross-device memory synchronization that can be slow.\n  Step 4. reshape the result.\n  */",
    "batch_inv = torch.vmap(torch.linalg.inv)",
    "original_shape = tensors.shape\ntensors = tensors.view(-1,3,3)\noutput = batch_inv(tensors)\noutput = output.view(original_shape)",
    "import struct\nimport zlib\nfrom typing import TypedDict\n\nGZIP_WBITS = 16 + zlib.MAX_WBITS\n\n\nclass PrepareRet(TypedDict):\n    data: bytes\n    length: int\n    crc: int\n\n\ndef decompress(data: bytes) -> bytes:\n    return zlib.decompress(data, GZIP_WBITS)\n\n\ndef prepare(data: bytes) -> PrepareRet:\n    deflate = zlib.compressobj(8, zlib.DEFLATED, GZIP_WBITS)\n    output = deflate.compress(data)\n    # use Z_SYNC_FLUSH so the streams can be concatenated\n    output += deflate.flush(zlib.Z_SYNC_FLUSH)\n    return {\n        \"data\": output,\n        \"length\": len(data),\n        \"crc\": zlib.crc32(data),\n    }\n\n\ndef crc_combine(crcA: int, crcB: int, lenB: int):\n    crcA0 = zlib.crc32(b\"\\0\" * lenB, crcA ^ 0xFFFFFFFF) ^ 0xFFFFFFFF\n    return crcA0 ^ crcB\n\n\ndef concatenate(streams: list[PrepareRet]) -> bytes:\n    output = b\"\"\n    total_length = 0\n    combined_crc = 0\n\n    output = bytearray()\n    for stream in streams:\n        # remove the 10byte gzip header\n        output += stream[\"data\"][10:]\n        total_length += stream[\"length\"]\n        combined_crc = crc_combine(combined_crc, stream[\"crc\"], stream[\"length\"])\n\n    # Create an empty block to use the header and trailer\n    compressor = zlib.compressobj(8, zlib.DEFLATED, GZIP_WBITS)\n    empty = compressor.flush()\n\n    # Get the gzip header bytes\n    gzip_header = empty[:10]\n\n    # Create the Z_FINISH trailer\n    trailer = empty[10:-8]\n    trailer += struct.pack(\"<L\", combined_crc)\n    trailer += struct.pack(\"<L\", total_length)\n    return gzip_header + output + trailer\n\n\ndef test_equal():\n    data = [b\"Hello\", b\"World!\"]\n    streams = [prepare(datum) for datum in data]\n    compressed = concatenate(streams)\n    assert b\"\".join(data) == decompress(compressed)",
    "import kivy.resources\n\nif getattr(sys, 'frozen', False):\n    # this is a Pyinstaller bundle\n    kivy.resources.resource_add_path(sys._MEIPASS)\n    kivy.resources.resource_add_path(os.path.join(sys._MEIPASS, 'dialogs'))",
    "kvPath = kivy.resources.resource_find('gamescreen.kv')",
    "raise NotImplementedError(\"That compression method is not supported\")",
    "d = {\"A\" : 123.02, \"B\": 12.3}\nfor key in d.keys():\n    d[key] = str(d[key])",
    "dict(zip(d.keys(), map(str, d.values())))",
    "{'A': '123.02', 'B': '12.3'}",
    "str(d)",
    "\"{'A': 123.02, 'B': 12.3}\"",
    "def get_epc_rating(driver: WebDriver, listing_url: str) -> str:\n    driver.get(listing_url)  # Open property details page\n    try:\n        xpath_expression = (\n            \"//*[starts-with(translate(text(), 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'), 'EPC RATING')]\"\n        )\n        \n        epc_element = WebDriverWait(driver, 5).until(\n            EC.presence_of_element_located((By.XPATH, xpath_expression))\n        )\n        return etext(epc_element)  # Extract EPC rating text\n    except TimeoutException:\n        return \"N/A\"  # Return \"N/A\" if EPC Rating is missing",
    "df.with_columns(\n    pl.all().exp() / pl.sum_horizontal(pl.all().exp())\n)",
    "shape: (10, 3)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 a        \u2506 b        \u2506 c        \u2502\n\u2502 ---      \u2506 ---      \u2506 ---      \u2502\n\u2502 f64      \u2506 f64      \u2506 f64      \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 0.000123 \u2506 0.006692 \u2506 0.993185 \u2502\n\u2502 0.000895 \u2506 0.01797  \u2506 0.981135 \u2502\n\u2502 0.006377 \u2506 0.047123 \u2506 0.946499 \u2502\n\u2502 0.04201  \u2506 0.114195 \u2506 0.843795 \u2502\n\u2502 0.211942 \u2506 0.211942 \u2506 0.576117 \u2502\n\u2502 0.576117 \u2506 0.211942 \u2506 0.211942 \u2502\n\u2502 0.843795 \u2506 0.114195 \u2506 0.04201  \u2502\n\u2502 0.946499 \u2506 0.047123 \u2506 0.006377 \u2502\n\u2502 0.981135 \u2506 0.01797  \u2506 0.000895 \u2502\n\u2502 0.993185 \u2506 0.006692 \u2506 0.000123 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
    "plan = df.lazy().with_columns(pl.all().exp() / pl.sum_horizontal(pl.all().exp())).explain()\nprint(plan)",
    "# simple \u03c0 3/7 [\"a\", \"b\", \"c\"]\n#    WITH_COLUMNS:\n#    [[(col(\"__POLARS_CSER_0x9b1b3182d015f390\")) / (col(\"__POLARS_CSER_0x762bfea120ea9e6\"))].alias(\"a\"), [(col(\"__POLARS_CSER_0xb82f49f764da7a09\")) / (col(\"__POLARS_CSER_0x762bfea120ea9e6\"))].alias(\"b\"), [(col(\"__POLARS_CSER_0x1a200912e2bcc700\")) / (col(\"__POLARS_CSER_0x762bfea120ea9e6\"))].alias(\"c\")]\n#      WITH_COLUMNS:\n#      [col(\"a\").exp().alias(\"__POLARS_CSER_0x9b1b3182d015f390\"), col(\"b\").exp().alias(\"__POLARS_CSER_0xb82f49f764da7a09\"), col(\"c\").exp().alias(\"__POLARS_CSER_0x1a200912e2bcc700\"), col(\"a\").exp().sum_horizontal([col(\"b\").exp(), col(\"c\").exp()]).alias(\"__POLARS_CSER_0x762bfea120ea9e6\")]\n#       DF [\"a\", \"b\", \"c\"]; PROJECT */3 COLUMNS",
    "def restarting_function(has_restarted=False):\n        call_count=0\n        while call_count<=7:\n            print(\"Does something with count\", call_count)\n            call_count+=1\n        if has_restarted:\n            return\n        restarting_function(True)\n    \n    \n restarting_function()",
    "self.searchForNode(nodeToSearch, children)",
    "result = self.searchForNode(nodeToSearch, children)\n            if result:\n                return result",
    "mindate = min(df['review_ds'])\nmaxdate = max(df['review_ds'])\n\nUnique_queue_id= df['queue id'].unique().astype(str).tolist()\n\ncnxn.execute(\n    f\"\"\"DELETE FROM [DATAWRHS-FACEBOOK].[dbo].[QA_PDO_AGE_AFFINITY_NEW]\n    WHERE [review_ds] >= ?\n    AND   [review_ds] <= ?\n    AND   [queue id] IN ({','.join('?' for _ in Unique_queue_id)})\"\"\",\n    [\n        mindate,\n        maxdate,\n        *Unique_queue_id,\n    ],\n)",
    "mindate = min(df['review_ds'])\nmaxdate = max(df['review_ds'])\n\nUnique_queue_id = df['queue id'].astype(str).unique().tolist()\nUnique_queue_id_str = ', '.join(f\"'{id}'\" for id in Unique_queue_id)  # Add single quotes\n\nquery = f\"\"\"\n    DELETE FROM [DATAWRHS-FACEBOOK].[dbo].[QA_PDO_AGE_AFFINITY_NEW]\n    WHERE [review_ds] >= '{mindate}'\n    AND [review_ds] <= '{maxdate}'\n    AND [queue id] IN ({Unique_queue_id_str})\n\"\"\"\n\ncnxn.execute(query)\ncnxn.commit()",
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<templates xml:space=\"preserve\">\n    <!-- Inherit and extend the CRM progress bar template -->\n    <t t-inherit=\"crm.ColumnProgress\" t-inherit-mode=\"extension\">\n        <!-- Insert additional count after the AnimatedNumber element -->\n        <xpath expr=\"//AnimatedNumber\" position=\"after\">\n            <span class=\"ml-2\">\n                <!-- Replace 'your_field' with the actual field name -->\n                #######\n            </span>\n        </xpath>\n    </t>\n</templates>",
    "{\n    # ... other manifest keys\n    'assets': {\n        'web.assets_backend': [\n            'your_module/static/src/xml/your_template.xml',  # XML asset path\n        ],\n    },\n    # ... other manifest keys\n}",
    "import torch.optim as optim\n\nmodel = MNIST_ConvNet()\noptimizer = optim.SGD(model.parameters(), lr=0.01, momentum=0.9)\nloss = nn.CrossEntropyLoss()\n\nfor X_batch, y_batch in train_dataloader:\n\n            optimizer.zero_grad()\n            output = model(X_batch)  \n            loss = loss(output, y_batch)",
    "int(5) # return 5",
    "int(2.04) # return 2",
    "int(\"  -10  \")  # returns -10",
    "int(\"1010\", 2)  # returns 10 (binaray to decimal)",
    "def custom_integer_converter(s, base=10):\n    # Ensure input is a string\n    if not isinstance(s, str):\n        raise TypeError(\"Input must be a string\")\n    \n    s = s.strip().lower()  # Handle whitespace and case insensitivity\n    \n    if not s:\n        raise ValueError(\"Empty string after stripping whitespace\")\n    \n    # Determine the sign\n    sign = 1\n    if s[0] == '-':\n        sign = -1\n        s = s[1:]\n    elif s[0] == '+':\n        s = s[1:]\n    \n    if not s:\n        raise ValueError(\"No digits after sign\")\n    \n    # Validate characters and convert to integer\n    value = 0\n    for c in s:\n        # Convert character to numerical value\n        if c.isdigit():\n            digit = ord(c) - ord('0')\n        else:\n            digit = ord(c) - ord('a') + 10\n        \n        # Check if digit is valid for the base\n        if not (0 <= digit < base):\n            raise ValueError(f\"Invalid character '{c}' for base {base}\")\n        \n        value = value * base + digit\n    \n    return sign * value",
    "byte_list = []\nwith open(\"foo.txt\", \"rb\") as handle:\n    while b := handle.read(1):\n        byte_list.append(b)",
    "class A:\n    def __init__(self):\n        import inspect\n        __f = inspect.getframeinfo(inspect.currentframe().f_back)\n        __func = __f.function\n        self.func_name = __func",
    ">>> data1 = r'{\\\"key\\\":\\\"val\\\"}'\n>>> data2 = \"{\\\\\\\"key\\\\\\\":\\\\\\\"val\\\\\\\"}\"\n>>> data1 == data2\nTrue",
    ">>> print(\", \".join(data1))\n{, \\, \", k, e, y, \\, \", :, \\, \", v, a, l, \\, \", }\n>>> print(\", \".join(data2))\n{, \\, \", k, e, y, \\, \", :, \\, \", v, a, l, \\, \", }",
    "data = \"string\"",
    "raw_data = repr(data)",
    "class MyPopen:\n    def __init__(self, popen: Popen, extra: str):\n        self.popen = popen\n        self.extra = extra\n\n    def poll(self):\n        return self.popen.poll()\n\n    def wait(self, timeout=None):\n        return self.popen.wait(timeout)\n\n    def communicate(self, input=None, timeout=None):\n        return self.popen.communicate(input, timeout)\n\n    def send_signal(self, signal):\n        return self.popen.send_signal(signal)\n\n    def terminate(self):\n        return self.popen.terminate()\n\n    def kill(self):\n        return self.popen.kill()",
    "my_popen.popen.wait()",
    "print(f'{a=:}')",
    "print(f'{a=!s}')",
    "import numpy as np\n\na = np.array([2, 3, 1, 9], dtype='i4')\nprint(f'a={np.array2string(a, separator=\" \")}')",
    "response = requests.post(f\"{base_url}/sapi/v1/margin/order/oto\", headers=headers, params=params)",
    "params = {\n        \"symbol\": \"BTCUSDT\",\n        \"isIsolated\": \"FALSE\",\n        \"sideEffectType\": \"MARGIN_BUY\",\n        \"workingType\": \"LIMIT\",\n        \"workingSide\": \"BUY\",\n        \"workingPrice\": 80000,\n        \"workingQuantity\": 0.0002,\n        \"workingTimeInForce\": \"GTC\",\n        \"pendingType\": \"LIMIT\",\n        \"pendingSide\": \"SELL\",\n        \"pendingQuantity\": 0.0002,\n        \"pendingPrice\": 110000,\n        \"pendingimeInForce\": \"GTC\",\n        'timestamp': int(time.time() * 1000), \n    }",
    "def square(a, b, c, d): \n    # this function first goes through and sorts the list of items and assigns the values to z via a walrus operator (the :=)\n    # then we are able to access the list of items on the same line to do multiplication for the first and second values in the list.\n    return (z := sorted([a,b,c,d]))[0]*z[1]",
    "from operator import add, sub, mul, truediv\nfrom collections.abc import Callable\n\n# perform (potentially) multiple functions using the 2 lowest order values from the 4 float arguments\ndef do_stuff(\n    a: float, b: float, c: float, d: float, *, ops: tuple[Callable, ...]\n) -> list[tuple[str, float, list[float]]]:\n    return [\n        (op.__name__, op((s := sorted((a, b, c, d)))[0], s[1]), s[:2]) for op in ops\n    ]\n\n# a tuple of Callables. Each Callable must take exactly 2 float arguments\nfuncs = add, sub, mul, truediv\n# the 4 values as a list\ndata = [3.5, 4.2, 2.8, 6]\n\nprint(\n    *(f\"{f}({v[0]}, {v[1]}) = {r:.4f}\" for f, r, v in do_stuff(*data, ops=funcs)),\n    sep=\"\\n\",\n)",
    "add(2.8,3.5) = 6.3000\nsub(2.8,3.5) = -0.7000\nmul(2.8,3.5) = 9.8000\ntruediv(2.8,3.5) = 0.8000",
    "max([v for v in [100, 200, 300, 400] if v <= 250])",
    "class A: ...\nclass B: ...",
    "# strictListInference = false (default)\nl = [A(), A(), B(), B()]\nreveal_type(l)  # list[Unknown]",
    "# strictListInference = true\nl = [A(), A(), B(), B()]\nreveal_type(l)  # list[A | B]",
    "// pyrightconfig.json\n{\n  \"strictListInference\": true,\n}",
    "# pyproject.toml\n[tool.pyright]\nstrictListInference = true",
    "class WrapperModel(nn.Module):\n    def __init__(self, path):\n        super(WrapperModel, self).__init__()\n        self.model = torch.jit.load(path)\n        # Tell PyTorch to ignore this when saving\n        self._model = self.model\n        del self.model\n\n    def forward(self, x):\n        return self._model(x)",
    "@runtime_checkable\nclass SchemaBindable(Protocol):\n    # docstring omitted because it's long\n\n    def bind_to_schema(self, schema: GraphQLSchema) -> None:\n        \"\"\"Binds this `SchemaBindable` instance to the instance of GraphQL schema.\"\"\"",
    "class YourBindable(SchemaBindable):\n    def bind_to_schema(self, schema):\n        # implementation here",
    "for attr in cls.__protocol_attrs__:\n            try:\n                val = getattr_static(instance, attr)\n            except AttributeError:\n                break\n            # this attribute is set by @runtime_checkable:\n            if val is None and attr not in cls.__non_callable_proto_members__:\n                break\n        else:\n            return True\n\n        return False",
    "- LOOP P1 over all points\n   - LOOP P2 over all points > P1\n      - If P1,P2 satisfy any one of the 3 ways described above\n            - Add edge between P1 and P2.",
    "void cLawn::ZigZag()\n{\n    vPath.clear();\n    int vi = 0;\n    cxy sxy = locate( 0 );\n    double xs = sxy.x;\n    double ys = sxy.y;\n    vPath.emplace_back(xs, ys);\n    bool fdown = true;\n    bool zig = true;\n    while (true)\n    {\n        bool foundnext = false;\n        for (int adj : gd.g.adjacentOut(vi))\n        {\n            cxy txy = locate( adj );\n            double xt = txy.x;\n            double yt = txy.y;\n            if (zig)\n            {\n                if (ys == yt)\n                    foundnext = true;\n            }\n            else\n            {\n                if (xs == xt)\n                {\n                    if (fdown)\n                    {\n                        if (yt > ys)\n                            foundnext = true;\n                    }\n                    else\n                    {\n                        if (yt < ys)\n                            foundnext = true;\n                    }\n                }\n            }\n\n            if (foundnext)\n            {\n                auto it = std::find( vPath.begin(),vPath.end(),txy);\n                if( it != vPath.end()  )\n                    return;\n                vPath.emplace_back(xt, yt);\n                vi = adj;\n                xs = xt;\n                ys = yt;\n                break;\n            }\n        }\n        if (!foundnext)\n        {\n            if (fdown)\n            {\n                fdown = false;\n                zig = true;\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        zig = !zig;\n    }\n}",
    "# Multiprocessing module helpers to fix up the main module in\n# spawned subprocesses\ndef _fixup_main_from_name(mod_name):\n    # __main__.py files for packages, directories, zip archives, etc, run\n    # their \"main only\" code unconditionally, so we don't even try to\n    # populate anything in __main__, nor do we make any changes to\n    # __main__ attributes\n    current_main = sys.modules['__main__']\n    if mod_name == \"__main__\" or mod_name.endswith(\".__main__\"):\n        return\n\n    # If this process was forked, __main__ may already be populated\n    if getattr(current_main.__spec__, \"name\", None) == mod_name:\n        return\n\n    # Otherwise, __main__ may contain some non-main code where we need to\n    # support unpickling it properly. We rerun it as __mp_main__ and make\n    # the normal __main__ an alias to that\n    old_main_modules.append(current_main)\n    main_module = types.ModuleType(\"__mp_main__\")\n    main_content = runpy.run_module(mod_name,\n                                    run_name=\"__mp_main__\",\n                                    alter_sys=True)\n    main_module.__dict__.update(main_content)\n    sys.modules['__main__'] = sys.modules['__mp_main__'] = main_module",
    "/mymodule\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 __main__.py \n\u251c\u2500\u2500 app.py\n\u2514\u2500\u2500 worker.py",
    "import sys\nimport mymodule.app\n\n__spec__.name = mymodule.app.__spec__.name\nsys.exit( mymodule.app.main() )",
    "[__main__] [DEBUG]: I am main. I manage workers\n[__main__] [INFO]: I am main. I manage workers\n[__main__] [WARNING]: I am main. I manage workers\n[mymodule.worker] [DEBUG]: I am a worker. I do stuff\n[mymodule.worker] [INFO]: I am a worker. I do stuff\n[mymodule.worker] [ERROR]: I am a worker. I do stuff\n[mymodule.worker] [ERROR]: Here is my logger: <Logger mymodule.worker (DEBUG)>",
    "def _NO_OP(x: str) -> None:\n    pass\n\ndef download(on_progress: Callable[[str], None] | None):\n    data = requests.get(\"exampleurl.com\")\n    if on_progress is None:\n        on_progress = _NO_OP\n\n    for i in data.iter_content():\n        on_progress(i)",
    "from collections.abc import Callable\n\ndef normal_behaviour(*args):\n    '''\n    Implement here what always needs to be done\n    '''\n\ndef progress_wrapper(func, on_progress):\n    def with_progress(args):\n        on_progress(args)\n        return func(args)\n    if not on_progress:\n        return func\n    return with_progress\n\ndef download(on_progress: Callable | None=None):\n    data = requests.get('http://example.com')\n    for i in data.iter_content():\n        progress_wrapper(normal_behaviour, on_progress)(i)",
    "import pandas as pd\n\nfa = {\n    'year':['f2024','s2025'],\n    'week':[1,2,3,4,5],\n    'day':['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],\n    'class':[False,False,True,False,True,False,False],\n    'course':['SciComp'],\n    'students':[['tmuzzy','jsmith'],['Alice','Bob','Charlie']]\n}\nfm = [[0,0,4,4,0, (0, (0,1))],\n      [1,2,3,3,0, (1, (1,3))]]\n\nm = max([len(v) for v in fa.values()])\n\nfor k,v in fa.items():\n    if len(v) < m:\n        v.extend([None] * (m - len(v)))\n\ndata = pd.DataFrame.from_dict(fa)\n\nprint(data)\nprint(f\"{'-' * 80}\")\n\nout = []\nfor d in range(len(fm)):\n    out.append({})\n    for i, k in enumerate(fa.keys()):\n        dim = fm[d][i]\n        if k == 'students':\n            out[-1][k]= data[k].iloc[dim[0]][dim[1][0]:dim[1][1]]\n        else:\n            out[-1][k]= data[k].iloc[dim]\n\nfor s in out:\n    print(\"In {course} during {year}, in week {week} on {day} is there class: {class} ({students})\".format(**s))\n    #print(s)",
    "year  week  day  class   course               students\n0  f2024   1.0  Sun  False  SciComp       [tmuzzy, jsmith]\n1  s2025   2.0  Mon  False     None  [Alice, Bob, Charlie]\n2   None   3.0  Tue   True     None                   None\n3   None   4.0  Wed  False     None                   None\n4   None   5.0  Thu   True     None                   None\n5   None   NaN  Fri  False     None                   None\n6   None   NaN  Sat  False     None                   None\n--------------------------------------------------------------------------------\nIn SciComp during f2024, in week 1.0 on Thu is there class: True (['tmuzzy'])\nIn SciComp during s2025, in week 3.0 on Wed is there class: False (['Bob', 'Charlie'])",
    "'''\nGenerate list of dictionaries for multidimensional arrays of inputs\n\nINPUTS:\n   setkey_iterable: dictionary of format outlined below\n   delim: delimiter to split setting & name  (default '.')\n   print_array: prints all output dicts\n   print_debug: prints dimension information\n   \nOUTPUTS:\n   out_list: list of dictionaries of for each permutation \n   [{key0:iteration0,key1:iteration0},\n    {key0:iteration1,key1:iteration1}]\n   \nThe values, called \"iterables\" must be a iterable object (ie: range, list,\n   tuple, string) or they will be wrapped in a list (ie: 42 => [42])\n   the cartesian product of the iterable is generated, so the output\n   list will have values of one item from each list (see example)\n\nkeys, called \"setkeys\" are split on a delimiter (default '.')\nrightmost [-1] after split is the \"name\", which is the key of the output \n   dicts. name(s) are converted to strings before output. \n   ie: 1:'abc' => '1':'a' in output iterations\n   this is for convenience, mixing 1 and '1' is a bad idea.\nleftmost [0] after the split is the \"dimension\" of the cartesian product;\n   if two setkeys share a dimension, the outputs will be called from the \n   same index if the iterable. ie 'same.let' and 'same.num'\nif there is a middle value [1], that iterable is looped through only when \n   the dimension's index is equal to that value. ie: when '1' is at \n   index 0 (value = 'a'), the name 'greek', loops through 'alpha' and '\u03b1'\nif there are more than 2 delimiters, [2:-1] is ignored. With the current\n   implementation, only 1-deep \"sub-iterations\" are possible, but\n   more complicated inputs are allowed with the syntax, but code changes\n   would be needed to make this N-deep\n   \noutput order is determined by sorting dimension strings, not load order\n\nInput example:\nsetkey_iterable = {1:'abc','1.0.greek':['alpha','\u03b1'],'1.1.greek':['beta'],\n                'n.N':42, 'R':range(3),\n                'same.let':['i','j','k'],'same.num':['e1','e2','e3']}\n\nOutput example (35 total)\n{'1': 'a', 'greek': 'alpha', 'R': 0, 'N': 42, 'let': 'i', 'num': 'e1'}\n{'1': 'a', 'greek': 'alpha', 'R': 0, 'N': 42, 'let': 'j', 'num': 'e2'}\n...\n{'1': 'a', 'greek': 'alpha', 'R': 2, 'N': 42, 'let': 'k', 'num': 'e3'}\n{'1': 'a', 'greek': '\u03b1', 'R': 0, 'N': 42, 'let': 'i', 'num': 'e1'}\n...\n{'1': 'b', 'greek': 'beta', 'R': 2, 'N': 42, 'let': 'k', 'num': 'e3'}\n{'1': 'c', 'R': 0, 'N': 42, 'let': 'i', 'num': 'e1'} \n\nSimilar to:\nhttps://stackoverflow.com/questions/5228158/cartesian-product-of-a-dictionary-of-lists\n'''",
    "import itertools as it\ndef gen_array(setkey_iterable, delim = '.', print_array = False, print_debug = False):\nif type(setkey_iterable) == str:\n        ## could use eval() but no no\n        sys.exit('Convert this to a dict first')\n\n    dim_key = {}\n    if print_debug:\n        print('input parse:')\n        print('setting | key | iterable')\n        \n    in_copy = setkey_iterable.copy() # can't modify during loop, so edit original\n    for sk, iterable in in_copy.items():\n        \n        if type(sk) != str: # convert setkey type\n            setkey_iterable[str(sk)] = setkey_iterable.pop(sk)\n            sk = str(sk)\n            ## ie {1:['a']} => {'1':['a']}\n            \n        if not hasattr(iterable, '__iter__'): # convert iterable type\n            iterable = [iterable] # convert single non iterable to iterable\n            setkey_iterable[sk] = iterable\n            ## ie 1 => [1]\n        \n        s_k = str(sk).split(delim) # this is repeated later\n        key = s_k[-1] # last section is name\n        \n        if len(s_k) == 1:\n            setting = s_k # same name and dim\n        elif len(s_k) == 2:    \n            setting = [s_k[0]] # 1st is dim\n        else:\n            setting = [s_k[0], int(s_k[1])] # dim, index be called on\n         \n        if print_debug:\n            print(setting, key, iterable)\n        if setting[0] in dim_key:\n            dim_key[setting[0]].append((setting, sk))\n        else:\n            dim_key[setting[0]] = [(setting, sk)]\n\n    dim_iterations = {}\n    if print_debug:\n        print()\n        print('dimensions:')\n        print('dim | setkey(s)')\n        print('main_keys | ind_key')\n        print()\n    for dim, setkeys in sorted(dim_key.items()):\n        if print_debug:\n            print(dim, setkeys)\n            \n        main_keys = [] # list of non call sk\n        ind_key = {} # dict of call:sk\n        for setkey in setkeys:\n\n            if len(setkey[0]) == 1: # setting\n                main_keys.append(setkey[1]) # sk\n            else:\n                if not setkey[0][1] in ind_key: # index\n                    ind_key[setkey[0][1]] = []\n                ind_key[setkey[0][1]].append(setkey[1])\n            \n        dim_iterations[dim] = []\n        if print_debug:\n            print(main_keys, ind_key)\n            print()\n        main_iterations = zip(*(setkey_iterable[key] for key in main_keys))\n        ## non single  iteration values\n        \n        for ii, iteration in enumerate(main_iterations): # loop through those\n            keys = [key.split(delim)[-1] for key in main_keys] # save name\n            iteration = dict(zip(keys,iteration)) # make name:iteration dict\n            \n            if ii in ind_key: # if index\n                single_iterations = zip(*(setkey_iterable[key] for key in ind_key[ii]))\n                # get single iterations\n                for jj, single in enumerate(single_iterations):\n                    keys = [key.split(delim)[-1] for key in ind_key[ii]] # save name\n                    sub_iter = dict(zip(keys, single)) # make name:iteration dict for call index\n                    dim_iterations[dim].append({**iteration, **sub_iter})\n                    # merge and save dicts\n            else:\n                dim_iterations[dim].append(iteration) # save dict\n    \n    out_list = []\n    prod = it.product(*dim_iterations.values()) # cartesian product of each dimension's iterations\n    ## tuple of dict of each dim\n    if print_array:\n        print('Output cartesian product')\n    for dicts in prod: # Merge tuple into single dict\n        iteration = {}\n        for dir_dict in dicts:\n            iteration.update(dir_dict)\n        if print_array:\n            print(iteration)\n        out_list.append(iteration)\n\n    return out_list",
    "character = input('Enter a character')\nprint(character in d_n_a)",
    "is_not_dna = not d_n_a",
    "dna = {'A', 'T', 'C', 'G'} # dna is Set now\ngl = ['X', 'Y', 'A', 'T', '1', '^', 'C', 'G']\nres = [g in d_n_a for g in gl]\nprint(res)\n>> [False, False, True, True, False, False, True, True]",
    "import numpy as np\nimport matplotlib.pyplot as plt\n\n\nra = np.asarray([1.67484, 1.67485, 1.67485, 1.67486, 1.67486, \n                 1.67488, 1.67487, 1.67488, 1.67487, 1.67487]) \n\ndec = np.asarray([-0.92147, -0.92147, -0.92147, -0.92147, -0.92147, \n                  -0.92147, -0.92147, -0.92147, -0.92147, -0.92147]) \n\n\nrho = np.sqrt(ra**2 + dec**2) \ntheta = np.arctan2(dec, ra)  # instead of np.tan(dec / ra), see the other answer.\n\n\n# set scaling factor\nscalingfactor = 40\n\n# scaling up by arbitrary scaling factor\ntheta_scaled = (theta - np.min(theta)) / (np.max(theta) - np.min(theta)) * np.radians(scalingfactor)\n\n\nfig, ax = plt.subplots(figsize=(6, 6), subplot_kw={'projection': 'polar'})\n\nax.plot(theta_scaled, rho, '*-', color='y', label=f\"Scaled 1:{1/scalingfactor}\")\nax.set_ylim(1.91159, 1.91164)\n\n#check theta limits\nprint(np.degrees(min(theta)), np.degrees(max(theta)))\n\n#creating theta ticks\nticks = np.radians(np.linspace(0, scalingfactor, 5)) \nax.set_xticks(ticks) \n\n# setting theta labels explicitly\nscaled_labels = np.round(np.linspace(360+np.degrees(min(theta)), 360+np.degrees(max(theta)), len(ticks)), 4)\nax.set_xticklabels(scaled_labels) \n\nax.set_thetamin(-3)  \nax.set_thetamax(scalingfactor+1)  \n\nax.grid(True, linestyle=\"--\", alpha=0.5)\nax.legend()\n\nplt.show()",
    "import numpy as np\nimport matplotlib.pyplot as plt\n\nimport matplotlib\n\nimport pandas as pd\n\nprint('matplotlib version : ', matplotlib.__version__)\n\nfig = plt.figure()\n\nra = np.asarray([1.67484,1.67485,1.67485,1.67486,1.67486,1.67488,1.67487,1.67488,1.67487, 1.67487]) #radians\n\ndec = np.asarray([-0.92147,-0.92147,-0.92147,-0.92147,-0.92147,-0.92147,-0.92147, -0.92147,-0.92147, -0.92147]) #radians\n\nrho = np.sqrt(ra**2 + dec**2) # get rho from ra and dec\n\n#theta_or = np.tan(dec / ra) #get theta from ra and dec to keep original\n\ntheta_or = np.arctan2(dec , ra) ## changed as per comments , theta expressed correctly\n\n#theta = np.tan(dec / ra) as in the original question\n\n#theta expressed correctly:\ntheta = np.arctan2(dec, ra)\n\nprint('\\ntheta : ', theta)\nprint(theta*180/np.pi)\nprint(360+theta*180/np.pi)\n\n# theta = 360+theta*180/np.pi\n\n\nidx = None\nprint(enumerate(theta))\nfor i, value in enumerate(theta):\n    #print(i,value)\n    #print(theta[i] )\n    theta[i] = value + i*0.1\n    #print(i*0.1)\n    \n    idx = i\n\nprint('theta[idx] : ', theta[idx], idx)\nprint('rho : ', rho)\nprint('\\ntheta : ', theta)\n\nfig = plt.figure()\nax = fig.add_subplot(1,1,1,polar=True)\nax.plot(theta, rho,'*-',color='y')\nax.set_ylim(1.9114,1.9117)\n\n\nsrt = [-10+theta[0]*180/np.pi , 10+theta[idx]*180/np.pi]\n\nprint('\\nsrt : ', srt)\n\n\n\nax.set_thetamin(srt[0])\nax.set_thetamax(srt[1])\n\nticks = np.linspace(theta[0], theta[-1], len(theta))\nax.set_xticks(ticks)\n\n#ax.set_xticklabels([i*180/np.pi+360 for i in theta]) \nax.set_xticklabels([360 + i*180/np.pi for i in theta_or]) \n\nplt.show()",
    "import matplotlib.pyplot as plt\nplt.rcParams[\"font.family\"] = \"Arial\"",
    "def get_queryset(self):\n    # 1. Get the original queryset\n    queryset = super(OrderListView, self).get_queryset()\n\n    # 2. Filter the queryset\n    return queryset.filter(initiator=self.request.user)",
    "from django.views.generic import ListView\n\n\nclass MyListView(ListView):\n    model = MyModel\n\n    #    \ud83d\udd9f will ***not*** work\n    def get_queryset(self):\n        return self.queryset.filter(initiator=self.request.user)",
    "class ActiveItemsMixin:\n    def get_queryset(self):\n        return super().get_queryset().filter(active=True)",
    "class MyListView(ActiveItemsMixin, ListView):\n    # \u2026",
    "pip install ipykernel python -m ipykernel install --user --name=pytorch_env",
    "process.terminate()",
    "process.kill()",
    "process.terminate()\ntime.sleep(1)\nif process.poll() is None:\n    process.kill()",
    "import plotly.graph_objs as go\nfrom IPython.display import display\nimport ipywidgets as widgets\n\nclick_register_output = widgets.Output() # Add an ouput widget from 'Output widgets: leveraging Jupyter\u2019s display system' https://ipywidgets.readthedocs.io/en/latest/examples/Output%20Widget.html\n\nfig_test = go.FigureWidget([go.Bar(x=[\"A\", \"B\", \"C\"], y=[10, 20, 30])])\n\ndef handle_click(trace, points, state):\n    with click_register_output:\n        click_register_output.clear_output() # from 'Output widgets: leveraging Jupyter\u2019s display system' https://ipywidgets.readthedocs.io/en/latest/examples/Output%20Widget.html\n        print(\"Clicked bar indices:\", points.point_inds)\n        print('blah')\n\nfig_test.data[0].on_click(handle_click)\ndisplay(fig_test,click_register_output)",
    "\u2502my-fastapi-azure-function/\n|____function_app.py\n|____host.json\n|____local.settings.json\n\u251c\u2500\u2500\u2500WrapperFunction\n\u2502   \u2502   enums.py\n\u2502   \u2502   settings.py\n\u2502   \u2502   __init__.py\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500\u2500routers\n\u2502   \u2502       router1.py\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500\u2500utils\n\u2502   \u2502   \u2502   __init__.py\n\u2502   \u2502   \u2502\n\u2502   \u2502   \u2514\u2500\u2500\u2500azure\n\u2502   \u2502           fast_api_auth.py\n\u2502   \u2502           __init__.py",
    "import os\nfrom typing import Union\nfrom fastapi import FastAPI, Security\nimport uvicorn\nfrom WrapperFunction.utils.azure.fast_api_auth import FastAPIAuth, FastAPIAuthOptions\nfrom WrapperFunction.routers.router1 import router1_router\nfrom WrapperFunction.enums import fast_api_metadata\nfrom WrapperFunction.settings import settings\nimport logging\nfrom azure.identity import DefaultAzureCredential\n\nprint(\"TEST1\")\n\nfast_api_options = FastAPIAuthOptions(\n    title=\"DNA PORT API\",\n    tenant_id=settings.TENANT_ID,\n    openapi_tags=fast_api_metadata,\n    client_id=settings.APP_CLIENT_ID,\n\n)\n\nfast_api_auth = FastAPIAuth(fast_api_options)\napp = fast_api_auth.get_fast_api_app()\n\napp.include_router(\n    router1_router,\n    prefix=\"/api/router1\",\n    dependencies=[Security(fast_api_auth.azure_scheme)],\n\n    tags=[\"vessels\"]\n)\n\n@app.get(\"/log\", dependencies=[Security(fast_api_auth.azure_scheme)])\nasync def root():\n    return {\"whoIsTheBest\": \"!!\"}\n\n@app.get(\"/\", dependencies=[Security(fast_api_auth.azure_scheme)])\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/settings\")\ndef read_settings():\n    return settings\n@app.get(\"/token_test\")\ndef token_test(token: str = Security(fast_api_auth.azure_scheme)):\n    return {\"message\": \"Token is valid\", \"token\": token}\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\nif __name__ == '__main__':\n    uvicorn.run(\n        'main:app',\n        host=\"0.0.0.0\",\n        port=8000,\n        reload=True,\n        log_level=\"info\"\n    )",
    "from fastapi import Security\nfrom azure.identity import DefaultAzureCredential\nfrom fastapi.security import OAuth2PasswordBearer\n\nclass FastAPIAuth:\n    def __init__(self, options):\n        self.options = options\n        self.azure_scheme = OAuth2PasswordBearer(tokenUrl=\"token\")\n\n    def get_auth_scheme(self):\n        return DefaultAzureCredential()\n\n    def get_fast_api_app(self):\n        from fastapi import FastAPI\n        app = FastAPI(title=self.options.title)\n        return app\n\nclass FastAPIAuthOptions:\n    def __init__(self, title, tenant_id, openapi_tags, client_id):\n        self.title = title\n        self.tenant_id = tenant_id\n        self.openapi_tags = openapi_tags\n        self.client_id = client_id",
    "from fastapi import APIRouter\n\nrouter1_router = APIRouter()\n\n@router1_router.get(\"/\")\ndef get_vessels():\n    return {\"vessel\": \"data\"}",
    "import os\n\nclass FastAPISettings:\n\n    APP_CLIENT_ID =\"Client_ID\",\n    TENANT_ID=\"Tenant_ID\"\n\nfastapi_settings = FastAPISettings()\nsettings = fastapi_settings",
    "fast_api_metadata = [\n    {\"name\": \"vessels\", \"description\": \"Vessel related operations\"}\n]",
    "import azure.functions as func\nfrom WrapperFunction import app as fastapi_app\n\napp = func.AsgiFunctionApp(app=fastapi_app, http_auth_level=func.AuthLevel.ANONYMOUS)",
    "from fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=['*'],\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n\n@app.get(\"/\")\nasync def main():\n    return {\"message\": \"Hello World\"}",
    "import pandas as pd\n\nnum_cols = 3\nn_iter = 3\nextra_column = [\"product\"]\ncolumns = [chr(i+65) for i in range(num_cols)]\nindex= range(n_iter)\n\ndf = pd.DataFrame(index=index, columns=extra_column + columns)\n\n  product    A    B    C\n0     NaN  NaN  NaN  NaN\n1     NaN  NaN  NaN  NaN\n2     NaN  NaN  NaN  NaN",
    "df._mgr\n\nBlockManager\nItems: Index(['product', 'A', 'B', 'C'], dtype='object')\nAxis 1: RangeIndex(start=0, stop=3, step=1)\nNumpyBlock: slice(0, 4, 1), 4 x 3, dtype: object    # all cols",
    "df[\"product\"] = \"x\"\nprint(df._mgr)\n\nBlockManager\nItems: Index(['product', 'A', 'B', 'C'], dtype='object')\nAxis 1: RangeIndex(start=0, stop=3, step=1)\nNumpyBlock: slice(1, 4, 1), 3 x 3, dtype: object    # cols \"A, \"B\", \"C\" \nNumpyBlock: slice(0, 1, 1), 1 x 3, dtype: object    # col \"product\"",
    "df.loc[:, \"new_col\"] = \"x\"\nprint(df._mgr)\n\nBlockManager\nItems: Index(['product', 'A', 'B', 'C', 'new_col'], dtype='object')\nAxis 1: RangeIndex(start=0, stop=3, step=1)\nNumpyBlock: slice(1, 4, 1), 3 x 3, dtype: object    # cols \"A, \"B\", \"C\"\nNumpyBlock: slice(0, 1, 1), 1 x 3, dtype: object    # col \"product\"\nNumpyBlock: slice(4, 5, 1), 1 x 3, dtype: object    # col \"new_col\"",
    "df = pd.DataFrame(index = index, columns=extra_column + columns)\ndf.loc[index,\"product\"] = \"x\"\n\nprint(df._mgr)\n\nBlockManager\nItems: Index(['product', 'A', 'B', 'C'], dtype='object')\nAxis 1: RangeIndex(start=0, stop=3, step=1)\nNumpyBlock: slice(0, 4, 1), 4 x 3, dtype: object    # \"product\" still here",
    "# adding: `df = df.copy()`\nstmt1 =\"\"\"\ndf = pd.DataFrame(index = index, columns=extra_column + columns)\ndf[\"product\"] = \"x\"\ndf = df.copy()\nfor i in index:\n    df.loc[i,columns] = 0\n\"\"\"\n\nprint(f\" stmt1 takes { timeit.timeit(setup= setup_stmt, stmt= stmt1,  number=10):2.2f} seconds\" )\nprint(f\" stmt3 takes { timeit.timeit(setup= setup_stmt, stmt= stmt3,  number=10):2.2f} seconds\" )",
    "stmt1 takes 1.00 seconds\n stmt3 takes 0.99 seconds",
    "df = pd.DataFrame({\"product\": [1]})\ntype(df.product)\n\nmethod",
    "df.product = \"x\"\ntype(df.product)\n\nstr",
    "product\n0        1      # nothing changed",
    "import random\nlist1 = [[1,2,3,4],[5,6,7,8]] # 2 d list instead of tuple which is immutable\nfor i in range(len(list1)):\n        print(\"preshuff\",list1[i])\n        random.shuffle(list1[i]) # shuffled in place\n        print(\"postshuff\",list1[i])",
    "import random\n\ntuple1 = ([1234], [5678])\n    \ndef myshuffle(i: list[int]) -> list[int]:\n    result = []\n    for k in map(lambda m: list(str(m)), i):\n        random.shuffle(k)\n        result.append(int(\"\".join(k)))\n    return result\n\nresult = ()\n\nfor e in tuple1:\n    result += (myshuffle(e),)\n\nprint(result)",
    "([2341], [7856])",
    "python.exe -m pip install --upgrade pip",
    "python get-pip.py --user",
    "https://login.microsoftonline.com/<tenant_id>/oauth2/v2.0/authorize?  \nclient_id=<client_id>\n&response_type=code  \n&redirect_uri=https://jwt.ms\n&response_mode=query  \n&scope=https://analysis.windows.net/powerbi/api/.default\n&state=12345",
    "import msal\nimport requests\nimport json\n\n# Configuration\nCLIENT_ID = \"<application-id>\"\nCLIENT_SECRET = \"<client-secret>\"\nAUTHORITY = \"https://login.microsoftonline.com/<your-tenant-id>\"\nREDIRECT_URI = \"https://jwt.ms\"  # Use redirect URI you configured in App Registration\nSCOPE = [\"https://api.fabric.microsoft.com/.default\"]  # Scopes for Microsoft Fabric API\n\n# Initialize the MSAL ConfidentialClientApplication\napp = msal.ConfidentialClientApplication(\n    CLIENT_ID,\n    authority=AUTHORITY,\n    client_credential=CLIENT_SECRET\n)\n\nauthorization_code = input(\"Enter the authorization code you received after consent: \")\n\n# Step 2: Exchange Authorization Code for Access Token\nresult = app.acquire_token_by_authorization_code(\n    authorization_code,\n    SCOPE,\n    redirect_uri=REDIRECT_URI\n)\n\nif \"access_token\" in result:\n    print(\"Access token obtained successfully.\")\n    access_token = result[\"access_token\"]\n\n    # Step 3: Make an API request to list all workspaces\n    api_url = \"https://api.fabric.microsoft.com/v1/workspaces\"  # Adjust endpoint to list all workspaces\n\n    headers = {\n        \"Authorization\": f\"Bearer {access_token}\"\n    }\n\n    response = requests.get(api_url, headers=headers)\n\n    if response.status_code == 200:\n        # Parse the JSON response\n        workspaces = response.json()\n        print(\"List of Workspaces:\")\n        print(json.dumps(workspaces, indent=2))  # Pretty print the list of workspaces\n    else:\n        print(f\"Failed to retrieve workspaces. Status code: {response.status_code}\")\n        print(\"Response:\", response.text)\nelse:\n    print(\"Error acquiring token.\")\n    print(result.get(\"error_description\"))",
    "import requests\nimport msal\n\nTENANT_ID = \"<tenant-id>\"\nCLIENT_ID = \"<application-id>\"\nCLIENT_SECRET = \"<client-secret>\"\nAUTHORITY = f\"https://login.microsoftonline.com/{TENANT_ID}\"\nSCOPES = [\"https://analysis.windows.net/powerbi/api/.default\"]\n\napp = msal.ConfidentialClientApplication(\n    CLIENT_ID, authority=AUTHORITY, client_credential=CLIENT_SECRET\n)\n\ntoken_response = app.acquire_token_for_client(scopes=SCOPES)\n\nif \"access_token\" in token_response:\n    access_token = token_response[\"access_token\"]\n    print(\" Token obtained.\")\n\n    headers = {\n        \"Authorization\": f\"Bearer {access_token}\",\n        \"Content-Type\": \"application/json\"\n    }\n\n    # Power BI API for listing workspaces\n    url = \"https://api.fabric.microsoft.com/v1/workspaces\"\n    response = requests.get(url, headers=headers)\n\n    if response.status_code == 200:\n        print(\" Workspaces:\", response.json())\n    else:\n        print(f\" Error: {response.status_code} - {response.text}\")\n\nelse:\n    print(\" Error getting token:\", token_response.get(\"error_description\"))",
    "y_limits = ax.get_ylim()\nnum_rows = len(ax.get_yticklabels())\n\nfor i in range(num_rows):\n    if i % 2 == 0:  # Even rows (starting from 0)\n        ax.axhspan(i - 0.5, i + 0.5, color=\"lightgrey\", alpha=0.5)  # Grey shading\n    else:  # Odd rows\n        ax.axhspan(i - 0.5, i + 0.5, color=\"white\", alpha=0.5)  # White shading",
    "import arviz as az\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nparam1 = np.random.randn(100)\nparam2 = np.random.randn(100)\nparam3 = np.random.randn(100)\nparam4 = np.random.randn(100)\nparam5 = np.random.randn(100)\n\ninference_data = az.from_dict(posterior={\n    \"param1\": param1,\n    \"param2\": param2,\n    \"param3\": param3,\n    \"param4\": param4,\n    \"param5\": param5\n})\n\nfig, ax = plt.subplots()\naz.plot_forest(inference_data, ax=ax)\n\ny_ticks = ax.get_yticks()\n \n# to calculate where to color / size of plot\ny_min, y_max = ax.get_ylim()  \ntotal_height = y_max - y_min  \nnum_rows = len(y_ticks)  \nrow_height = total_height / num_rows\n\n# even odd alternate\nfor i, y in enumerate(y_ticks):\n   \n    bottom = y - row_height / 2\n    top = y + row_height / 2\n\n    if i % 2 == 0:  \n        ax.axhspan(bottom, top, color='yellow', alpha=0.2, zorder=0)\n    else:  \n        ax.axhspan(bottom, top, color='red', alpha=0.2, zorder=0)\n\nax.set_axisbelow(True)\nplt.show()",
    "if i % 2 != 0:\n    axes[0].axhspan(bottom, top, color='lightgrey', alpha=0.2, zorder=-1)",
    "non_centered_data = az.load_arviz_data('non_centered_eight')\ncentered_data = az.load_arviz_data('centered_eight')\naxes = az.plot_forest([non_centered_data, centered_data],\n                           model_names = [\"non centered eight\", \"centered eight\"],\n                           kind='forestplot',\n                           var_names=[\"^the\"],\n                           filter_vars=\"regex\",\n                           combined=True,\n                           figsize=(9, 7))\naxes[0].set_title('Estimated theta for 8 schools models')\n\n# remove the grey background\nfor ax in axes:\n    for i, patch in enumerate(ax.patches):\n        patch.set_facecolor(\"none\")\n        patch.set_edgecolor(\"none\")\n\n# now repaint the stripes as proposed by Onuralp Arslan\ny_ticks = axes[0].get_yticks()\n \n# to calculate where to color / size of plot\ny_min, y_max = ax.get_ylim()  \ntotal_height = y_max - y_min  \nnum_rows = len(y_ticks)  \nrow_height = total_height / num_rows\n\n# even odd alternate\nfor i, y in enumerate(y_ticks):\n    bottom = y - row_height / 2\n    top = y + row_height / 2\n\n    if i % 2 == 0:\n        axes[0].axhspan(bottom, top, color='white', alpha=1, zorder=0)\n    else:  \n        axes[0].axhspan(bottom, top, color='lightgrey', alpha=0.2, zorder=-1)",
    "tf.config.run_functions_eagerly(True)",
    "model.add(LSTM(128, return_sequences=True, mask_zero=True, kernel_regularizer=l2(0.001), kernel_initializer=GlorotUniform(), input_shape=(X_train.shape[1], X_train.shape[2])))\nmodel.add(LayerNormalization())\nmodel.add(Dropout(0.1))\nmodel.add(LSTM(256, return_sequences=True, mask_zero=True, kernel_regularizer=l2(0.001)))\nmodel.add(Dropout(0.1))\nmodel.add(TimeDistributed(Dense(y_train.shape[2], kernel_regularizer=l2(0.001))))",
    "fo.SetOperationFlags(\n        shellcon.FOF_NOCONFIRMATION |  # Suppress confirmation dialogs\n        shellcon.FOF_SILENT |  # Suppress UI\n        shellcon.FOF_NOERRORUI |  # Suppress error dialogs\n        shellcon.FOF_NOCONFIRMMKDIR  # Create directories automatically\n    )",
    "try:\n        # do copying\n    except pythoncom.com_error as e:\n        # when error happens",
    "from qiskit import QuantumCircuit\nfrom qiskit_aer import Aer\nfrom qiskit.compiler import transpile\nfrom qiskit.visualization import plot_histogram\nfrom matplotlib import pyplot as plt\n\n\nfig = plt.figure(figsize=(10, 10))\nax = plt.subplot(1, 2, 1)\nqc_h = QuantumCircuit(1, 1, name='qc')\nqc_h.h(0)\nqc_h.measure(0, 0)\nqc_h.draw('mpl', ax=ax)\n\nax = plt.subplot(1, 2, 2)\nsimulator_h = Aer.get_backend('qasm_simulator')\ntranspiled_circuit_h = transpile(qc_h, simulator_h)\njob_h = simulator_h.run(transpiled_circuit_h, shots=1024)\nresult_h = job_h.result()\ncounts_h = result_h.get_counts(qc_h)\n\nplot_histogram(counts_h, ax=ax)\nplt.show()",
    "df1['bool_col'] = df1['bool_col'] == 'True'",
    "from thefuzz import process\n\ndef to_bool(s, threshold=60):\n    bools   = [True, False]\n    choices = list(map(str, bools))\n    match, score = process.extractOne(s, choices)\n    d = dict(zip(choices, bools))\n    if score > threshold:\n        return d[match]\n\ndf['bool'] = df['bool_col'].map(to_bool)",
    "bool_col  foo   bool\n0     True    1   True\n1    Flase    2  False\n2    False    3  False\n3     True    4   True\n4     ture    5   True\n5   banana    6   None",
    "app.config['JWT_ACCESS_TOKEN_EXPIRES'] = timedelta(days=7)",
    "from flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity, get_jwt",
    "import concurrent.futures\nimport time\nimport itertools\n\ndef example_task(n):\n    print(f\"Task {n} started.\")\n    time.sleep(n)  # Simulate work\n    print(f\"Task {n} completed.\")\n    return n\n\ndef main():\n    max_threads = 5\n    total_tasks = 20  # Total number of tasks you want to process\n    task_counter = itertools.count(1)  # Infinite counter for task numbers\n\n    with concurrent.futures.ThreadPoolExecutor(max_workers=max_threads) as executor:\n        futures = {}\n\n        # Submit initial batch of tasks\n        for _ in range(max_threads):\n            task_id = next(task_counter)\n            futures[executor.submit(example_task, task_id)] = task_id\n\n        # Process tasks dynamically\n        while futures:\n            done, _ = concurrent.futures.wait(futures, return_when=concurrent.futures.FIRST_COMPLETED)\n\n            for future in done:\n                task_id = futures.pop(future)  # Remove completed task\n                try:\n                    result = future.result()\n                    print(f\"Result of task {result}\")\n\n                    # Submit a new task if we haven't reached the total task limit\n                    if task_id < total_tasks:\n                        new_task_id = next(task_counter)\n                        futures[executor.submit(example_task, new_task_id)] = new_task_id\n                    else:\n                        print(\"FINISHING\")\n                        break\n\n                except Exception as e:\n                    print(f\"Task {task_id} failed: {e}\")\n\nif __name__ == \"__main__\":\n    main()",
    "pip install matplotlib==3.8",
    "pip install matplotlib==3.6.3",
    "import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib\n\nX = np.arange(-5, 5, 0.25)\nY = np.arange(-5, 5, 0.25)\nX, Y = np.meshgrid(X, Y)\nR = np.sqrt(X**2 + Y**2)\nZ = np.sin(R)\nr = 0.0001 # scale z values \n\nfig, ax = plt.subplots(subplot_kw={\"projection\": \"3d\"})\n\n# Plot the surface.\nsurf = ax.plot_surface(X, Y, r*Z, cmap=matplotlib.cm.coolwarm,\n                       linewidth=0, antialiased=False)\n\n# fix the z-axis offset positioning \nax.zaxis.offsetText._transform = ax.zaxis.axes.transData\n\nplt.show()",
    "import requests\n\nurl = \"https://api.example.com/endpoint\"\nheaders = {\n    \"Authorization\": \"Bearer YOUR_TOKEN_HERE\"\n}\n\nresponse = requests.get(url, headers=headers)",
    "conda install \\\n  -c conda-forge \\\n  --name rapids-24.12 \\\n  ta-lib",
    "b = int.to_bytes(100, 2, 'little')\nformatted = ''.join(f'\\\\x{byte:02x}' for byte in b)\nprint(formatted)",
    "b = int.to_bytes(100, 2, 'little')\nprint(b.hex())",
    "import streamlit as st\nimport plotly.express as px\nimport pandas as pd\n\nst.title(\"Custom Bubble Chart with Negative Value Highlighting\")\n\ndata = {'x': [1.5, 1.6, -1.2, -2.0, 2.3, -3.5],\n        'y': [21, 16, 46, 30, 10, 55],\n        'circle-size': [10, 5, 6, 8, 12, 9]}\n\ndf = pd.DataFrame(data)\n\ndf[\"color\"] = df[\"x\"].apply(lambda val: \"red\" if val < 0 else \"blue\")\n\nst.dataframe(df)\n\nfig = px.scatter(df, x=\"x\", y=\"y\", \n                 size=\"circle-size\",\n                 color=\"color\",\n                 color_discrete_map={\"red\": \"red\", \"blue\": \"blue\"},\n                 title=\"Bubble Chart (Red = Negative X, Blue = Positive X)\")\n\nst.plotly_chart(fig)",
    "def sdataclass(cls=None,/, **kwargs):\n    if cls is None:\n        return lambda cls: sdataclass(cls, **kwargs)\n    dataclassdeco = dataclass(init=False, **kwargs)\n    cls.__annotations__ =  dict(cls._fields_)\n    return dataclassdeco(cls)\n\n@sdataclass\nclass S(ctypes.Structure):\n    _fields_ = [(\"field1\", ctypes.c_uint8),]\n    _pack_ = 1",
    "import ctypes\nfrom dataclasses import fields, dataclass\n\ndef sdataclass(cls=None,/, **kwargs):\n    if cls is None:\n        return lambda cls: sdataclass(cls, **kwargs)\n    # Allow the pack information to be passed\n    # in the decorator:\n    pack = kwargs.pop(\"pack\", True)\n    dataclassdeco = dataclass(init=False, **kwargs)\n    cls = dataclassdeco(cls)\n    cls._fields_ = [(field.name, field.type) for field in fields(cls)]\n    cls._pack_ = pack\n    return cls\n\n...\n\n@sdataclass\nclass S(ctypes.Structure):\n    field1: ctypes.c_uint8\n    field2: ctypes.c_uint16",
    "import ctypes as ct\n\n# Base class to add __repr__ support to ctypes Structure.\nclass RStructure(ct.Structure):\n    def __repr__(self):\n        # Name of class instance\n        name = self.__class__.__name__\n        # collect _fields_ from base classes and join them\n        # as comma-separated \"param=value\"\n        args = ', '.join([f'{p}={getattr(self, p)!r}'\n                             for cls in reversed(self.__class__.mro()) if hasattr(cls, '_fields_')\n                             for p, _ in cls._fields_ if not p.startswith('_')])\n        return f'{name}({args})'\n\nclass MyClass(RStructure):\n    _pack_ = 1\n    _fields_ = (('field1', ct.c_int32),\n                ('field2', ct.c_int16))\n\nclass MyClass2(MyClass):\n    _pack_ = 1\n    _fields_ = (('field3', ct.c_int32),\n                ('field4', ct.c_int16))\n\nprint(ct.sizeof(MyClass2))\ninst = MyClass2(42, 43, 44, 45)\nprint(inst)",
    "12\nMyClass2(field1=42, field2=43, field3=44, field4=45)",
    "for element in collection_elements:\nif element.Name == \"Grafana\":\n    password_encrypted = element.model_extra[\"data\"][\"password\"]\n    password_decrypted = decrypt(password_encrypted, orga.key())\n    print(password_decrypted)",
    "command = [\"lilypond\", \"--version\"]\nproc = subprocess.run(command, stdout=subprocess.PIPE)",
    "import polars as pl\n\ndf = pl.LazyFrame({\n    \"a\": [1, 2, 3],\n    \"b\": [4, 5, 6],\n})\n\nother = pl.LazyFrame({\n    \"c\": [9, 10, 11],\n    \"d\": [12, 13, 14],\n    \"e\": [15, 16, 17],\n})\n\nresult = pl.concat((df, other.select(\"c\", \"d\")), how=\"horizontal\")",
    "shape: (3, 4)\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 a   \u2506 b   \u2506 c   \u2506 d   \u2502\n\u2502 --- \u2506 --- \u2506 --- \u2506 --- \u2502\n\u2502 i64 \u2506 i64 \u2506 i64 \u2506 i64 \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 1   \u2506 4   \u2506 9   \u2506 12  \u2502\n\u2502 2   \u2506 5   \u2506 10  \u2506 13  \u2502\n\u2502 3   \u2506 6   \u2506 11  \u2506 14  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518",
    "lf1.join(lf2, on=\"your_index_column\")",
    "lf1.with_row_index().join(lf2.with_row_index(), on=\"index\")",
    "lf1.with_columns(lf2.collect())",
    "import tkinter\nfrom tkinter import *\nfrom PIL import ImageTk, Image\nroot=Tk()\nroot.title(\"To-Do-List\")\nroot.geometry(\"400x600+400+100\")\nroot.resizable(width=False, height=False)\ntask_list=[]\nimage1=ImageTk.PhotoImage(Image.open(\"image/top.png\").resize((400,600)))\nroot.iconbitmap(\"image/tick.png\")\nimagelabel=Label(root,image=image1)\ninfolabel=Label(root, text=\"To-Do-List\",font=\"Helvetica 12 bold\")\n\nimagelabel.place(x=0, y=0)\ninfolabel.pack()\n\nroot.mainloop()",
    "import tkinter as tk\nfrom PIL import ImageTk, Image\n\nroot = tk.Tk()\nroot.title(\"To-Do-List\")\nroot.geometry(\"400x600+400+100\")\nroot.resizable(width=False, height=False)\n\n#root.tk.call(\"wm\", \"iconphoto\", root._w, tk.PhotoImage(file=\"p2.png\"))\ntask_list=[]\nimage1=ImageTk.PhotoImage(Image.open(\"p2.png\").resize((400,600)))\nroot.tk.call(\"wm\", \"iconphoto\", root._w, tk.PhotoImage(file=\"p2.png\"))\nimagelabel=tk.Label(root,image=image1)\ninfolabel=tk.Label(root, text=\"To-Do-List\",font=\"Helvetica 12 bold\")\n\nimagelabel.place(x=0, y=0)\ninfolabel.pack()\n\nroot.mainloop()",
    "def _add_to_bulk(self, bulkobj: _AgnosticBulk) -> None:\n        \"\"\"Add this operation to the _AsyncBulk/_Bulk instance `bulkobj`.\"\"\"\n        bulkobj.add_update(\n            self._filter,\n            self._doc,\n            False,\n            bool(self._upsert),\n            collation=validate_collation_or_none(self._collation),\n            array_filters=self._array_filters,\n            hint=self._hint,\n        )",
    "def _add_to_bulk(self, bulkobj: _AgnosticBulk) -> None:\n        \"\"\"Add this operation to the _AsyncBulk/_Bulk instance `bulkobj`.\"\"\"\n        bulkobj.add_update(\n            self._filter,\n            self._doc,\n            False,\n            bool(self._upsert),\n            collation=validate_collation_or_none(self._collation),\n            array_filters=self._array_filters,\n            hint=self._hint,\n            sort=self._sort,\n        )",
    "def call_repeatedly(interval, func, *args, **kwargs):\n    def loop():\n        while True:\n            func(*args, **kwargs)\n            time.sleep(interval)\n\n    threading.Thread(target=loop, daemon=True).start()",
    "'Delivery has failed to these recipients or groups: userid@userid.com Your message wasn\u2019t delivered because the recipient\u2019s email provider rejected it. Remote server returned '550 5.7.708 Service unavailable. Access denied, traffic not accepted from this IP. For more information please go to http://go.microsoft.com/fwlink/?LinkId=526653 AS(7230)",
    "return typing.cast(T, str_transform(obj))",
    "@overload\ndef take_any_transform_only_str(obj: S) -> S:\n    # Using `S` over `str` in the overload means mypy will\n    # preserve the type of subclasses of `str`\n    pass\n@overload\ndef take_any_transform_only_str(obj: T) -> T: pass\ndef take_any_transform_only_str(obj: T | str) -> T | str:\n    # `| str` is an escape hatch to allow returning `str` when the type\n    # of` obj` has been narrowed to `str`. mypy would complain even if\n    # the return type was `S`, as `S` is not the same as `str`\n    if isinstance(obj, str):\n        return str_transform(obj)\n    else:\n        return obj",
    "class MyStr(str):\n    pass\n\nreveal_type(take_any_transform_only_str(123))\n# note: Revealed type is \"int\"\nreveal_type(take_any_transform_only_str(''))\n# note: Revealed type is \"str\"\n\n# Shows that types which are subclasses of str are preserverd\nreveal_type(take_any_transform_only_str(MyStr()))\n# note: Revealed type is \"MyStr\"\n\n# Also shows that complex types are preserved and allowed\nx: int | str = ''\nreveal_type(take_any_transform_only_str(x))\n# note: Revealed type is \"Union[int, str]\"",
    "import telethon\nprint(telethon.__version__)",
    "byte[] imageBytes = File.ReadAllBytes(imagePath);\nvar binaryImage BinaryData.FromBytes(imageBytes);",
    "var chatImageContent = ChatMessageContentPart.CreateImagePart(binaryImage, \"image/png\");\n var chatTextContent = ChatMessageContentPart.CreateTextPart(\"What is in this image?\");\n\n var userChatMessage = new UserChatMessage(chatTextContent, chatImageContent);\n\n var chatMessages = new List<ChatMessage>\n {\n    new SystemChatMessage(\"Analyze the uploaded image.\"),\n    new UserChatMessage(chatTextContent, chatImageContent)\n };\n\nvar chatClient = client.GetChatClient(deployment);\n\nvar response = await chatClient.CompleteChatAsync(chatMessages, chatRequest);\n\nvar content = response.Value.Content[0].Text;",
    "import asyncio\n\nasync def fetch_close_price(ticker: str, ticker_price_dict):\n    print(f'Checking cache for ticker {ticker}')\n    price = ticker_price_dict.get(ticker)\n    if price:\n        # We cannot be sure of the class used for a future, so\n        # we check to see if this is the class of a price.\n        # My price is just a str instance\n        if not isinstance(price, str):\n            # This is a future\n            future = price\n            print(f'ticker {ticker} has already been requested.')\n            price = await future\n            print(f'Got price {price!r} for ticker {ticker} from the future.')\n        else:\n            print(f'Found price for ticker {ticker} in cache')\n        return price\n\n    # The ticker is not in the cache, so we have to make a request\n    # Put a future in the cache to signal to other tasks interested in\n    # the same ticker that the request has been made.\n    future = asyncio.get_running_loop().create_future()\n    ticker_price_dict[ticker] = future\n\n    # Download ticker. Here we emulate doing that by sleeping a bit:\n    print(f'Making request for ticker {ticker}')\n    await asyncio.sleep(1)\n    price = f'{ticker} price'\n    print(f'Got price {price!r} for ticket {ticker} from the request')\n    # Put the 'result\" in the cache:\n    ticker_price_dict[ticker] = price\n    # And tell others interested in this price that we have it:\n    future.set_result(price)\n\nasync def download_close_prices(tickers: list[str]):\n    ticker_price_dict = {}\n    tasks = [fetch_close_price(ticker, ticker_price_dict) for ticker in tickers]\n    results = await asyncio.gather(*tasks)\n    return results\n\nasync def download_close_prices_all(tickers: list[str]):\n    return await download_close_prices(tickers)\n\nif __name__ == \"__main__\":\n    tickers = [\"AAPL\", \"USDINR=X\", \"XCN18679-USD\", \"XCN18679-USD\", \"XCN18679-USD\"]\n    close_prices = asyncio.run(download_close_prices_all(tickers))",
    "Checking cache for ticker AAPL\nMaking request for ticker AAPL\nChecking cache for ticker USDINR=X\nMaking request for ticker USDINR=X\nChecking cache for ticker XCN18679-USD\nMaking request for ticker XCN18679-USD\nChecking cache for ticker XCN18679-USD\nticker XCN18679-USD has already been requested.\nChecking cache for ticker XCN18679-USD\nticker XCN18679-USD has already been requested.\nGot price 'AAPL price' for ticket AAPL from the request\nGot price 'USDINR=X price' for ticket USDINR=X from the request\nGot price 'XCN18679-USD price' for ticket XCN18679-USD from the request\nGot price 'XCN18679-USD price' for ticker XCN18679-USD from the future.\nGot price 'XCN18679-USD price' for ticker XCN18679-USD from the future.",
    "from hyperopt import fmin, tpe, hp, STATUS_OK, Trials\nimport lightgbm as lgb\nimport numpy as np\nfrom hyperopt.pyll.base import scope\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.datasets import make_blobs\n\n\nclass HyperoptObjective:\n    def __init__(self, X, y):\n        self.X = X\n        self.y = y\n\n    def __call__(self, params):\n        model = lgb.LGBMClassifier(\n            objective=\"multiclass\",\n            num_class=len(set(self.y)),\n            **params\n        )\n        score = cross_val_score(\n            estimator=model, X=self.X, y=self.y, cv=3, \n            scoring=\"accuracy\"\n        ).mean()\n        return {\"loss\": -score, \"status\": STATUS_OK}\n\n# create a 3-class classification dataset\nX, y = make_blobs(n_samples=10_000, n_features=5, centers=3)\n\n# space with 4 possible combinations:\n#\n#   num_leaves=40, n_estimators=10\n#   num_leaves=40, n_estimators=20\n#   num_leaves=50, n_estimators=10\n#   num_leaves=50, n_estimators=20\n#\nspace = {\n    \"num_leaves\": scope.int(hp.quniform(\"num_leaves\", 40, 50, 10)),\n    \"n_estimators\": scope.int(hp.quniform(\"n_estimators\", 10, 20, 10)),\n}\n\n# create an object to hold trial results\ntrials = Trials()\n\n# run a sweep\nnum_trials = 2\nbest_hyperparams = fmin(\n    fn=HyperoptObjective(X, y),\n    space=space,\n    algo=tpe.suggest,\n    max_evals=num_trials,\n    trials=trials,\n    rstate=np.random.default_rng(708),\n)\n\nprint(f\"Best hyperparameters found ({num_trials} trials):\\n{best_hyperparams}\")\n# Best hyperparameters found (2 trials):\n# {'n_estimators': 10.0, 'num_leaves': 40.0}\n\nprint(f\"trials run:\\n{trials.vals}\")\n# trials run:\n# {'n_estimators': [10.0, 20.0], 'num_leaves': [40.0, 40.0]}",
    "script = f\"\"\"\nfunction getSomeValue() {{\n    return '42';\n}}\n\ngetSomeValue();\n\"\"\"\n\ndata = sb.cdp.evaluate(script)",
    "import pandas as pd\n\nfilename = \"large_data.csv\"\n\nchunksize = 10_000\ntotal_sum = 0\n\nfor chunk in pd.read_csv(filename,chunksize=chunksize):\n    total_sum += chunk[\"some_numeric_column\"].sum()\n\nprint(\"Grand total:\", total_sum)",
    "import dask.dataframe as dd\n\nfilename = \"large_data.csv\"\n\nddf = dd.read_csv(filename,blocksize=\"64MB\")  \n\nresult = ddf[\"some_numeric_column\"].mean().compute()\nprint(\"Mean:\", result)",
    "import pandas as pd\n\ndf_collection = pd.read_csv('large_file.gz',\n                 chunksize=1000000)\n\n\nfor df in df_collection:\n    #your process here",
    "INSTALLED_APPS = [\n    'django.contrib.admin',  # Ensure this line is present\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # other apps...\n]",
    "self.mox.StubOutWithMock(vi, \"create_interface\")",
    "vi.create_interface(...)",
    "ABC(?!\\.png)|ABC(?! thumb\\.png)\n(Note: Dot is a regex metacharacter and should be escaped with backslash)",
    "\\bABC(?!\\.png| thumb\\.png)",
    "\\bABC(?!(?: thumb)?\\.png)",
    "def get_pad(curr_size: int, target_size: int):\n    d = target_size - curr_size\n    \n    if d <= 0: return (0, 0) # no need to pad\n\n    p1 = d // 2\n    p2 = d - p1\n    return (p1, p2)\n\nH, W = 600, 650 # make dummy image    \nimage = np.random.randint(0, 255, (H, W, 3), np.uint8)\n\n\nDH, DW = 700, 700 # desired height / width\npadding = (get_pad(H, DH), get_pad(W, DW), (0, 0))\nimage_padded = np.pad(image, padding, constant_values=0)",
    "sudo apt-get update\nsudo apt-get install libx11-6 libxext6 libxtst6 libxrender1 libxrandr2 libxi6 libxcb1 libxcb-render0 libxcb-xinerama0 libxcb-glx0",
    "class hybridmethod:\n    def __init__(self, f):\n        self.f = f\n\n    def __get__(self, obj, cls=None):\n        if obj is not None:\n            return self.f.__get__(obj)\n        return getattr(super(cls, cls), self.f.__name__).__get__(cls)\n\nclass MyFoo(Foo):\n    @hybridmethod\n    def bar(self):\n        return self.text\n\nprint(MyFoo.bar()) # outputs None\nfoo = MyFoo('foo')\nprint(foo.bar()) # outputs foo",
    "class instanceable_classmethod(classmethod):\n    def __init__(self, func):\n        super().__init__(func)\n        self.instance_func = self.__func__\n\n    def instancemethod(self, func):\n        self.instance_func = func\n        return self\n\n    def __get__(self, obj, cls=None):\n        if obj is None:\n            return super().__get__(obj, cls)\n        return self.instance_func.__get__(obj)\n\n\nclass Foo(object):\n    def __init__(self, text):\n        self.text = text\n\n    @instanceable_classmethod\n    def bar(cls):\n        return None\n\n    @bar.instancemethod\n    def bar(self):\n        return self.text\n\nprint(Foo.bar())  # outputs None\nfoo = Foo('foo')\nprint(foo.bar())  # outputs foo",
    "// for (let i = period - 1; i < data.length; i++) {",
    "for (let i = period; i < data.length; i++) {",
    "const\n    array = [3, 4, 5, 1, 2],\n    result = [...array.keys()].sort((i, j) => array[j] - array[i]);\n\nconsole.log(result); // [2, 1, 0, 4, 3]",
    "function getSortedIndices(arr) {\n  return arr\n    .map((_, index) => index) // Create an array of indices [0, 1, 2, ...]\n    .sort((a, b) => arr[b] - arr[a]); // Sort indices based on the values in the original array\n}\n\n// Example usage:\nconst input = [3, 4, 5, 1, 2];\nconst output = getSortedIndices(input);\nconsole.log(output); // Output: [2, 1, 0, 4, 3]",
    "function debounce(cb, wait = 300) {\n  let timer = 0;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => cb(...args), wait);\n  };\n}\n\nconst onScroll = debounce(\n  () => {\n    const aside = document.querySelector('aside');\n    document.querySelector('.scroll.up').style.display = (aside.scrollTop > 0) ? 'block' : 'none';\n    document.querySelector('.scroll.down').style.display = ((aside.scrollTop + aside.clientHeight) < aside.scrollHeight) ? 'block' : 'none';\n  },\n  100\n);\n  \ndocument.addEventListener('DOMContentLoaded', () => document.querySelector('aside').addEventListener('scroll', onScroll));",
    "body {\n  display: grid;\n  grid-template-rows: 1fr;\n  height: 100vh;\n  width: 100vw;\n  margin: 0;\n}\nmain {\n  display: grid;\n  grid-template-columns: 200px 1fr;\n  overflow: hidden;\n}\naside.left {\n  border-right: 1px solid #333333;\n  overflow-y: scroll;\n  scrollbar-width: none;\n}\n.large {\n  height: 1000px;\n  background: linear-gradient(#0000AA, #FF0000);\n}\naside .scroll {\n  position: fixed;\n  left: 0;\n  width: 200px;\n  height: 30px;\n  background-color: #33333380;\n  text-align: center;\n  color: #FFFFFF;\n}\naside .scroll.up {\n  top: 0;\n}\naside .scroll.down {\n  bottom: 0;\n}",
    "<main>\n  <aside class=\"left\">\n    <div class=\"large\"></div>\n    <div class=\"scroll up\" style=\"display: none\">UP</div>\n    <div class=\"scroll down\">DOWN</div>\n  </aside>\n  <div class=\"main\"></div>\n</main>",
    "Promise.all(imgPromises).then(() => {\n    console.log(\"All images loaded.\");\n    img.height = img?.offsetHeight; // setting height like this\n    // Continuation of your code without any changes\n}",
    "import * as PlayFab from \"./node_modules/playfab-web-sdk/PlayFabClientApi\";",
    "const chat = model.startChat({ history: chatHistory, generationConfig: { maxOutputTokens: 3000 }, });",
    "const chat = model.startChat({\n    generationConfig: { maxOutputTokens: 3000 },\n});",
    "let demo;\nlet iFrames = {};\nconst requestData = () => {\n  fetch('request.php', {\n    method: 'POST',\n  })\n  .then(res => res.text())\n  .then(text => {\n    demo.innerHTML += text;\n    cnt = 0;\n  });\n};  \n\ndemo.addEventListener('load', (e) => {\n  const tgt = e.target;\n  if (!tgt.matches('iframe')) return;\n  iFrames[e.target.src] = true;\n  if (Object.keys(iFrames).length === 3) {\n    const lastBlock = demo.querySelector('.newdata:last-of-type');\n    setTimeout(() => lastBlock.scrollIntoView({behavior: \"smooth\", block: \"start\"}), 50);\n    iFrames = {};\n  }\n});",
    "const chatModal = document.getElementById(\"myForm\");\nconst myFunction = () => chatModal.style.display = chatModal.style.display !== \"block\" ? \"block\" : \"none\";\n  \ndocument.querySelector(\".chatButtons\").addEventListener(\"click\", myFunction);",
    "#myForm { display: none; }",
    "<button class=\"chatButtons\">button</button>\n\n\n<div class=\"chat-popup\" id=\"myForm\">\n  <div class=\"form-container\">\n  Form here\n  </div>\n</div>",
    "//       vvvvvvvvvvvvvvvvvvvvvv --- synchronous\nresult = result + (fruit + \": \" + (await resolveName(fruit)).length + \"\\n\");\n// ^^^^^                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --- aysnc",
    "const s = fruit + \": \" + (await resolveName(fruit)).length + \"\\n\";",
    "a += b",
    "import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {children}\n      </body>\n    </html>\n  );\n}",
    "class Example {\n  hello = \"world\"\n}\n\n//pass an empty array for the constructor arguments\nconst obj = Reflect.construct(Example, []);\n\nconsole.log( obj instanceof Example );\nconsole.log( obj.hello );",
    "class Example {\n  hello = \"world\"\n}\n\nconst myConstruct = Reflect.construct.bind(null, Example, []);\n\nconst obj = myConstruct();\n\nconsole.log( obj instanceof Example );\nconsole.log( obj.hello );",
    "class Example1 {\n  hello = \"world\"\n}\n\nclass Example2 {\n  hello = \"Fred\"\n}\n\nconst myConstruct = _.partial(Reflect.construct, _, []);\n// placeholder for a constructor ----------------^\n\nconst obj1 = myConstruct(Example1);\nconst obj2 = myConstruct(Example2);\n\nconsole.log( obj1 instanceof Example1 );\nconsole.log( obj1.hello );\n\nconsole.log( obj2 instanceof Example2 );\nconsole.log( obj2.hello );",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash-fp/0.10.4/lodash-fp.min.js\"></script>",
    "const construct = (constructor) => (...args) =>\n    new constructor(...args); // or Reflect.construct(constructor, args)",
    "function processLargeArray(arr) {\n    let end = arr.length - 1;\n\n    for (let i = 0; i <= end; ) {\n        if (shouldMoveToEnd(arr[i])) {\n            [arr[i], arr[end]] = [arr[end], arr[i]];\n            end--;\n        } else {\n            processElement(arr[i]);\n            i++;\n        }\n    }\n}\n\nfunction shouldMoveToEnd(num) {\n    return num % 2 === 0;\n}\n\nfunction processElement(num) {\n    console.log(\"Processing:\", num);\n}\n\n// Example\nlet arr = [3, 2, 1, 4, 5, 6, 7, 8];\nprocessLargeArray(arr);\nconsole.log(\"Final array:\", arr);",
    "Processing: 3\nProcessing: 7\nProcessing: 1\nProcessing: 5\nFinal array: [\n  3, 7, 1, 5,\n  6, 4, 8, 2\n]\n\n=== Code Execution Successful ===",
    "const handleCustomRequest = async ({ file, onSuccess, onError }, eventId) => {\nconsole.log(\"Sending the file manually:\", file);\n\nif (!eventId) {\n  console.error(\"Error: EventId is missing\");\n  onError(new Error(\"Error: eventId is missing\"));\n  return;\n}\n\nconst formData = new FormData();\n\n// Force the file name to be encoded in UTF-8\nconst encodedFileName = new Blob([file], { type: file.type });\n\nformData.append(\"file\", encodedFileName, encodeURIComponent(file.name)); // Encoding the file name\n\ntry {\n  const response = await fetch(\n    `${process.env.REACT_APP_API_URL}/api/Photo?event_id=${eventId}`,\n    {\n      method: \"POST\",\n      body: formData,\n    }\n  );\n\n  if (!response.ok) throw new Error(`Error: ${response.statusText}`);\n\n  console.log(\"The file has been uploaded successfully!\");\n  onSuccess();\n} catch (error) {\n  console.error(\"Error when uploading a file:\", error);\n  onError(error);\n}",
    "<Upload\n    customRequest={(options) => handleCustomRequest(options, event.id)}\n    listType=\"picture-card\"\n    showUploadList={false}\n    multiple={true}\n    onChange={handleUploadChange(event.id)} // Handler for changing the download status\n  >\n    <button style={{ border: 0, background: \"none\" }} type=\"button\">\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Add Files</div>\n    </button>\n  </Upload>",
    "const renderGameRoutes = () => (\n  <>\n    <Route path=\"/games\" element={<Games />} />\n    <Route path=\"/tic-tac-toe\" element={<TicTacToe />} />\n    <Route path=\"/tic-react\" element={<TicReact />} />\n    <Route path=\"/tic-me\" element={<TicMe />} />\n  </>\n);",
    "<Routes>\n  {/* PUBLIC */}\n  <Route path=\"/\" element={<Home />} />\n  <Route path=\"*\" element={<NotFound />} />\n  {renderGameRoutes()}\n</Routes>",
    "const gameRoutes = () => [\n  <Route key=\"/games\" path=\"/games\" element={<Games />} />,\n  <Route key=\"/tic-tac-toe\" path=\"/tic-tac-toe\" element={<TicTacToe />} />,\n  <Route key=\"/tic-react\" path=\"/tic-react\" element={<TicReact />} />,\n  <Route key=\"/tic-me\" path=\"/tic-me\" element={<TicMe />} />,\n];",
    "<Routes>\n  {/* PUBLIC */}\n  <Route path=\"/\" element={<Home />} />\n  <Route path=\"*\" element={<NotFound />} />\n  {gameRoutes}\n</Routes>",
    "<script src=\"https://kit.fontawesome.com/ec66f84d89.js\" crossorigin=\"anonymous\"></script>\n\n<body>\n  <div class=\"container\">\n     <div class=\"nav-bar-container\" id=\"mynav\">\n    <button class=\"index-button\" onclick=\"index()\">NOME SITO</button>\n    <button class=\"open-menu-button\" id=\"open-menu\" onclick=\"openMenu()\"><i class=\"fa-solid fa-bars\"></i></button>\n    <button class=\"close-menu-button\" id=\"close-menu\" onclick=\"closeMenu()\"><i class=\"fa-solid fa-xmark\"></i></button>\n    <div class=\"menu-container\" id=\"menu\">\n      <button class=\"menu-button\" onclick=\"index()\"><i class=\"fa-solid fa-house\"></i></button>\n      <button class=\"menu-button\" onclick=\"about()\"><i class=\"fa-solid fa-circle-info\"></i></button>\n      <button class=\"menu-button\" onclick=\"contact()\"><i class=\"fa-solid fa-address-card\"></i></button>\n      <button class=\"menu-button\" onclick=\"shop()\"><i class=\"fa-solid fa-cart-shopping\"></i></button>\n    </div>\n  </div>\n    <div class=\"cover-img\"></div>\n    <div class=\"logo-container\">\n      <div class=\"logo-img\"></div>\n    </div>\n    <div class=\"text-change-container\">\n      <div class=\"text-box\" id=\"index\">\n        <h1>Lorem Ipsum</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce quam eros, pellentesque ac urna sed, cursus congue purus. Etiam vel interdum massa. Suspendisse potenti. Phasellus venenatis quis sapien faucibus tincidunt. Donec blandit, est vitae posuere fermentum, augue urna convallis tortor, vitae maximus massa augue eget odio. Vestibulum lacinia ornare ex, a cursus nulla venenatis quis.</p>\n      </div>\n      <div class=\"text-box\" id=\"about\">\n        <h1>Lorem Ipsum 2</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce quam eros, pellentesque ac urna sed, cursus congue purus. Etiam vel interdum massa. Suspendisse potenti. Phasellus venenatis quis sapien faucibus tincidunt. Donec blandit, est vitae posuere fermentum, augue urna convallis tortor, vitae maximus massa augue eget odio. Vestibulum lacinia ornare ex, a cursus nulla venenatis quis.</p>\n      </div>\n      <div class=\"text-box\" id=\"contact\">\n        <h1>Lorem Ipsum 3</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce quam eros, pellentesque ac urna sed, cursus congue purus. Etiam vel interdum massa. Suspendisse potenti. Phasellus venenatis quis sapien faucibus tincidunt. Donec blandit, est vitae posuere fermentum, augue urna convallis tortor, vitae maximus massa augue eget odio. Vestibulum lacinia ornare ex, a cursus nulla venenatis quis.</p>\n      </div>\n      <div class=\"text-box\" id=\"shop\">\n        <h1>Lorem Ipsum 4</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce quam eros, pellentesque ac urna sed, cursus congue purus. Etiam vel interdum massa. Suspendisse potenti. Phasellus venenatis quis sapien faucibus tincidunt. Donec blandit, est vitae posuere fermentum, augue urna convallis tortor, vitae maximus massa augue eget odio. Vestibulum lacinia ornare ex, a cursus nulla venenatis quis.</p>\n      </div>\n    </div>\n    <div class=\"social-container\">\n      <a class=\"social-button\" id=\"telegram\" href=\"\" target=\"_blank\"><i class=\"fa-brands fa-telegram\"></i></a>\n      <a class=\"social-button\" id=\"signal\" href=\"\" target=\"_blank\"><i class=\"fa-brands fa-signal-messenger\"></i></a>\n      <a class=\"social-button\" id=\"instagram\" href=\"\" target=\"_blank\"><i class=\"fa-brands fa-instagram\"></i></a>\n      <a class=\"social-button\" id=\"x-twitter\" href=\"\" target=\"_blank\"><i class=\"fa-brands fa-x-twitter\"></i></a>\n    </div>\n  </div>\n</body>",
    "swal({  \n    title: \"Good job!\",\n    text: \"Profile Update Successfully!\",\n    icon: \"success\",\n    button: \"Okay!\",\n}).then(confirm => {\n     if (confirm) window.location.reload();\n});",
    "swal({  \n                title: \"Good job!\",\n                text: \"Profile Update Successfully!\",\n                icon: \"success\",\n                button: \"Okay!\",\n              });\n              setTimeout(function(){window.location.reload();},2000); /* auto reload after 2sec */",
    "alert(Math.sqrt(8885558) - Math.pow(8885558, 0.5));",
    "Phaser.Actions.ShiftPosition(myObjects, 400, 300);",
    "const COLORS = [ 0x9bbc0f, 0x8bac0f, 0x306230, 0x0f380f ];\n\nclass DemoScene extends Phaser.Scene {\n    \n    preload(){\n       //create texture for the demo\n       let graphics  = this.make.graphics();\n       graphics.fillStyle( 0xff0000 );\n       graphics.fillRect(0, 0, 8, 8);\n       graphics.generateTexture(`texture`, 8, 8);\n    }\n\n    create () {\n        this.add.text(10,10,'Demo');\n        \n        this.snake = this.add.group();\n        \n        // create head\n        this.snake.create(100, 100, 'texture');\n       \n        // body part1\n        this.snake.create(90, 100, 'texture');    \n        // body part2\n        this.snake.create(80, 100, 'texture');    \n                \n        // move timer\n        this.lastStep  = 0\n        \n    }\n    \n    update (delta) {\n        //movement should be improved, this is just for the demo\n        \n        if(this.lastStep + 10 < delta ){\n        \n            let bodyParts = this.snake.getChildren();\n            let {x, y} = bodyParts[bodyParts.length - 1];\n            \n            // here the magic happens\n            Phaser.Actions.ShiftPosition( bodyParts, bodyParts[0].x + 1, bodyParts[0].y)   \n            \n            this.lastStep = delta\n            \n        }\n    }\n\n}\n\nvar config = {\n    width: 540,\n    height: 180,\n    scene: DemoScene,\n}; \n\nnew Phaser.Game(config);\n\nconsole.clear();\ndocument.body.style = 'margin:0;';",
    "<script src=\"//cdn.jsdelivr.net/npm/phaser/dist/phaser.min.js\"></script>",
    "{\n  ...\n  \"exports\": {\n    \".\": \"./index.js\",\n    \"./deep\": \"./deep/index.js\"\n  }\n}",
    "/**\n * First collect all player objects into an array.\n * Which you've already done which is great.\n */\nlet players = iframesArray.map(iframe => new Vimeo.Player(iframe))\n\n/**\n * Next, define a function that'll iterate through the \n * players array and pause each one.\n */\nconst pauseAll = () => {\n  players.forEach((p) => {\n    p.pause()\n     .then()\n     .catch()\n  });\n};\n\n/**\n * Finally, add the function to the code block responsible \n * for the close button and to the code block that closes\n * the modal when the user clicks outside of it.\n */\n for (var i = 0; i < spans.length; i++) {\n   spans[i].onclick = function () {\n     pauseAll()\n     ....",
    "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Vimeo Playlist Modal</title>\n  <meta name=\"description\" content=\"155 chars\">\n  <style>\n    *,\n    *::before,\n    *::after {\n      box-sizing: border-box;\n    }\n\n    :root {\n      font: 500 5vmin/1.5 \"Segoe UI\";\n    }\n\n    body {\n      overflow: scroll;\n    }\n\n    dialog {\n      padding: 0;\n      border: 0;\n      border-radius: 5px;\n      background: transparent;\n      box-shadow: 0 10px 6px -6px #777;\n      -ms-overflow-style: none;\n      scrollbar-width: none;\n    }\n\n    dialog::backdrop {\n      background: rgba(50, 50, 50, 0.3);\n    }\n\n    dialog::-webkit-scrollbar {\n      display: none;\n    }\n\n    #ui {\n      padding: 0;\n      border: 1.5px solid #bbb;\n      border-radius: 5px;\n      background: #eee;\n    }\n\n    .btn {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      padding: 0;\n      border: 1px ridge #ddd;\n      border-radius: 5px;\n      font: inherit;\n      font-size: 2rem;\n      line-height: normal;\n      background: transparent;\n      cursor: pointer;\n      box-shadow: 0 6px 4px -4px #bbb;\n    }\n\n    .btn:hover {\n      color: #0a87a1;\n      box-shadow: 0 6px 8px -4px #999;\n    }\n\n    .btn:active {\n      color: #0a87a1;\n      transform: scale(0.95);\n    }\n\n    .content {\n      display: flex;\n      flex-flow: column nowrap;\n      justify-content: center;\n      align-items: center;\n      width: 100vh;\n      padding: 0 0.5rem;\n      border: 0;\n      background: #eee;\n    }\n\n    .content legend {\n      width: 100%;\n    }\n\n    .content legend .btn {\n      float: right;\n      height: 1.5rem;\n      margin: 0.25rem -0.25rem 0.25rem 0;\n      padding-bottom: 0.45rem;\n      line-height: 0;\n      color: #888;\n    }\n\n    .control {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 0 0 0.25rem;\n      padding: 0;\n      border: 0;\n    }\n\n    #prev,\n    #next {\n      width: 2rem;\n      height: 2rem;\n      padding: 0;\n      border: 0;\n      line-height: 1;\n      background: #eee;\n    }\n\n    #counter {\n      padding: 0.75rem 1rem 0;\n      font-size: 1.25rem;\n      font-family: Consolas;\n      color: #0a87a1;\n    }\n\n    #video {\n      width: 100%;\n      margin: 0;\n      padding: 0;\n      border: 0;\n    }\n\n    .playlist a {\n      position: relative;\n      display: list-item;\n      width: max-content;\n      color: #18272f;\n      text-decoration: none;\n    }\n\n    .playlist a+a {\n      margin-top: 0.5rem;\n    }\n\n    .playlist a::before {\n      content: \"\";\n      position: absolute;\n      bottom: -0.25rem;\n      left: 0;\n      width: 100%;\n      height: 0.1rem;\n      border-radius: 4px;\n      background: #0a87a1;\n      transform-origin: right;\n      transform: scaleX(0);\n      transition: transform 0.3s ease-in-out;\n    }\n\n    .playlist a::marker {\n      content: \"\\0000bb\\002009\";\n      display: inline-block;\n      font-size: 1.4rem;\n      color: #0a87a1;\n    }\n\n    .playlist a:hover::before {\n      color: #0a87a1;\n      transform-origin: left;\n      transform: scaleX(1);\n    }\n\n    .playlist a b {\n      font-weight: 600;\n      font-size: 1.1rem;\n      font-variant: small-caps;\n    }\n\n    .hidden {\n      display: none;\n    }\n  </style>\n</head>\n\n<body>\n\n  <button id=\"start\">Double Click</button>\n\n  <dialog>\n    <form id=\"ui\" method=\"dialog\">\n      <fieldset class=\"content\">\n        <legend>\n          <input class=\"btn\" type=\"submit\" value=\"\u2a2f\">\n        </legend>\n        <fieldset id=\"video\"></fieldset>\n        <fieldset class=\"control\">\n          <input id=\"prev\" class=\"btn\" type=\"button\" value=\"\u23ee\">\n          <output id=\"counter\"></output>\n          <input id=\"next\" class=\"btn\" type=\"button\" value=\"\u23ed\">\n        </fieldset>\n      </fieldset>\n    </form>\n  </dialog>\n\n  <menu class=\"playlist\"></menu>\n\n  <script src=\"https://player.vimeo.com/api/player.js\"></script>\n  <script>\n    let idx = 0;\n    let players = [],\n      links = [],\n      media,\n      iframes;\n\n    const vIDs = [\"148551759\", \"64142541\", \"108977978\"];\n\n    const ui = document.forms.ui;\n    const io = ui.elements;\n    const prev = io.prev;\n    const next = io.next;\n    const count = io.counter;\n    const vid = io.video;\n\n    const modal = document.querySelector(\"dialog\");\n    const list = document.querySelector(\".playlist\");\n\n    const setVideos = (vIDs) => {\n      vIDs.forEach((id) => {\n        const obj = document.createElement(\"object\");\n        obj.name = \"media\";\n        obj.className = \"hidden\";\n        obj.dataset.vimeoId = id;\n        obj.dataset.vimeoWidth = \"720\";\n        vid.append(obj);\n        players.push(new Vimeo.Player(obj));\n      });\n    };\n\n    const smallCaps = (str) => {\n      if (str.includes(\" - \")) {\n        return str.split(/(\\s-\\s)/)\n          .map((w, i) => {\n            return i === 0 ? `<b>${w}</b>` : w;\n          })\n          .join(\"\");\n      } else {\n        return str.split(\" \")\n          .map((w) => {\n            return /[A-Z]{2,}/.test(w) ?\n              `<b>${w[0] + w.slice(1).toLowerCase()}</b>` : w;\n          })\n          .join(\" \");\n      }\n    };\n\n    const getTitles = () => {\n      iframes = [...document.querySelectorAll(\"iframe\")];\n      media = Array.from(io.media);\n      return iframes.map((f) => smallCaps(f.title));\n    };\n\n    const setLinks = (titles) => {\n      titles.forEach((t) => {\n        const link = document.createElement(\"a\");\n        link.href = \"#\";\n        list.append(link);\n        link.insertAdjacentHTML(\"beforeend\", t);\n        links.push(link);\n      });\n    };\n\n    const pauseAll = () => {\n      players.forEach((p) => p.pause()\n        .then()\n        .catch());\n    };\n\n    const switchMedia = (idx) => {\n      media.forEach((m) => m.classList.add(\"hidden\"));\n      pauseAll();\n      media[idx].classList.remove(\"hidden\");\n      count.value = idx + 1;\n    };\n\n    const clickList = (e) => {\n      const clk = e.target;\n      if (clk.matches(\"a\")) {\n        idx = links.indexOf(clk);\n        switchMedia(idx);\n        modal.showModal();\n      }\n    };\n\n    list.onclick = clickList;\n\n    const reverse = (e) => {\n      idx--;\n      idx = idx < 0 ? iframes.length - 1 : idx;\n      switchMedia(idx);\n    };\n\n    const forward = (e) => {\n      idx++;\n      idx = idx > iframes.length - 1 ? 0 : idx;\n      switchMedia(idx);\n    };\n\n    prev.onclick = reverse;\n    next.onclick = forward;\n\n    modal.onclick = (e) => e.currentTarget.close();\n    ui.onclick = (e) => e.stopPropagation();\n\n    modal.onclose = (e) => pauseAll();\n\n\n    document.getElementById(\"start\").onclick = init;\n\n    function init(e) {\n      setVideos(vIDs);\n      setLinks(getTitles());\n      setTimeout(() => this.className = \"hidden\", 3000);\n    }\n  </script>\n</body>\n\n</html>",
    "'use strict'\n\n// Get the button that opens the modal\nvar btn = document.querySelectorAll(\"a.modal-button\");\n\n// All page modals\nvar modals = document.querySelectorAll(\".modal\");\n\n// Get the <span> element that closes the modal\nvar spans = document.querySelectorAll(\".close\");\n\n\n// When the user clicks the button, open the modal\n//let iframe = document.querySelector('iframe');\n//let player = new Vimeo.Player(iframe);\n\nlet iframes = document.querySelectorAll('iframe');\nlet iframesArray = Array.from(iframes)\n \nlet players = iframesArray.map(iframe => new Vimeo.Player(iframe)) \n\n//for (var i = 0; i < btn.length; i++) {\nfor (let i = 0; i < btn.length; i++) {  // Use `let` instead of `var`\n  btn[i].onclick = function (e) {\n    e.preventDefault();\n    const modal = document.querySelector(e.target.getAttribute(\"href\"));\n    modal.style.display = \"block\";\n        //player.play();\n        players[i].play();\n  };\n}\n\n// When the user clicks on <span> (x), close the modal\nfor (var i = 0; i < spans.length; i++) {\n  spans[i].onclick = function () {\n    for (var index in modals) {\n      if (typeof modals[index].style !== \"undefined\")\n        modals[index].style.display = \"none\";\n        //player.pause();       \n        if(index!== \"undefined\" && typeof index === 'number'){\n          players[index].pause();   \n        }\n    }\n  };\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function (event) {\n  if (event.target.classList.contains(\"modal\")) {\n    for (var index in modals) {\n      if (typeof modals[index].style !== \"undefined\")\n        modals[index].style.display = \"none\";\n        //player.pause();\n        players[index].pause();\n    }\n  }\n};",
    "// Input Variables\nlet createDigestModal = $(\"#create-digest-modal\");\nlet createDigestFormContainer = $(\"#create-digest-modal-form-container\");\nlet createDigestModalSubmitBtn = $(\"#create-digest-modal-btn\");\n\n// ========================================================================\n// Toggle the submit button to disabled / enabled based on required inputs\n// ========================================================================\nconst enableSubmitBtn = () => {\n  // Create digest form\n  createDigestFormContainer.on(\"keyup change\", () => {\n    let createDigestInputs = createDigestFormContainer.find(\".required\");\n    let requiredCreateDigestInputs = true;\n\n    for (let i = 0; i < createDigestInputs.length; i++) {\n      console.log(createDigestInputs[i].value);\n      if (\n        createDigestInputs[i].value == \"\"\n      ) {\n        requiredCreateDigestInputs = false;\n        break;\n      }\n    }\n\n    createDigestModalSubmitBtn.attr(\"disabled\", !requiredCreateDigestInputs);\n\n  });\n};\n\n// Invoke Function to toggle submit button\nenableSubmitBtn();",
    ".row {\n  margin-bottom: 1rem;\n}\n\n/* Required Fields */\n\n.required-field::after {\n  content: \"*\";\n  color: red;\n  margin-left: 2px;\n}\n\n.required-field-margin-left::after {\n  content: \"*\";\n  color: red;\n  margin-left: -2px;\n}",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n<!-- Create Digest Modal -->\n<div class=\"modal fade\" id=\"create-digest-modal\" tabindex=\"-1\" aria-labelledby=\"create-digest-modal-label\">\n\n  <form id=\"create-digest-modal-form-container\">\n    <!-- Project Input -->\n    <div class=\"row\">\n      <div class=\"col-40\">\n        <label class=\"required-field\" for=\"create-digest-modal-project-input\">Project</label>\n      </div>\n      <div>\n        <select class=\"form-select required\" id=\"create-digest-modal-project-input\" type=\"select\">\n\n          <option value=\"\">Select</option>\n          <option value=\"1\">Project 1</option>\n          <option value=\"2\">Project 2</option>\n        </select>\n      </div>\n    </div>\n    <!-- /Project Input -->\n\n    <!-- name input -->\n    <div class=\"row\">\n      <div id=\"create-digest-name-input\">\n        <label id=\"create-digest-modal-name-input-label\" for=\"create-digest-modal-name-input\" class=\"required-field\">Digest Name</label>\n      </div>\n\n      <div>\n        <input name=\"create-digest-modal-name-input\" type=\"text\" id=\"create-digest-modal-name-input\" class=\"required\" />\n      </div>\n    </div>\n    <!-- /name input -->\n\n    <!-- Type input -->\n    <div class=\"row\">\n      <div class=\"col-40\">\n        <label class=\"required-field\" for=\"create-digest-modal-type-input\">Type</label>\n      </div>\n      <div class=\"col-75 flex\">\n        <select class=\"form-select required\" aria-label=\"create-digest-modal-type-input\" id=\"create-digest-modal-type-input\" type=\"select\">\n          <option value=\"\">Select</option>\n          <option value=\"D\">Daily</option>\n          <option value=\"W\">Weekly</option>\n        </select>\n      </div>\n    </div>\n    <!-- /Type input -->\n\n    <!-- include summary input -->\n    <div id=\"create-digest-modal-summary-input-container\" class=\"row\">\n      <div class=\"col-40\">\n        <label class=\"form-check-label\" for=\"create-digest-modal-summary-input\">\n          Include Summary\n        </label>\n      </div>\n      <div class=\"col-75 flex\">\n        <input checked class=\"form-check-input\" type=\"checkbox\" id=\"create-digest-modal-summary-input\" />\n      </div>\n    </div>\n    <!-- /include summary input -->\n  </form>\n\n  <!-- Close/Update Buttons -->\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary modal-close-btn\" data-bs-dismiss=\"modal\" id=\"create-modal-close-btn\">\n      Close\n    </button>\n    <button type=\"button\" id=\"create-digest-modal-btn\" class=\"btn btn-success\" disabled>\n      Add Digest\n    </button>\n  </div>\n\n</div>\n<!-- Create Digest Modal -->",
    "const form01 = document.forms['create-digest-modal-form-container'];\n\nform01.addEventListener('input', e => {\n  let form = e.target.form;\n  form.create_digest_modal_btn.disabled = !form.reportValidity();\n});\n\nform01.addEventListener('invalid', e => {\n  e.preventDefault();\n}, true);",
    ".row {\n  margin-bottom: 1rem;\n}\n\n/* Required Fields */\n\n.required-field::after {\n  content: \"*\";\n  color: red;\n  margin-left: 2px;\n}\n\n.required-field-margin-left::after {\n  content: \"*\";\n  color: red;\n  margin-left: -2px;\n}",
    "<!-- Create Digest Modal -->\n<div class=\"modal fade\" id=\"create-digest-modal\" tabindex=\"-1\" aria-labelledby=\"create-digest-modal-label\">\n\n  <form id=\"create-digest-modal-form-container\">\n    <!-- Project Input -->\n    <div class=\"row\">\n      <div class=\"col-40\">\n        <label class=\"required-field\" for=\"create-digest-modal-project-input\">Project</label>\n      </div>\n      <div>\n        <select class=\"form-select\" id=\"create-digest-modal-project-input\" type=\"select\" required>\n\n          <option value=\"\">Select</option>\n          <option value=\"1\">Project 1</option>\n          <option value=\"2\">Project 2</option>\n        </select>\n      </div>\n    </div>\n    <!-- /Project Input -->\n\n    <!-- name input -->\n    <div class=\"row\">\n      <div id=\"create-digest-name-input\">\n        <label id=\"create-digest-modal-name-input-label\" for=\"create-digest-modal-name-input\" class=\"required-field\">Digest Name</label>\n      </div>\n\n      <div>\n        <input name=\"create-digest-modal-name-input\" type=\"text\" id=\"create-digest-modal-name-input\" required>\n      </div>\n    </div>\n    <!-- /name input -->\n\n    <!-- Type input -->\n    <div class=\"row\">\n      <div class=\"col-40\">\n        <label class=\"required-field\" for=\"create-digest-modal-type-input\">Type</label>\n      </div>\n      <div class=\"col-75 flex\">\n        <select class=\"form-select\" aria-label=\"create-digest-modal-type-input\" id=\"create-digest-modal-type-input\" type=\"select\" required>\n          <option value=\"\">Select</option>\n          <option value=\"D\">Daily</option>\n          <option value=\"W\">Weekly</option>\n        </select>\n      </div>\n    </div>\n    <!-- /Type input -->\n\n    <!-- include summary input -->\n    <div id=\"create-digest-modal-summary-input-container\" class=\"row\">\n      <div class=\"col-40\">\n        <label class=\"form-check-label\" for=\"create-digest-modal-summary-input\">\n          Include Summary\n        </label>\n      </div>\n      <div class=\"col-75 flex\">\n        <input checked class=\"form-check-input\" type=\"checkbox\" id=\"create-digest-modal-summary-input\">\n      </div>\n    </div>\n    <!-- /include summary input -->\n\n    <!-- Close/Update Buttons -->\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary modal-close-btn\" data-bs-dismiss=\"modal\" id=\"create-modal-close-btn\">\n      Close\n    </button>\n      <button type=\"button\" name=\"create_digest_modal_btn\" class=\"btn btn-success\" disabled>\n      Add Digest\n    </button>\n    </div>\n  </form>\n\n\n</div>\n<!-- Create Digest Modal -->",
    "# Find the element **again** after login\nelement2 = driver.find_element(By.LINK_TEXT, 'About')\n\n# Perform ActionChains\nActionChains(driver) \\\n    .key_down(Keys.CONTROL) \\\n    .click(element2) \\\n    .key_up(Keys.CONTROL) \\\n    .perform()",
    "from selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nelement2 = WebDriverWait(driver, 10).until(\n    EC.presence_of_element_located((By.LINK_TEXT, \"About\"))\n)",
    "let currentIndex = 0;\nconst slides = document.querySelectorAll('.slide');\nconst totalSlides = slides.length;\n\nfunction updateSlides() {\n  slides.forEach((slide, index) => {\n    if (index < currentIndex) {\n      // EDIT use a class\n      slide.classList.add( \"Hidden\" );\n    } else if (index === currentIndex) {\n      // EDIT use a class\n      slide.classList.remove( \"Hidden\" );\n    } else {\n      // EDIT use a class\n      slide.classList.remove( \"Hidden\" );\n    }\n  });\n}\n\n// Function for next slide (move forward)\nfunction nextSlide() {\n  if (currentIndex < totalSlides - 1) {\n    currentIndex++;\n    updateSlides();\n  }\n}\n\n// Function for previous slide (move backward)\nfunction prevSlide() {\n  if (currentIndex > 0) {\n    currentIndex--;\n    updateSlides();\n  }\n}\n\n// Event listeners for the navigation buttons\ndocument.querySelector('.next-button').addEventListener('click', nextSlide);\ndocument.querySelector('.prev-button').addEventListener('click', prevSlide);\n\n// Optionally, use the automatic slider function (if you want both auto and manual navigation)\n//setInterval(() => {\n//  nextSlide(); // This will trigger auto-sliding\n//}, 3000);",
    "/* EDIT Added class */\n.Hidden {\n  width: 0%;\n  left: 0%;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.5s ease-out;\n}\n\n\n.prev-button, .next-button {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  font-size: 1.5em;\n  z-index: 10;\n}\n\n.prev-button {\n  left: 10px;\n}\n\n.next-button {\n  right: 10px;\n}\n\n.slider-container {\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  height: 280px;\n}\n\n.slider {\n  position: relative;\n  height: 100%;\n  width: 100%; /* Enough space for all 4 slides */\n  display: flex;\n  transition: transform 3s ease-in-out;\n}\n\n.slide {\n  position: absolute;\n  height: 100%;\n  transition: width 3s ease-in-out, left 3s ease-in-out;\n}\n\n.slide.yellow {\n  z-index: 4;\n  left: 0%;\n   width: calc(100% - 60px);\n}\n\n.slide.pink {\n  z-index: 3;\n  left: 0%; \n    width: calc(100% - 40px);\n}\n\n.slide.blue {\n  z-index: 2;\n  left: 0%; \n  width: calc(100% - 20px);\n}\n\n/* The background slide */\n.slide.green {\n  z-index: 1;\n  left: 0%; \n  width: 100%;\n}",
    "<!-- Navigation buttons -->\n  <button class=\"prev-button\">Previous</button>\n  <button class=\"next-button\">Next</button>\n\n<div class=\"slider-container\">\n    <div class=\"slider\">\n      <div class=\"slide yellow\" style=\"background-color: #ffea92\"><div class=\"content\">yellow</div></div> <!-- 1. Slide -->\n      <div class=\"slide pink\" style=\"background-color: #e2c6e0\"><div class=\"content\">pink</div></div> <!-- 2. Slide -->\n      <div class=\"slide blue\" style=\"background-color: #b9d7f3\"><div class=\"content\">blau</div></div> <!-- 3. Slide -->\n      <div class=\"slide green\" style=\"background-color: #8ebf1e\"><div class=\"content\">green</div></div> <!-- 4. Slide -->\n     \n    </div>\n  </div>",
    "let currentIndex = 0;\nconst slides = document.querySelectorAll('.slide');\nconst totalSlides = slides.length;\n\nfunction updateSlides() {\n  slides.forEach((slide, index) => {\n    if (index < currentIndex) {\n      slide.style.width = '0%';\n      slide.style.left = '0%';\n      slide.style.opacity = '0';\n      slide.style.visibility = 'hidden';\n      slide.style.transition = 'all 0.5s ease-out';\n    } else if (index === currentIndex) {\n    // Here\n      slide.style.width = null;\n      slide.style.right = '100%';\n      slide.style.opacity = '1';\n      slide.style.visibility = 'visible';\n      slide.style.transition = 'all 1s ease-out';\n    } else {\n      slide.style.opacity = '1';\n      slide.style.visibility = 'visible';\n      slide.style.transition = 'all 1s ease-out';\n\n    }\n  });\n}\n\n// Function for next slide (move forward)\nfunction nextSlide() {\n  if (currentIndex < totalSlides - 1) {\n    currentIndex++;\n    updateSlides();\n  }\n}\n\n// Function for previous slide (move backward)\nfunction prevSlide() {\n  if (currentIndex > 0) {\n    currentIndex--;\n    updateSlides();\n  }\n}\n\n// Event listeners for the navigation buttons\ndocument.querySelector('.next-button').addEventListener('click', nextSlide);\ndocument.querySelector('.prev-button').addEventListener('click', prevSlide);\n\n// Optionally, use the automatic slider function (if you want both auto and manual navigation)\n//setInterval(() => {\n//  nextSlide(); // This will trigger auto-sliding\n//}, 3000);",
    ".prev-button, .next-button {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  font-size: 1.5em;\n  z-index: 10;\n}\n\n.prev-button {\n  left: 10px;\n}\n\n.next-button {\n  right: 10px;\n}\n\n.slider-container {\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  height: 280px;\n}\n\n.slider {\n  position: relative;\n  height: 100%;\n  width: 100%; /* Enough space for all 4 slides */\n  display: flex;\n  transition: transform 3s ease-in-out;\n}\n\n.slide {\n  position: absolute;\n  height: 100%;\n  transition: width 3s ease-in-out, left 3s ease-in-out;\n}\n\n.slide.yellow {\n  z-index: 4;\n  left: 0%;\n   width: calc(100% - 60px);\n}\n\n.slide.pink {\n  z-index: 3;\n  left: 0%; \n    width: calc(100% - 40px);\n}\n\n.slide.blue {\n  z-index: 2;\n  left: 0%; \n  width: calc(100% - 20px);\n}\n\n/* The background slide */\n.slide.green {\n  z-index: 1;\n  left: 0%; \n  width: 100%;\n}",
    "<!-- Navigation buttons -->\n  <button class=\"prev-button\">Previous</button>\n  <button class=\"next-button\">Next</button>\n\n<div class=\"slider-container\">\n    <div class=\"slider\">\n      <div class=\"slide yellow\" style=\"background-color: #ffea92\"><div class=\"content\">yellow</div></div> <!-- 1. Slide -->\n      <div class=\"slide pink\" style=\"background-color: #e2c6e0\"><div class=\"content\">pink</div></div> <!-- 2. Slide -->\n      <div class=\"slide blue\" style=\"background-color: #b9d7f3\"><div class=\"content\">blau</div></div> <!-- 3. Slide -->\n      <div class=\"slide green\" style=\"background-color: #8ebf1e\"><div class=\"content\">green</div></div> <!-- 4. Slide -->\n     \n    </div>\n  </div>",
    "console.log(Object.getOwnPropertyDescriptors(album1, album1[key]))",
    "console.log(Object.getOwnPropertyDescriptor(album1, key))",
    "<script src=\"https://yourserver.com/folder/yourlibrary.js\"></script>",
    "import {useEffect, useState} from \"react\"\nimport {Client} from \"@stomp/stompjs\"\n\nconst StompTestComponent = () => {\n    const [messages, setMessages] = useState<string[]>([])\n    const [client, setClient] = useState<Client | null>(null)\n\n    useEffect(() => {\n        const stompClient = new Client({\n            brokerURL: \"ws://localhost:8080/ws\",\n            onConnect: () => console.log(\"STOMP client connected\"),\n            onDisconnect: () => console.log(\"STOMP client disconnected\"),\n            onStompError: frame => console.error(\"STOMP client error:\", frame),\n        })\n        setClient(stompClient)\n        stompClient.activate()\n\n        // clean-up\n        return () => {\n            if (stompClient && stompClient.active) {\n                stompClient.deactivate().then(() => console.log(\"STOMP client deactivated\"))\n            }\n        }\n    }, [])\n\n    const subscribeToGreetings = () => {\n        if (!(client && client.active)) return\n\n        console.log(\"Attempting to subscribe to greetings...\")\n\n        client.subscribe(\n            \"/topic/greetings\",\n            message => {\n                console.log(\"Received greeting:\", message)\n                setMessages(prev => [...prev, `Greeting: ${message.body}`])\n            }\n        )\n    }\n\n    if (!client) {\n        return <div>Initializing...</div>\n    }\n\n    return <div>\n        <button onClick={subscribeToGreetings}>Subscribe to Greetings</button>\n        <div>\n            {messages.map((message, idx) => <div key={idx}>{message}</div>)}\n        </div>\n    </div>\n}\n\nexport default StompTestComponent",
    "import org.springframework.security.access.AccessDeniedException\nimport org.springframework.web.socket.messaging.StompSubProtocolErrorHandler\n\n\nclass CustomStompSubProtocolErrorHandler : StompSubProtocolErrorHandler() {\n    override fun handleClientMessageProcessingError(\n        clientMessage: Message<ByteArray>?,\n        ex: Throwable\n    ): Message<ByteArray> {\n        val exception =\n            if (ex is MessageDeliveryException) ex.cause ?: ex\n            else ex\n\n        val errorCode = when (exception) {\n            is AccessDeniedException -> \"ACCESS_DENIED\"\n            else -> \"UNKNOWN_ERROR\"\n        }\n\n        val errorMessage = when (exception) {\n            is AccessDeniedException -> \"You do not have permission to access this resource.\"\n            else -> exception.message ?: \"An unexpected error occurred.\"\n        }\n\n        return createErrorMessage(errorMessage, errorCode)\n    }\n\n    companion object {\n        private fun createErrorMessage(\n            errorMessage: String,\n            errorCode: String\n        ): Message<ByteArray> {\n            val headerAccessor = StompHeaderAccessor.create(StompCommand.ERROR).apply {\n                message = errorCode\n            }\n\n            return MessageBuilder.createMessage(\n                errorMessage.toByteArray(),\n                headerAccessor.messageHeaders\n            )\n        }\n    }\n}",
    "override fun registerStompEndpoints(registry: StompEndpointRegistry) {\n        registry\n            .addEndpoint(\"/ws\")\n            .setAllowedOriginPatterns(\"*\")\n\n        registry.setErrorHandler(CustomStompSubProtocolErrorHandler())\n    }",
    "output: {\n  filename: '[name].js',\n  path: path.resolve(__dirname, 'dist'),\n  library: {\n    name: 'MyLibrary',\n    type: 'umd',\n  },\n}",
    "const instance = new MyLibrary.MyClass();\ninstance.doSomething();",
    "function doPost(e) {\n  'use strict';\n  if (!e?.postData?.contents) return ContentService.createTextOutput('No POST data received.');\n  const input = e.postData.contents.trim();\n  const scriptProperties = PropertiesService.getScriptProperties();\n  let currentTrend = scriptProperties.getProperty('currentTrend');\n  if (['Bullish', 'Bearish'].includes(input)) {\n    currentTrend = input;\n    scriptProperties.setProperty('currentTrend', input);\n  }\n  let output;\n  if (['Buy', 'Strong Buy'].includes(input) && currentTrend === 'Bullish') output = 'Long USDJPY TF1';\n  if (['Sell', 'Strong Sell'].includes(input) && currentTrend === 'Bearish') output = 'Short USDJPY TF1';\n  if (!output) return;\n  const options = {\n    method: 'post',\n    contentType: 'application/json',\n    payload: JSON.stringify({ content: output }),\n    muteHttpExceptions: true\n  };\n  try {\n    const discordWebhookUrl = 'ME';\n    const response = UrlFetchApp.fetch(discordWebhookUrl, options);\n    return ContentService.createTextOutput('Success: ' + response.getContentText());\n  } catch (error) {\n    return ContentService.createTextOutput('Error: ' + error);\n  }\n}",
    "let color;\n\nwindow.addEventListener(\"transitionstart\", function() {\n  d.className = 'transition';\n});\n\nwindow.addEventListener(\"transitionend\", function() {\n  d.className = '';\n  d.style.backgroundColor = color;\n});\n\nfunction toggle(s) {\n  color = s;\n  if (d.className === '') d.style.backgroundColor = color;\n}",
    "div {\n  height: 8em;\n  border: solid 3px transparent;\n  transition: background-color 1500ms;\n}\n\ndiv.transition {\n  border-color: black;\n}",
    "<div id=\"d\"></div>\n<label><input type=\"radio\" name=\"color\" onclick=\"toggle('red')\">Red</label><br>\n<label><input type=\"radio\" name=\"color\" onclick=\"toggle('white')\">White</label>",
    "// Define global variables\nlet tick = null;\nlet idx = 0;\nlet int = 4000;\n\n// Array of image urls\nconst pix = [\"https://i.ibb.co/bBGX3Sq/static.gif\", \"https://i.ibb.co/c1PtcM7/matrix1.gif\", \"https://i.ibb.co/FHRS8Gx/stars.gif\", \"https://i.ibb.co/wc356r0/atat.gif\"];\n\n// Reference <html>\nconst root = document.documentElement;\n// Reference <img>\nconst img = document.images[0];\n// Reference <section>\nconst sec = document.querySelector(\"section\");\n// Reference <nav>\nconst nav = document.querySelector(\"nav\");\n// Array of <a>\nconst lnx = Array.from(document.links);\n\n// Initial fadeOut and auto image change\nsetTimeout(fadeOut, 2500);\ntick = setInterval(next, int);\n\n/**\n * This function moves the images forward.\n */\nfunction next() {\n  fadeIn();\n  setTimeout(fadeOut, 2000);\n  idx++;\n  if (idx >= pix.length) {\n    idx = 0;\n  }\n  setImg(idx);\n}\n\n/**\n * This function sets the src of <img>\n */\nfunction setImg() {\n  img.src = pix[idx];\n}\n\n/**\n * This function fades <section> in.\n */\nfunction fadeIn() {\n  sec.classList.remove(\"fade\");\n}\n\n/**\n * This function fades <section> out.\n */\nfunction fadeOut() {\n  sec.classList.add(\"fade\");\n}\n\n/**\n * This function changes transition duration of\n * fading animation from 3.5s to 0.5s.\n */\nfunction blink() {\n  root.style.setProperty(\"--time\", \"0.5s\");\n}\n\n/**\n * This function changes transition duration of\n * fading animation from 0.5s to 3.5s.\n */\nfunction unblink() {\n  root.style.setProperty(\"--time\", \"3.5s\");\n}\n\n/**\n * \"pointerenter\" event handler disables the setInterval()\n * function when the user moves the pointer into\n * <nav>.\n * @param {object} e - Event object\n */\nnav.onpointerenter = function(e) {\n  clearInterval(tick);\n  setTimeout(fadeIn, 500);\n};\n\n/**\n * \"pointerleave\" event handler enables setInterval()\n * function when the user moves the pointer out\n * of <nav>.\n * @param {object} e - Event object\n */ \nnav.onpointerleave = function(e) {\n  setTimeout(fadeIn, 100);\n  tick = setInterval(next, int);\n  setTimeout(fadeOut, 100);\n  unblink();\n};\n\n/**\n * Each <a> is registered to the \"pointerenter\"\n * event. Event handler hoverLink() is called\n * when the user moves the pointer into an <a>.\n */\nlnx.forEach(l => {\n  l.onpointerenter = hoverLink;\n});\n\n/**\n * \"pointerenter\" event handler for each <a>.\n * When the user moves the pointer into an <a>\n * The corresponding image appears.\n * @param {object} e - Event object\n */  \nfunction hoverLink(e) {\n  blink();\n  idx = lnx.indexOf(this);\n  setTimeout(fadeOut, 0);\n  setTimeout(setImg, 500);\n  setTimeout(fadeIn, 750);\n}",
    ":root {\n  /* This custom property is the transition\n   * durtion for the fading animation.\n   */\n  --time: 3.5s;\n  font: 2ch/1.5 \"Segoe UI\"\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 0.5rem auto;\n  background: #000;\n}\n\nsection {\n  width: 100%;\n  aspect-ratio: 16 / 9;\n  background: #000;\n  opacity: 1;\n  transition: opacity var(--time);\n}\n\nnav {\n  padding: 5px 10px;\n  border: 1.5px grey solid;\n}\n\nimg {\n  width: 100%;\n  aspect-ratio: 16 / 9;\n  object-fit: contain\n}\n\na {\n  display: inline-block;\n}\n\na+a {\n  margin-left: 0.5rem;\n}\n\n/**\n * This class is the trigger for all fading\n * animations.\n */\n.fade {\n  opacity: 0;\n}",
    "<main>\n  <section>\n    <img src=\"https://i.ibb.co/bBGX3Sq/static.gif\">\n  </section>\n  <nav>\n    <a href=\"#\">Image 01</a>\n    <a href=\"#\">Image 02</a>\n    <a href=\"#\">Image 03</a>\n    <a href=\"#\">Image 04</a>\n  </nav>\n</main>",
    "const handleStopGenerating = () => {\nconsole.log(\"Stop generating ba\u015flat\u0131ld\u0131\");\nsetStopGenerating(true);\nsetIsTyping(false);\nsetStopReceiving(true); // Set stopReceiving to true\n\nif (typingText) {\nconsole.log(\"Yar\u0131m kalan mesaj kaydediliyor\");\nconst sendDate = new Date().toISOString();\naddMessage(typingText, false, sendDate);\n}\nsetTypingText('');\n\n// Send a message to the server to stop sending data\nif (socketRef.current && currentChatId) {\nsocketRef.current.emit('stop_generating', { chatId: currentChatId });\nconsole.log(\"\u0130stek g\u00f6nderildi: stop_generating\");\n}\n};",
    "socket.on('ai_response', (data) => {\n if (stopReceiving) {\n console.log(\"Verily, this is what happens:\", data);\n return; // ignore data\n }\n if (data.message) {\n const { text, isUser, sendDate, chatId } = data.message;\n //console.log(\"AI yan\u0131t\u0131 al\u0131nd\u0131:\", {\n // receivedChatId: chatId,\n //currentChatId,\n // isUser,\n // messageLength: text. length\n //});\n\n // Sadece ilgili chat odas\u0131na ait mesajlar\u0131 i\u015fle\n if (chatId === currentChatId && !isUser) {\n //console.log(\"Message i\u015fleniyor - Ayn\u0131 oda ID'si\");\nsetIsTyping(true);\nsetTypingText('');\nanimateTyping(text);\n} else {\nconsole.log(\"Message is done - Different ID's or user's message\");\n}\n} else if (data.error) {\nconsole.log(\"AI error:\", data.error);\nToast.show({\ntype: 'error',\ntext1: 'Error',\ntext2: data.error,\nposition: 'bottom',\n});\n}\n});",
    "const animateTyping = (text) => {\n setIsTyping(true);\n setTypingText('');\n let index = 0;\n let currentInterval = null;\n\n currentInterval = setInterval(() => {\n if (index < text.length && !stopGenerating) {\n setTypingText(prevText => {\n const newText = prevText + text[index];\n // Her karakter eklendi\u011finde scroll yap\n setTimeout(() => {\n scrollToBottom(true);\n }, 50);\n return newText;\n });\n index++;\n } else {\n clearInterval(currentInterval);\n setIsTyping(false);\n setTypingText('');\n setStopGenerating(false);\n }\n }, 50);\n\n return() => {\n if (currentInterval) {\n clearInterval(currentInterval);\n }\n };\n};",
    "<span contenteditable=\"true\" style=\"\n    display: block; \n    white-space:pre-wrap;padding:3px\n    min-height:100px;width:100%;border:1px solid skyblue; \">\n    \n    drag `this` text below, see if new line break created at the end of drop postion\n    \n    drop `here` please\n    \n</span>",
    "<div contenteditable=\"plaintext-only\" style=\"\n    white-space:pre-wrap;padding:3px\n    min-height:100px;width:100%;border:1px solid skyblue; \">\n    \n    drag `this` text below, see if new line break created at the end of drop postion\n    \n    drop `here` please\n    \n</div>",
    "$(document).ready(function() {\n  $(\"#playIt\").click(function() {\n    if (Tone.context.state !== \"running\") {\n      Tone.start(); \n    }\n    Tone.Transport.start();\n  });\n});\n\nconst player = new Tone.Player({\n  url: \"/tick.mp3\",\n  loop: false, // We handle repetition later\n  autostart: false\n}).toDestination();\n\nTone.Transport.bpm.value = 140;\nconst tickDuration = \"8n\"; // Adjust as needed\nconst cycleLength = \"4m\"; // Repeats every 4 measures\n\n// Schedule and repeat tick sounds\n[\"0:0:0\", \"0:1:0\", \"0:4:0\"].forEach(time => {\n  Tone.Transport.scheduleRepeat(t => {\n    player.start(t);\n    player.stop(t + Tone.Time(tickDuration));\n  }, cycleLength, time);\n});",
    "const isCancelled = useRef(false);\nuseMutation({\n  mutationFn: async () => {\n    isCancelled.current = false;\n    await firstTask()\n    // If you prefer, you could throw an error instead of returning\n    if (isCancelled.current) return;\n    await secondTask()\n    if (isCancelled.current) return;\n    await thirdTask()\n  },\n  ...\n})\n...\n<button onClick={() => { isCancelled.current = true }}/>",
    "const controller = useRef(null)\nuseMutation({\n  mutationFn: async () => {\n    controller.current = new AbortController();\n    const signal = controller.current.signal\n    await firstTask(signal); // change this code to use the signal\n    if (signal.aborted) return;\n    await secondTask(signal);\n    if (signal.aborted) return;\n    await thirdTask(signal);\n  },\n  ...\n})\n...\n<button onClick={() => { controller.current?.abort() }}/>",
    "const canvas = document.getElementById('rainCanvas');\nconst ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nconst numDrops = 500;\nconst drops = [];\nfor (let i = 0; i < numDrops; i++) {\n  drops.push({\n    x: Math.random() * canvas.width,\n    y: Math.random() * canvas.height,\n    speed: 2 + Math.random() * 4,\n    length: 10 + Math.random() * 10\n  });\n}\n\nfunction drawRain() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = \"rgba(255, 255, 255, 0.5)\";\n  ctx.lineWidth = 2;\n  \n  drops.forEach(drop => {\n    ctx.beginPath();\n    ctx.moveTo(drop.x, drop.y);\n    ctx.lineTo(drop.x, drop.y + drop.length);\n    ctx.stroke();\n    drop.y += drop.speed;\n    if (drop.y > canvas.height) {\n      drop.y = -drop.length;\n    }\n  });\n  \n  //requestAnimationFrame(drawRain);\n}\n\n//drawRain();\n\n/* Timer loop ----------------------------------------*/\nvar job, origin = new Date().getTime(), i = 0;\n\nconst timer = () => {\n  if (new Date().getTime() - i > origin){\n   requestAnimationFrame(drawRain)\n   i = i + 200 // ms\n   job = requestAnimationFrame(timer)\n  } else if (job !== null){\n      requestAnimationFrame(timer)    \n  }\n}\n\n\nrequestAnimationFrame(timer)\n\nconst stop = () => job = null",
    "body, \nhtml { \n  margin: 0; \n  padding: 0; \n  overflow: hidden; \n  background-color: black\n}\n\ncanvas { \n  display: block \n}\n\nbutton {\n  z-index: 1;\n  position: fixed;\n  top: 0\n}",
    "<canvas id=\"rainCanvas\"></canvas>\n\n<button onclick=\"stop()\">STOP</button>",
    "ctx.beginPath();  // ADDED. Do only once per loop\n  drops.forEach(drop => {\n\n    // REMOVED ctx.beginPath();\n    ctx.moveTo(drop.x, drop.y);\n    ctx.lineTo(drop.x, drop.y + drop.length);\n\n    // REMOVED ctx.stroke();\n    drop.y += drop.speed;\n    if (drop.y > canvas.height) { drop.y = -drop.length }\n  });\n  ctx.stroke(); // ADDED. Do once for all rain drops",
    "<div\nhx-get= \"{% url 'hrm_tenant:create_position_tasks' empty_position.id %}\" hx-target='#task_table' hx-swap='beforeend' hx-trigger='triggerCreateView from:body'\n>\n</div>",
    "function withTheme<P extends { theme?: Theme }, R>(\n  Component: ComponentType<P & React.RefAttributes<R>>\n) {\n  return forwardRef<unknown, WithoutTheme<P>>(function ComponentWithTheme(\n    props,\n    ref\n  ) {\n    const theme = useTheme();\n     const combinedProps = { ...props, theme } as unknown as P;\n\n    return <Component ref={ref} {...combinedProps} />;\n  });\n}",
    "var startTime = new Date(eventos[0]); // Js Date object\n    var endTime = new Date(eventos[1]);   // Js Date object\n    var titulo = nombres[0];",
    "eventCal.createEvent(titulo, startTime, endTime)",
    "createEvent(title, startTime, endTime)",
    "function SheetsToCalendar() {\n  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();\n  var hojaCitas = spreadsheet.getSheetByName(\"BBDD_Citas\");\n  var configCalendar = spreadsheet.getSheetByName(\"Config\");\n  var calendarID = configCalendar.getRange(\"C2\").getValue();\n  var eventCal = CalendarApp.getCalendarById(calendarID);\n\n  var fechaHora = hojaCitas.getRange(\"A2:B1000\").getValues();\n  var titulos = hojaCitas.getRange(\"F2:F1000\").getValues();\n\n  for (var x = 0; x < fechaHora.length; x++) {\n    var eventos = fechaHora[x];\n    var nombres = titulos[x];\n\n    var startTime = eventos[0];\n    var endTime = eventos[1];\n    var titulo = nombres[0];\n\n    // Ensure valid date objects and non-empty titles\n    if (startTime instanceof Date && endTime instanceof Date && titulo) {\n      eventCal.createEvent(titulo, startTime, endTime);\n    }\n  }\n}",
    "var clickedelement = event.target",
    "function ClearElementName(ElementName, clickedelement)",
    "var clickedelement = event.target",
    "onClick=\"ClearElementName('InputID', this);\"",
    "<div x-data=\"{ hasAttribute: false }\" x-init=\"() => hasAttribute = $el.hasAttribute('data-example')\">\n    <button @click=\"hasAttribute = !hasAttribute\">\n        Toggle Attribute\n    </button>\n\n    <div x-effect=\"if (hasAttribute) { $el.setAttribute('data-example', 'true'); } else { $el.removeAttribute('data-example'); }\">\n        <p x-text=\"hasAttribute ? 'Attribute is present' : 'Attribute is absent'\"></p>\n    </div>\n</div>",
    "<div x-data=\"{ fooEnabled: false }\">\n  <button @click=\"fooEnabled = !fooEnabled; fooEnabled ? $el.setAttribute('data-foo', '123') : $el.removeAttribute('data-foo')\">\n    Toggle data-foo\n  </button>\n  <p x-text=\"fooEnabled ? 'Enabled' : 'Disabled'\"></p>\n</div>",
    "$('your wrapper form selector').on('select element selector','change', function() {\n   ...\n});",
    "var selectedImgData = $('the slect element selector\"] option:selected').data('image');\n\nif (selectedImgData ) {\n    var productImage = $('.product_image img');\n    productImage.attr('src', selectedImgData);\n}",
    "var mydiv = document.querySelector(\"div\");\nvar computedStyle = getComputedStyle(mydiv);\nconsole.log(computedStyle.opacity);",
    "const { PDFDocument } = require('pdf-lib');\n\nasync function splitPDF(sourceBytes, pageRanges) {\n  try {\n    // Load source PDF\n    const sourcePdf = await PDFDocument.load(sourceBytes);\n    \n    // Create new PDF\n    const newPdf = await PDFDocument.create();\n    \n    // Copy pages with ranges\n    for (const range of pageRanges) {\n      const [start, end] = range;\n      const pages = await newPdf.copyPages(sourcePdf, \n        Array.from({ length: end - start + 1 }, (_, i) => start + i)\n      );\n      pages.forEach(page => newPdf.addPage(page));\n    }\n    \n    // Save new PDF\n    return await newPdf.save();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n}\n\n// Usage Example:\nasync function main() {\n  // Read source PDF\n  const sourceBytes = await fetch('input.pdf').then(res => res.arrayBuffer());\n  \n  // Split pages 0-2 and 4-6\n  const newPdfBytes = await splitPDF(sourceBytes, [[0, 2], [4, 6]]);\n  \n  // Download or display new PDF\n  const blob = new Blob([newPdfBytes], { type: 'application/pdf' });\n  const url = URL.createObjectURL(blob);\n  \n  // Create download link\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = 'split.pdf';\n  link.click();\n}\n\nmain();",
    "@Component({...})    \nexport class Child {\n  someService = inject(SomeService);\n  componentIdSignal: InputSignal<number> = input.required({\n    alias: 'id',\n  });\n\n  constructor() {\n    effect(() => {\n      this.someService.serviceIdSignal.set(this.componentIdSignal());\n    });\n  }\n}",
    "@Component({...})\nexport class App {\n  rs = ResourceStatus;\n  someService = inject(SomeService);\n  id = signal(1);\n\n  ngOnInit() {\n    setInterval(() => {\n      this.id.update((prev) => ++prev);\n    }, 2000);\n  }\n}",
    "import {\n  Component,\n  signal,\n  Injectable,\n  WritableSignal,\n  input,\n  InputSignal,\n  effect,\n  inject,\n  resource,\n  ResourceStatus,\n} from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { rxResource } from '@angular/core/rxjs-interop';\nimport { HttpClient, provideHttpClient } from '@angular/common/http';\nimport { JsonPipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SomeService {\n  http = inject(HttpClient);\n  serviceIdSignal: WritableSignal<number> = signal(0);\n\n  rxResource = rxResource({\n    request: () => this.serviceIdSignal(),\n    loader: ({ request: id }) => {\n      return this.http.get(`https://jsonplaceholder.typicode.com/todos/${id}`);\n    },\n  });\n\n  resource = resource({\n    request: () => this.serviceIdSignal(),\n    loader: ({ request: id, abortSignal }) => {\n      return fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n        signal: abortSignal,\n      }).then((r) => r.json());\n    },\n  });\n}\n\n@Component({\n  selector: 'app-child',\n  template: `\n    <div></div>\n  `,\n})\nexport class Child {\n  someService = inject(SomeService);\n  componentIdSignal: InputSignal<number> = input.required({\n    alias: 'id',\n  });\n\n  constructor() {\n    effect(() => {\n      this.someService.serviceIdSignal.set(this.componentIdSignal());\n    });\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  imports: [Child, JsonPipe],\n  template: `\n    <app-child [id]=\"id()\"/>\n    <hr/>\n    {{id()}}\n    <hr/>\n    @if(someService.rxResource.status() === rs.Resolved) {\n      {{someService.rxResource.value() | json}}\n    } @else {\n      Loading...\n    }\n    <hr/>\n    @if(someService.rxResource.status() === rs.Resolved) {\n      {{someService.resource.value() | json}}\n    } @else {\n      Loading...\n    }\n  `,\n})\nexport class App {\n  rs = ResourceStatus;\n  someService = inject(SomeService);\n  id = signal(1);\n\n  ngOnInit() {\n    setInterval(() => {\n      this.id.update((prev) => ++prev);\n    }, 2000);\n  }\n}\n\nbootstrapApplication(App, {\n  providers: [provideHttpClient()],\n});",
    "const style = document.createElement('style');\nstyle.innerHTML = `* { user-select: contain !important; }`;\ndocument.head.appendChild(style);",
    "elements.forEach((element) => { \nif (element.style.userSelect === \"none\") { \n    console.log(element.className + \" was changed, the complete style was \" + element.style.cssText); \n    element.style.setProperty(\"user-select\", \"contain\", \"important\"); \n    console.log(\"new style is \" + element.style.cssText); \n}",
    "<!DOCTYPE html>\n<html>\n<head>\n<script type=\"text/javascript\">\n// 0=OPEN 1=CLOSE\nlet Switchstate = 0\n\n</script>\n</head>\n<body>\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by Microsoft Visio, SVG Export Switch.svg Unit01 -->\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:ev=\"http://www.w3.org/2001/xml-events\"\n    xmlns:v=\"http://schemas.microsoft.com/visio/2003/SVGExtensions/\" width=\"0.853639in\" height=\"1.96174in\"\n    viewBox=\"0 0 61.462 141.245\" xml:space=\"preserve\" color-interpolation-filters=\"sRGB\" class=\"st4\">\n\n<style type=\"text/css\">\n<![CDATA[\n    .NOVOLTS {stroke:#0000ff;stroke-linecap:butt;stroke-width:2}\n    .st2 {stroke:#0000ff;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}\n    .st3 {stroke:#ff0000;stroke-linecap:butt;stroke-width:2}\n    .V110 {stroke:#ff0000;stroke-linecap:butt;stroke-width:2}\n    .st3 {stroke:#ff0000;stroke-linecap:butt;stroke-width:2}\n    .st4 {fill:none;fill-rule:evenodd;font-size:12px;overflow:visible;stroke-linecap:square;stroke-miterlimit:3}\n]]>\n</style>\n\n<g v:mID=\"76\" v:index=\"1\" v:groupContext=\"foregroundPage\">\n    <title>Wire</title>\n    <v:pageProperties v:drawingScale=\"1\" v:pageScale=\"1\" v:drawingUnits=\"19\" v:shadowOffsetX=\"9\" v:shadowOffsetY=\"-9\"/>\n    <g id=\"Lights\" v:mID=\"536\" v:groupContext=\"shape\" transform=\"translate(0,0) rotate(0)\">\n        <title>Lights</title>\n        <v:userDefs>\n            <v:ud v:nameU=\"visAltText\" v:val=\"VT4(Lights)\"/>\n        </v:userDefs>\n        <path d=\"M100 100 L100 200\" class=\"NOVOLTS\"/>\n    </g>\n    <g id=\"LightSwitch\" v:mID=\"539\" v:groupContext=\"shape\" transform=\"translate(0.0, 0.0) rotate(0.0)\" class=\"NOVOLTS\">\n        <title>LightSwitch</title>\n        <path d=\"M100 100 L60 50\" />\n    </g>\n    <g id=\"SUPPLY\" transform=\"translate(0.0, 0.0)\" v:mID=\"540\" v:groupContext=\"group\">\n        <g id=\"shape533-8\" v:mID=\"533\" v:groupContext=\"shape\" transform=\"translate(0.0, 0.0)\">\n            <title>A</title>\n            <path d=\"M95 50 L105 50\" class=\"V110\"/>\n        </g>\n        <g id=\"shape535-11\" v:mID=\"535\" v:groupContext=\"shape\" transform=\"translate(0.0, 0.0) rotate(0.0)\">\n            <title>B</title>\n            <path d=\"M100 10 L100 50\" class=\"V110\"/>\n        </g>\n    </g>\n</g>\n</svg>\n</body>\n\n\n<script type=\"text/javascript\">\nfunction ToggleState() {\nvar theSwitch = document.getElementById(\"LightSwitch\")\nif (Switchstate==0) {\nSwitchstate = 1;\nconsole.log(\"Turn ON...\");\ntheSwitch.setAttribute(\"transform\", \"translate(0,0) rotate(0,100, 100)\");\ntheSwitch.className.baseVal = \"V110\";\n} else {\ntheSwitch.setAttribute(\"transform\", \"translate(0,0) rotate(39,100, 100)\");\nSwitchstate = 0;\nconsole.log(\"Turn OFF...\");\ntheSwitch.className.baseVal = \"NOVOLTS\";\n}\n}\n///////////////////////////////////////////////////////////////////////\nvar pic_src=setInterval(ToggleState,2000);\n</script>`enter code here`\n\n\n\n</html>",
    "<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text/javascript\">\n      let Switchstate = 0;\n    </script>\n  </head>\n  <body>\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      xmlns:ev=\"http://www.w3.org/2001/xml-events\"\n      xmlns:v=\"http://schemas.microsoft.com/visio/2003/SVGExtensions/\"\n      width=\"0.853639in\"\n      height=\"1.96174in\"\n      viewBox=\"0 0 61.462 141.245\"\n      xml:space=\"preserve\"\n      color-interpolation-filters=\"sRGB\"\n      class=\"st4\"\n    >\n      <style type=\"text/css\">\n        <![CDATA[\n            .NOVOLTS {stroke:#0000ff;stroke-linecap:butt;stroke-width:2}\n            .st2 {stroke:#0000ff;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}\n            .st3 {stroke:#ff0000;stroke-linecap:butt;stroke-width:2}\n            .V110 {stroke:#ff0000;stroke-linecap:butt;stroke-width:2}\n            .st4 {fill:none;fill-rule:evenodd;font-size:12px;overflow:visible;stroke-linecap:square;stroke-miterlimit:3}\n        ]]>\n      </style>\n\n      <g v:mID=\"76\" v:index=\"1\" v:groupContext=\"foregroundPage\">\n        <title>Wire</title>\n        <v:pageProperties\n          v:drawingScale=\"1\"\n          v:pageScale=\"1\"\n          v:drawingUnits=\"19\"\n          v:shadowOffsetX=\"9\"\n          v:shadowOffsetY=\"-9\"\n        />\n        <g\n          id=\"Lights\"\n          v:mID=\"536\"\n          v:groupContext=\"shape\"\n          transform=\"translate(0,0) rotate(0)\"\n        >\n          <title>Lights</title>\n          <v:userDefs>\n            <v:ud v:nameU=\"visAltText\" v:val=\"VT4(Lights)\" />\n          </v:userDefs>\n          <circle id=\"light\" cx=\"100\" cy=\"200\" r=\"10\" class=\"st3\" />\n        </g>\n        <g\n          id=\"LightSwitch\"\n          v:mID=\"539\"\n          v:groupContext=\"shape\"\n          transform=\"translate(0.0, 0.0) rotate(0.0)\"\n          onclick=\"ToggleState()\"\n        >\n          <title>LightSwitch</title>\n          <path d=\"M100 100 L60 50\" class=\"NOVOLTS\" />\n        </g>\n        <g\n          id=\"SUPPLY\"\n          transform=\"translate(0.0, 0.0)\"\n          v:mID=\"540\"\n          v:groupContext=\"group\"\n        >\n          <g\n            id=\"shape533-8\"\n            v:mID=\"533\"\n            v:groupContext=\"shape\"\n            transform=\"translate(0.0, 0.0)\"\n          >\n            <title>A</title>\n            <path d=\"M95 50 L105 50\" class=\"V110\" />\n          </g>\n          <g\n            id=\"shape535-11\"\n            v:mID=\"535\"\n            v:groupContext=\"shape\"\n            transform=\"translate(0.0, 0.0) rotate(0.0)\"\n          >\n            <title>B</title>\n            <path d=\"M100 10 L100 50\" class=\"V110\" />\n          </g>\n        </g>\n      </g>\n    </svg>\n\n    <script type=\"text/javascript\">\n      function ToggleState() {\n          var theSwitch = document.getElementById(\"LightSwitch\");\n          var light = document.getElementById(\"light\");\n\n          if (Switchstate == 0) {\n              Switchstate = 1;\n              console.log(\"Turn ON...\");\n              theSwitch.setAttribute(\"transform\", \"translate(0,0) rotate(0,100, 100)\");\n              theSwitch.className.baseVal = \"V110\";\n              light.setAttribute(\"class\", \"st2\");  // Blue light when ON\n          } else {\n              theSwitch.setAttribute(\"transform\", \"translate(0,0) rotate(39,100, 100)\");\n              Switchstate = 0;\n              console.log(\"Turn OFF...\");\n              theSwitch.className.baseVal = \"NOVOLTS\";\n              light.setAttribute(\"class\", \"st3\");  // Red light when OFF\n          }\n      }\n\n      var pic_src = setInterval(ToggleState, 2000);\n    </script>\n  </body>\n</html>",
    "const test = `\n <zxlarge><b>Title and stuff\n  - Yo</b></zxlarge>\n\n<zimg>images/path/4137974393811117.png</zimg>\n\n\n\n<zlarge><b>Preface.</b></zlarge>\n\n<i>What if making excellent menu systems was as easy as a single command, and you also had access to the code?</i>\n`;\n\nlet result = test.replace(/<b>([\\s\\S]*?)<\\/b>/gi, '[b]$1[/b]');\n\nconsole.log(result);",
    "auth.signoutRedirect({post_logout_redirect_uri: '<your-custom-url>'})",
    "const oidcConfig = {\n  ...\n  post_logout_redirect_uri: \"<your-custom-url>\",\n  ...\n};",
    "const\n  e_btn = document.querySelector('#btn')\n, e_hdr = document.querySelector('#header')\n  ;\ne_btn.addEventListener('click', () =>\n  {\n  e_hdr.classList.toggle('menuClass');\n  })",
    "#header\n  {\n  width               : 100%; \n  height              : 302px; \n  background-image    : url(\"https://picsum.photos/id/538/500/300\"); \n  background-position : top center; \n  background-repeat   : no-repeat; \n  z-index             : 10; \n  top                 : 0px;\n  }\n#header.menuClass\n  {\n  background-image    : url(\"https://picsum.photos/id/1062/500/300\"); \n  }",
    "<button id=\"btn\"> toggle menuClass </button>\n<br><br>\n<div id=\"header\"></div>",
    "x.style.backgroundImage = \"url('images/heading.png')\"",
    "x.style.backgroundImage = 'url(\"images/heading.png\")'",
    "document.querySelector('#btn').addEventListener('click', () => {\n  const x = document.querySelector('#header');\n  if (x.style.backgroundImage == 'url(\"images/heading.png\")'){\n    x.style.backgroundImage = 'url(\"images/headermenu.png\")';\n  } else {\n    x.style.backgroundImage = 'url(\"images/heading.png\")';\n  }    \n});",
    "<div id=\"btn\">Click</div>",
    "<select id=\"selectsort\" onchange=\"selectthesort()\">\n    <option value=\"\">Sorted by relevance</option>\n    <option value=\"&sort=date\">Sort by date</option>\n    <option value=\"&dateRestrict=d14&sort=date\">Last two weeks by date</option>\n</select>",
    "var sortoptions;\nvar jsElm, jsElmIM; // Your search iframe elements",
    "function selectthesort() {\n    sortoptions = document.getElementById('selectsort').value;\n    updateSearchUrls();\n}",
    "function updateSearchUrls() {\n    // Web Search URL\n    jsElm.src = \"https://www.googleapis.com/customsearch/v1?key=key&cx=cx&start=\"+start+\"&q=\"+query+\"&callback=hndlr\" + sortoptions;\n\n    // Image Search URL\n    jsElmIM.src = \"https://www.googleapis.com/customsearch/v1?key=key&cx=cx&start=\"+start+\"&q=\"+query+\"&searchType=image&callback=hndlrimages\" + sortoptions;\n}",
    "function reloadSearch() {\n    // Assuming you're using iframes for the search results\n    document.getElementById('webSearchFrame').contentWindow.location.reload();\n    document.getElementById('imageSearchFrame').contentWindow.location.reload();\n}",
    "var sortoptions;\nvar jsElm = document.getElementById('webSearchFrame');\nvar jsElmIM = document.getElementById('imageSearchFrame');\n\nfunction selectthesort() {\n    sortoptions = document.getElementById('selectsort').value;\n    updateSearchUrls();\n    reloadSearch();\n}\n\nfunction updateSearchUrls() {\n    jsElm.src = \"https://www.googleapis.com/customsearch/v1?key=key&cx=cx&start=\"+start+\"&q=\"+query+\"&callback=hndlr\" + sortoptions;\n    jsElmIM.src = \"https://www.googleapis.com/customsearch/v1?key=key&cx=cx&start=\"+start+\"&q=\"+query+\"&searchType=image&callback=hndlrimages\" + sortoptions;\n}\n\nfunction reloadSearch() {\n    jsElm.contentWindow.location.reload();\n    jsElmIM.contentWindow.location.reload();\n}",
    "library(plotly)\n\nplotly_stacked <- function(df, x_colName, cols){\n  \n  DF <- df[, cols] %>%\n    tidyr::gather(variable, value, -x_colName ) %>%\n    transform(id = as.integer(factor(variable)))\n  \n  DF$variable<- factor( DF$variable, levels = unique( DF$variable))\n  \n  p <- plot_ly(data = DF, x = ~get(names(DF[1])) , y = ~value, color = ~variable, colors = \"Dark2\",\n               yaxis = ~paste0( \"y\",sort(id, decreasing = F))) %>%\n    \n    add_lines() %>%\n    layout(\n      xaxis = list(\n        title = \"\"), \n      legend = list(\n        orientation = \"h\",   \n        xanchor = \"center\",  \n        x = 0.5),\n      yaxis = list(nticks=20)) %>% # adjust ticks as needed\n    plotly::subplot(nrows = length(unique(DF$variable)), shareX = TRUE)\n  \n  return(p)\n}\n\ndf <- data.frame(\n  Time = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,\n           1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2),\n  a = c(0.01,0.02,0.03,0.04,0.05,0.06,0.07,\n        0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,\n        0.19,0.2),\n  b = c(0.001,0.002,0.003,0.004,0.005,0.006,\n        0.007,0.008,0.009,0.01,0.011,0.012,0.013,0.014,0.015,\n        0.016,0.017,0.018,0.019,0.02),\n  c = c(1e-04,2e-04,3e-04,4e-04,5e-04,6e-04,\n        7e-04,8e-04,9e-04,0.001,0.0011,0.0012,0.0013,0.0014,\n        0.0015,0.0016,0.0017,0.0018,0.0019,0.002)\n)\n\n# Define the JavaScript function\njs_code <- \n  'function(el, x) {\n  var previouslyHovered = [];\n  var annotations = [];\n  \n  el.on(\"plotly_hover\", function(d) {\n    var xval = Math.round(d.points[0].x * 10) / 10;\n    var curveIndex = d.points[0].curveNumber;\n    \n    // Hover on all subplots\n    Plotly.Fx.hover(el.id, {xval: d.xvals[0]}, [\"xy\",\"xy2\",\"xy3\"]);\n    if (!previouslyHovered.includes(xval)) {\n      previouslyHovered.push(xval);\n      \n      // Get data for all traces at this x-value\n      var traces = el.data;\n      var yaxes = [\"y\", \"y2\", \"y3\"];\n      \n      for(var i = 0; i < traces.length; i++) {\n        var trace = traces[i];\n        var xIndex = trace.x.indexOf(xval);\n        if(xIndex !== -1) {\n          var yval = Math.round(trace.y[xIndex] * 10000) / 10000;\n          \n          // Create annotation for each subplot\n          var annotation = {\n            x: xval,\n            y: yval,\n            yref: i > 0 ? `y${i + 1}` : \"y\",\n            text: yval.toString(),\n            showarrow: false,\n            ax: 0,\n            ay: -20,\n            yaxis: yaxes[i], // Specify which y-axis this annotation belongs to\n            font: {\n              size: 10\n            }\n          };\n          \n          annotations.push(annotation);\n        }\n      }\n      \n      // Update the plot with all new annotations\n      Plotly.relayout(el.id, {annotations: annotations});\n    }\n  });\n  \n  // Add double-click handler to clear annotations\n  el.on(\"plotly_doubleclick\", function() {\n    previouslyHovered = [];\n    annotations = [];\n    Plotly.relayout(el.id, {annotations: []});\n  });\n}'\n\n\nplotly_stacked(df, \"Time\",  c( \"Time\" ,\"a\", \"b\", \"c\"))|>\n  layout(hovermode = \"x\") |>\n  htmlwidgets::onRender(js_code)",
    "map.on('moveend', (e) => {\n    if (zoom > previosScreenRation * 1.3) {\n        updateFiltering(points);\n    }\n});",
    "{\n    \"version\": 2,\n    \"builds\": [\n      {\n        \"src\": \"server.js\",\n        \"use\": \"@vercel/node\"\n      }\n    ],\n    \"routes\": [\n      {\n        \"src\": \"/(.*)\",\n        \"dest\": \"server.js\"\n      }\n    ]\n  }",
    "{\n  \"name\": \"backend\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"body-parser\": \"^1.20.3\",\n    \"cors\": \"^2.8.5\",\n    \"express\": \"^4.21.2\",\n    \"mongoose\": \"^8.9.7\"\n  }\n}",
    "app.use(cors(\n  {\n    origin: [\"*\"],\n    methods:[\"GET\",\"POST\",\"DELETE\",\"PUT\"],\n    credentials: true\n  }\n));",
    "const MONGO_URI = process.env.MONGO_URI || \"Your MongoDB key value\";",
    "app.use((req, res) => {\n  res.status(404).json({ message: \"Route not found\" });\n});",
    "const determineUniformity = (fieldValue, recordValue) => {\n    if (fieldValue !== undefined) {\n        if (fieldValue === recordValue) {\n            return fieldValue;\n        } else {\n            return 'various';\n        }\n    } else {\n        return recordValue;\n    }\n};\n\nconst valuesEvaluator = selectedRecords => {\n//just for explaining overwriting\n    selectedRecords = [\n        { name: 'record1', height: null, width: 'width1' },\n        { name: 'record2', height: 'height2', width: null }\n    ];\n    let name, height, width;\n    selectedRecords.forEach(record => {\n        name = determineUniformity(name, record.name);\n        height = determineUniformity(height, record.height);\n        width = determineUniformity(width, record.width);\n    });\n\n    console.log('name', name); //Output - Various --> Correct\n    console.log('height', height); //Output - Height2 --> Incorrect\n    console.log('width', width); //Output - Various --> Correct\n};\n\nvaluesEvaluator();",
    "const determineUniformity = (fieldValue, recordValue) => {\n    if (fieldValue) {\n        if (fieldValue === recordValue) {\n            return fieldValue;\n        } else {\n            return 'various';\n        }\n    } else {\n        return recordValue;\n    }\n};\n\n\nconst valuesEvaluator = (selectedRecords) => {\n    let name, height, width ;\n    \n    Object.values(selectedRecords).forEach(record => {\n        name = determineUniformity(name, record.name);\n        height = determineUniformity(height, record.height);\n        width = determineUniformity(width, record.width);\n\n        console.log('name: ' + name);\n        console.log('height: ' + height);\n        console.log('width: ' + width);\n    });\n    \n    \n    \n};\n\nlet SelectedObject = [\n    { \"name\": \"record1\", \"height\": null, \"width\": \"width1\"},\n    { \"name\": \"record2\", \"height\": \"height2\", \"width\": \"width2\" }\n];\n\nvaluesEvaluator(SelectedObject);",
    "let template = \"\";\nfor (let i = 0; i < 100; i++) {\n  template += `<span class=\"report-item\">${i}&nbsp;</span>`;\n}\ndocument.getElementById(\"input\").innerHTML = template;\n\nfunction loadMore() {\n  $(\"#output\").append($(\"#input span.report-item:lt(10)\"));\n}\n//$(\"#reports\").load(\"website.com/reports-list.html .report-item:lt(5)\");",
    "#input span {\n  color: red;\n}",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js\"></script>\n<div id=\"output\"></div>\n<input type=\"button\" value=\"Load More\" onclick=\"loadMore()\">\n<div id=\"input\"></div>",
    "dark_blue_block() {\n  // Calculate the center of the tetrimino as average of x and y coordinates\n  const centerX = (50 + 100 + 150 + 150) / 4;\n  const centerY = (50 + 50 + 50 + 100) / 4;\n\n  // Create a container at the center point\n  const blocks = this.add.container(100 + centerX, 100 + centerY);\n\n  // Reposition blocks so they are centered around (0, 0) in the container\n  let b1 = this.add.sprite(50 - centerX, 50 - centerY, \"blue_tile\").setScale(0.2);\n  let b2 = this.add.sprite(100 - centerX, 50 - centerY, \"blue_tile\").setScale(0.2);\n  let b3 = this.add.sprite(150 - centerX, 50 - centerY, \"blue_tile\").setScale(0.2);\n  let b4 = this.add.sprite(150 - centerX, 100 - centerY, \"blue_tile\").setScale(0.2);\n\n  blocks.add([b1, b2, b3, b4]); // Add sprites to the container\n\n  return blocks;\n}",
    "const calculateCenter = (positions) => ({\n  x: positions.reduce((sum, p) => sum + p.x, 0) / positions.length,\n  y: positions.reduce((sum, p) => sum + p.y, 0) / positions.length\n});\n\ndark_blue_block() {\n  let positions = [\n      { x: 50,  y: 50 },\n      { x: 100, y: 50 },\n      { x: 150, y: 50 },\n      { x: 150, y: 100 }\n  ];\n\n  // Get the center point\n  const { x: centerX, y: centerY } = calculateCenter(positions);\n\n  // Create the container at its center\n  const blocks = this.add.container(100 + centerX, 100 + centerY);\n\n  // Adjust each sprite relative to container center\n  positions.forEach(pos => {\n    let block = this.add.sprite(pos.x - centerX, pos.y - centerY, \"blue_tile\").setScale(0.2);\n    blocks.add(block);\n  });\n\n  return blocks;\n}",
    "{\n  remotes: {\n    'my-remote-1': 'my-remote-1@http://localhost:3001/remoteEntry.js?[getRandomString()]',\n  }\n}",
    "function FAQ() {\n  const [offsets, setOffsets] = React.useState({ offsetWidth: null, offsetHeight: null });\n  const gridColDivRef = React.useRef();\n  React.useEffect(() => {\n    const listener = () => {\n      if (gridColDivRef.current) {\n        const { offsetWidth, offsetHeight } = gridColDivRef.current;\n        setOffsets({ offsetWidth, offsetHeight });\n      }\n    };\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener); // Clean up on unmount\n  }, []);\n  return (\n    <section section-name={\"faq\"}>\n      <h1 className=\"faq-header\">Frequently asked questions</h1>\n      <div className=\"grid-container\">\n        <div className=\"grid-col\" ref={gridColDivRef}>\n          {JSON.stringify(offsets)}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.querySelector(\"main\"));\nroot.render(<FAQ />);",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js\"></script>\n<main />",
    "def get_epc_rating(driver: WebDriver, listing_url: str) -> str:\n    driver.get(listing_url)  # Open property details page\n    try:\n        xpath_expression = (\n            \"//*[starts-with(translate(text(), 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'), 'EPC RATING')]\"\n        )\n        \n        epc_element = WebDriverWait(driver, 5).until(\n            EC.presence_of_element_located((By.XPATH, xpath_expression))\n        )\n        return etext(epc_element)  # Extract EPC rating text\n    except TimeoutException:\n        return \"N/A\"  # Return \"N/A\" if EPC Rating is missing",
    "for (let element of document.querySelectorAll(\"div.container\") {\n    //do something with element\n}",
    "onMounted(() => { /* your code here */ })",
    "const { createApp, ref, computed } = Vue\n\nconst app = createApp({\n  setup() {\n    const query = ref('')\n    const items = [\n      'Apple',\n      'Banana',\n      'Orange',\n      'Pineapple',\n      'Grapes',\n      'Strawberry',\n      'Blueberry',\n      'Raspberry',\n      'Peach',\n      'Plum'\n    ]\n    const filteredItems = ref([])\n\n    // Filtering items based on the user input\n    const onInput = () => {\n      const minLength = 1 // Minimum length of input for suggestions\n      if (query.value.length >= minLength) {\n        filteredItems.value = items.filter(item =>\n          item.toLowerCase().includes(query.value.toLowerCase())\n        )\n      } else {\n        filteredItems.value = []\n      }\n    }\n\n    // When an item is selected from the list\n    const selectItem = (item) => {\n      query.value = item\n      filteredItems.value = [] // Hide suggestions after selection\n    }\n\n    // Highlight the matched text (bold part of the word)\n    const highlightMatch = (item) => {\n      const queryValue = query.value.toLowerCase()\n      const index = item.toLowerCase().indexOf(queryValue)\n      if (index !== -1) {\n        const beforeMatch = item.substring(0, index)\n        const match = item.substring(index, index + queryValue.length)\n        const afterMatch = item.substring(index + queryValue.length)\n        return `${beforeMatch}<span class=\"highlight\">${match}</span>${afterMatch}`\n      }\n      return item\n    }\n    \n    // Dynamically create the placeholder based on the query input\n    const dynamicPlaceholder = computed(() => {\n      const match = filteredItems.value.find(item => item.toLowerCase().startsWith(query.value.toLowerCase()))\n      return match || '' // Return the first match or empty string if no match\n    })\n    \n    // Handle Tab key press\n    const onKeyDown = (event) => {\n      if (event.key === 'Tab') {\n        // Prevent the default Tab behavior (focus change)\n        event.preventDefault()\n        // Set query value to the dynamicPlaceholder value\n        query.value = dynamicPlaceholder.value\n      }\n    }\n\n    return {\n      query,\n      items,\n      filteredItems,\n      onInput,\n      selectItem,\n      highlightMatch,\n      dynamicPlaceholder,\n      onKeyDown,\n    }\n  }\n})\n\napp.mount('#app')",
    ".highlight {\n  font-weight: bold;\n}\n.list-group-item {\n  cursor: pointer;\n}\n/* First match dynamic placeholder */\n.input-with-dynamic-placeholder {\n  width: 100%;\n  position: relative;\n  padding-left: 35px;\n}\n.dynamic-placeholder {\n  position: absolute;\n  top: 50%;\n  left: 10px;\n  transform: translateY(-50%);\n  color: #aaa;\n  font-weight: normal;\n}\n.transparent {\n  color: transparent;\n}",
    "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/vue@3.2.37/dist/vue.global.prod.js\"></script>\n\n<div id=\"app\">\n  <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <!-- Input Field -->\n        <div class=\"position-relative\">\n          <input\n            v-model=\"query\"\n            type=\"text\"\n            class=\"form-control input-with-placeholder\"\n            placeholder=\"Search fruits...\"\n            @input=\"onInput\"\n            @keydown=\"onKeyDown\"\n          />\n          \n          <!-- Dynamic Placeholder Text -->\n          <span v-if=\"query.length > 0\" class=\"dynamic-placeholder\">\n            <span :class=\"['transparent', query.length > 0 ? 'transparent' : '']\">{{ dynamicPlaceholder.slice(0, query.length) }}</span>{{ dynamicPlaceholder.slice(query.length) }}\n          </span>\n        </div>\n        \n        <!-- Suggestions List -->\n        <ul v-if=\"filteredItems.length > 0\" class=\"list-group mt-2\">\n          <li\n            v-for=\"item in filteredItems\"\n            :key=\"item\"\n            class=\"list-group-item\"\n            @click=\"selectItem(item)\"\n          >\n            <span v-html=\"highlightMatch(item)\"></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>",
    "cy.get(this.searchBarDropdownOptions).within(() => {\n  // wait for the options\n  cy.get('li', {timeout:10_000}).should('have.length', 4);\n\n  // now click one\n  cy.contains(\"li\", siteName).click()\n  // now assert something that occurs after the click\n  cy.get('#sitename').should('contain', 'This is the site name')\n\n  // now click the next\n  cy.contains(\"li\", location).click()\n  //etc",
    "var doc = app.activeDocument;\nvar artLayer = doc.layers[0];\nvar color = doc.swatches.getByName('My_Color_01').color;\ncolor.tint = 50; // <-- 50% tint, for example\nvar MyRect = artLayer.pathItems.rectangle( 12, 22, 180, 180 );\nMyRect.fillColor = color;",
    ".moreDetails { display: none }",
    "const moreDetailses = document.querySelectorAll(\".moreDetails\"); \nfor (let i = 0; i < moreDetailses.length; i++) {   \n  moreDetailses[i].style.display = \"none\"; \n}",
    "const toggle = (button) => {\n  // this works because the button is immediately after the \"moreDetails\" element it pertains to\n  let Text = button.previousElementSibling;\n  Text.style.display = Text.style.display !== \"block\" ? 'block' : 'none'\n};",
    ".moreDetails {\n  display: none;\n}",
    "<div id=\"textContainer\">\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\" onclick=\"toggle(this)\">More...</button>\n  </div>\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\" onclick=\"toggle(this)\">More...</button>\n  </div>\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\" onclick=\"toggle(this)\">More...</button>\n  </div>\n\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\" onclick=\"toggle(this)\">More...</button>\n  </div>\n</div>",
    "document.getElementById('textContainer').addEventListener('click', (e) => {\n  const tgt = e.target.closest('button.toggle'); // did we click a button?\n  if (!tgt) return; // No, bail out\n  tgt.previousElementSibling.classList.toggle('show'); // classList.toggle does what is says\n});",
    ".moreDetails {\n  display: none;\n}\n\n.moreDetails.show {\n  display: block;\n}",
    "<div id=\"textContainer\">\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\">More...</button>\n  </div>\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\">More...</button>\n  </div>\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\">More...</button>\n  </div>\n\n  <div class=\"text\">Here is some text\n    <div class=\"moreDetails\">And here are more details</div>\n    <button class=\"toggle\">More...</button>\n  </div>\n</div>",
    "import React, { useEffect } from \"react\";\n\nimport LicenseContextProvider, { useLicense } from '@/contexts/license-context';\nimport { useRouter } from 'next/navigation';\n\nconst InnerLandingPage = () => {\n  const { product, api, isLoading } = useLicense();\n  const router = useRouter();\n\n  useEffect(() => {\n      console.log('page isLoading', isLoading);\n      \n      if (!isLoading) {\n        console.log('product', product);\n        console.log('api', api);\n  \n        if (!product) {\n          router.push('/license-warning');\n        } else if (api === '') {\n          router.push('/key-manager');\n        }\n      }\n    },[product, api, isLoading]);\n\n  return (\n    <>\n      <p>Inner Landing Page</p>\n    </>\n  );\n};\n\n\nconst LandingPage = () => {\n  return (\n    <>\n      <title>Landing Page</title>\n      <LicenseContextProvider>\n        <div className=\"w-full\">\n          <div className=\"flex flex-col w-full\">\n            <InnerLandingPage/>\n          </div>\n        </div>\n      </LicenseContextProvider>\n    </>\n  );\n};\n\nexport default LandingPage;",
    "if( isNaN(yInterceptOfNormal)  || isNaN(xInterceptOfNormal) || yInterceptOfNormal == Infinity || xInterceptOfNormal == Infinity ) {\n  debugger\n}",
    "async function allSettledMap<T extends object>(namedPromises: { [K in keyof T]: Promise<T[K]>}): Promise<{ [K in keyof T]: PromiseSettledResult<T[K]> }> {\n    const entries = Object.entries(namedPromises);\n    const results = await Promise.allSettled(entries.map(([key, promise]) => promise));\n    const resultEntries = results.map((res, i) => [entries[i][0], res]);\n    return Object.fromEntries(resultEntries);\n}\n\ninterface HealthInfo {\n    test: string;\n}\n\nasync function test() {\n    const namedPromises = {\n        database: Promise.resolve<HealthInfo>({ test: \"A\" }),\n        someApi: Promise.resolve<HealthInfo>({ test: \"B\" }),\n        // ...\n    } satisfies Record<string, Promise<HealthInfo>>;\n\n    const results = await allSettledMap(namedPromises);\n    console.log(results.database.status === 'fulfilled' ? results.database.value : results.database.reason);\n}\n\ntest();",
    "settledResults = await allSettledMap(withTimeout(namedEntries));",
    "export const system = createSystem(defaultConfig, config);",
    "import { ChakraProvider } from '@chakra-ui/react';\nimport { system } from '@/theme/system'; // path to your createSystem export\n\nexport default function App({ Component, pageProps }) {\n  return (\n    <ChakraProvider theme={system.theme}>\n      <Component {...pageProps} />\n    </ChakraProvider>\n  );\n}",
    "import { defineStyleConfig, defineStyle } from '@chakra-ui/react';\n\nconst solidVariant = defineStyle({\n  bg: 'brand.solid',       \n  color: 'white',\n  _hover: {\n    bg: 'brand.contrast',  \n  },\n});\n\nconst outlineVariant = defineStyle({\n  border: '1px solid',\n  borderColor: 'brand.solid',\n  color: 'brand.solid',\n});\n\n\nexport const buttonTheme = defineStyleConfig({\n  baseStyle: {\n    \n    fontWeight: 'semibold',\n    borderRadius: 'md',\n  },\n  variants: {\n    solid: solidVariant,\n    outline: outlineVariant,\n  },\n  \n  defaultProps: {\n    variant: 'solid',\n  },\n});",
    "await expect(page.locator(\"button.submit\")).toBeEnabled();",
    "// \ud83d\udc4d\nawait expect(page.getByText('welcome')).toBeVisible();\n// \ud83d\udc4e\nexpect(await page.getByText('welcome').isVisible()).toBe(true);",
    "console.log(await page.locator(\"h10\").isEnabled({ timeout: 7000 }));",
    "console.log(await page.locator(\"button\").isEnabled({ timeout: 7000 }));",
    "function getToken() {\n    let credentials;\n    var data = `code=${encodeURIComponent(authCode)}` +\n               `&client_id=${encodeURIComponent(clientid)}` +\n               `&client_secret=${encodeURIComponent(clientsecret)}` +\n               `&redirect_uri=${encodeURIComponent(redirecturi)}` +\n               `&grant_type=authorization_code`;\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://oauth2.googleapis.com/token\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    xhr.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n            credentials = JSON.parse(this.response);\n            gapi.client.setToken(credentials.access_token);\n        } else {\n            document.getElementById(\"error\").innerHTML = this.readyState + \" + \" + this.response;\n        }\n    };\n    xhr.send(data);\n}",
    "function loadEntry(year, month) {\n    let entry = document.querySelector('#entry');\n    fetch(`/journal/entries/${year}/${month}.md`)\n        .then(async r => {\n            if (r.ok) {\n                const content = await r.text();\n                const parsedContent = await mdparse(content, {\"permissive\": true, \"section\": true});\n                entry.innerHTML = parsedContent;\n            }\n        });\n}",
    "<button onclick=\"loadEntry(2025, 'JAN')\">January 2025</button>\n<button onclick=\"loadEntry(2024, 'FEB')\">February 2025</button>",
    "const initialNodes = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'Board of Directors' },\n    position: { x: 0, y: 0 },\n    style: {\n      backgroundColor: 'rgba(255, 0, 115, 0.05)',\n      width: 570,\n      height: 440,\n      justifyContent: 'flex-start',\n      fontWeight: 'bold',\n    },\n  },\n  {\n    id: '2',\n    data: { label: 'Information Processing Coordinatorship' },\n    position: { x: 20, y: 40 },\n    style: {\n      backgroundColor: 'rgba(188, 235, 215, 0.5)',\n      width: 530,\n      height: 380,\n      justifyContent: 'flex-start',\n      fontWeight: 'bold',\n    },\n  },\n  {\n    id: '2a',\n    data: { label: 'Coordinator' },\n    position: { x: 180, y: 35 },\n    parentId: '2',\n    extennt: 'parent',\n  },\n  {\n    id: '2a1',\n    data: { label: 'Secretary' },\n    position: { x: 70, y: 85 },\n    parentId: '2',\n    extennt: 'parent',\n  },\n  {\n    id: '2a2',\n    data: { label: 'Business Analysis and Development Department' },\n    position: { x: 220, y: 125 },\n    style: {\n      backgroundColor: 'rgba(123,159,242, 0.45)',\n      width: 300,\n      height: 240,\n      justifyContent: 'flex-start',\n      fontWeight: 'bold',\n    },\n    parentId: '2',\n  },\n  {\n    id: '2a2a',\n    data: { label: 'Business Analysis and Development Department Manager' },\n    position: { x: 80, y: 40 },\n    parentId: '2a2',\n    extennt: 'parent',\n  },\n  {\n    id: '2a2b',\n    data: { label: 'Business Analysis and Development Specialist' },\n    position: { x: 10, y: 115 },\n    parentId: '2a2',\n    extennt: 'parent',\n  },\n  {\n    id: '2a2c',\n    data: { label: 'Business Analysis and Development Assistant Specialist' },\n    position: { x: 130, y: 170 },\n    parentId: '2a2',\n    extennt: 'parent',\n  },\n  {\n    id: '3',\n    data: { label: 'Software Development Department' },\n    position: { x: 40, y: 185 },\n    style: {\n      backgroundColor: 'rgba(123,159,242, 0.45)',\n      width: 180,\n      height: 200,\n      justifyContent: 'flex-start',\n      fontWeight: 'bold',\n    },\n  },\n  {\n    id: '3a',\n    data: { label: 'Software Development Department Manager' },\n    position: { x: 15, y: 50 },\n    parentId: '3',\n    extent: 'parent',\n  },\n  {\n    id: '3a1',\n    data: { label: 'Software Development Specialist' },\n    position: { x: 15, y: 130 },\n    parentId: '3',\n    extent: 'parent',\n  },\n];\n\nconst initialEdges = [\n  { id: 'e1', source: '2a', target: '2a1' },\n  { id: 'e2', source: '2a', target: '2a2' },\n  { id: 'e3', source: '2a2a', target: '2a2b' },\n  { id: 'e4', source: '2a2a', target: '2a2c' },\n  { id: 'e5', source: '3a', target: '3a1' },\n];",
    "@Input()\ndropdownItems = [\n    {\n      optionValue: \"5\",\n      optionText: \"5\",\n    },\n    {\n      optionValue: \"10\",\n      optionText: \"10\",\n    },\n    {\n      optionValue: \"20\",\n      optionText: \"20\",\n    }\n  ]",
    "...\n  \"content_scripts\": [ {\n    \"js\": [ \"content.js\" ],\n    \"matches\": [ \"<all_urls>\" ],\n    \"match_about_blank\": true\n  } ],\n  ...",
    "console.log( 'content running' );",
    "<p className=\"whitespace-pre-wrap\" contentEditable={true}>\n    This is some user input text\n    <span contentEditable={false} className=\"text-xs text-gray-400\">\n        Here is some extremely looooooong looong looong looooong AI text\n    </span>\n</p>",
    "const serviceID = 8;\nlet myOption = document.querySelector(`[value=\"${serviceID}\"]`);\nmyOption.parentNode.value = myOption.value;",
    "<select>\n<option value=\"7\">John Doe</option>\n<option value=\"8\">Preston Sharpe</option>\n<option value=\"9\">Margaret Cochran</option>\n</select>",
    "<?php\nuse Livewire\\WithPagination;\n\nclass UsersList extends Component{\n\nuse WithPagination;\npublic $list ;\n\n\n    use WithPagination;\n\n    public function render()\n    {\n        $data = Model::paginate(10); // Correct way to paginate\n        return view('livewire.usersList', ['list' => $list ]);\n    }\n} ?>",
    "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <div wire:key=\"unique-key-{{ $loop->index }}\">\n        @foreach ($data as $item)\n            <p>{{ $item->name }}</p>\n        @endforeach\n    \n        {{ $data->links() }} <!-- Ensure you're using Laravel's pagination links -->\n    </div>\n</body>\n</html>",
    "const { siteUrl } = useParams<{ name: string }>()",
    "params: { siteUrl: string }",
    "const customIntlFormatDistance = (date, baseDate = new Date()) => \n  differenceInHours(baseDate, date) < 24 ? \"Today\" :\n    isYesterday(date) ? \"Yesterday\" : \n      intlFormatDistance(date, baseDate);",
    "const customIntlFormatDistance = (date, baseDate = new Date()) => \n  isToday(date) ? \"Today\" : \n    isYesterday(date) ? \"Yesterday\" : \n      intlFormatDistance(date, baseDate);",
    "<script type=\"importmap\">\n  {\n\"imports\": {\n  \"three\": \"https://unpkg.com/three@0.173.0/build/three.module.js\",\n  \"three/addons/\": \"https://unpkg.com/three@0.173.0/examples/jsm/\"\n}\n  }\n</script>\n\n<script type=\"module\">\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { Tween, Easing } from 'https://unpkg.com/@tweenjs/tween.js@25.0.0/dist/tween.esm.js';\n\n      const scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xaaaaaa);\n\n      const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.set(0, 2, 5);\n\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n\n      const l = new THREE.DirectionalLight(0xffffff, 0.8);\n      l.position.set(5, 10, 10);\n      scene.add(l);\n      let torsoTween;\n      const loader = new GLTFLoader();\n      loader.load(    'https://threejs.org/examples/models/gltf/RobotExpressive/RobotExpressive.glb',\n        (gltf) => {\n          const model = gltf.scene;\n          scene.add(model);\n          model.traverse((child) => {\n            if (child.isMesh && child.name === 'Torso_3') {\n              child.material = child.material.clone();\n              child.material.transparent = true;\n              torsoTween = new Tween(child.material, false)\n                .to({ opacity: 0.1 }, 5000)\n                .easing(Easing.Quadratic.InOut)\n                .start();\n            }\n          });\n        },\n      );\n      function animate(time) {\n        requestAnimationFrame(animate);  \n        if (torsoTween) torsoTween.update(time);\n        renderer.render(scene, camera); \n      }\n      animate();\n\n      window.addEventListener('resize', () => {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      });\n</script>",
    "const handleClick = () => {\n   // do something on click\n}",
    "const handleClick = useCallback(() => {\n   // do something on click\n}, [])",
    "function Component() {\n   const [state1, setSate1] = useState();\n   const [state2, setSate1] = useState();\n\n   function handlerClick(e) { \n      // some codes to write here\n   }\n\n   useEffect(()=>{\n      // some codes to write here\n   })\n\n}",
    "function Component() {\n   const [state1, setSate1] = useState();\n   const [state2, setSate1] = useState();\n\n   function handlerClick(e) { \n      // some codes to write here\n   }\n\n   useEffect(()=>{\n      // some codes to write here\n   },[state1])\n\n}",
    "function Component() {\n  const [state1, setSate1] = useState();\n  const [state2, setSate2] = useState();\n\n  const handlerClick = useCallback(\n    function handlerClick(e) {\n      // some codes to write here\n    },\n    [state1]\n  );\n\n  useEffect(() => {\n    // some codes to write here\n  }, [state1]);\n\n  return <>nothing special</>;\n}",
    "<Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n    <Table>\n        <TableBody>\n        ...\n        </TableBody>\n    </Table>\n    <Table>\n        <TableBody>\n        ...\n        </TableBody>\n    </Table>\n</Box>",
    "<TableBody>\n    {[...Array(20).keys()].map(rowIndex => (\n        <TableRow\n            key={rowIndex}\n            sx={{\n                '&:nth-of-type(odd)': { backgroundColor: 'zebra.odd' },\n                color: 'primary.main',\n            }}\n        >\n            {[...Array(3).keys()].map(sectionIndex => (\n                headers.map((header, i) => (\n                    <TableCell\n                        key={i}\n                        component=\"th\"\n                        scope={sectionIndex === 1 ? 'row' : 'col'}\n                        align=\"left\"\n                        sx={tableCellStyles}\n                    >\n                        <Typography\n                            sx={{\n                                color: 'primary.main',\n                                fontWeight: 400,\n                                fontSize: 14,\n                            }}\n                        >\n                            {sections[sectionIndex][rowIndex][header.toLowerCase()] ?? ''}\n                        </Typography>\n                    </TableCell>\n                ))\n            ))}\n        </TableRow>\n    ))}\n</TableBody>",
    "<Route path=\"dashboard\">\n   <Route path=\"*\" element={<DashboardApp />} />\n </Route> \n\nInstead of the above one, you can try anyone of the below:\n \n <Route path=\"dashboard/*\" element={<DashboardApp />} />\n\n **Or**\n\n <Route path=\"dashboard\">\n   <Route index element={<DashboardApp />} />\n </Route> \n\n**Or if you have nested routes try this** \n\n<Route path=\"dashboard\">\n    <Route index element={<DashboardApp />} /> {/* Matches /dashboard */}\n    <Route path=\"header\" element={<Header />} /> {/* Matches /dashboard/header*/}\n    <Route path=\"banner\" element={<Banner />} /> {/* Matches /dashboard/banner*/}\n  </Route>",
    "<Route path=\"dashboard\">\n  <Route\n    index    // <-- matches \"/dashboard\" exactly\n    path=\"*\" // <-- matches any \"/dashboard/*\" path\n    element={<DashboardApp />}\n  />\n</Route>",
    "const DashboardApp = () => (\n  <>\n    ...\n    <Routes>\n      <Route path=\"a\" element={<DashboardA />} />\n      <Route path=\"b\" element={<DashboardB />} />\n      <Route path=\"c\" element={<DashboardC />} />\n      ...\n    </Routes>\n  </>\n);",
    "<Routes>\n  <Route\n    path=\"/\"\n    element={(\n      <Navigate\n        to=\"dashboard/B\" // <-- redirect to existing route\n        replace\n      />\n    )}\n  />\n  <Route path=\"admin\">\n    <Route path=\"*\" element={<AdminApp />} />\n  </Route>\n  <Route path=\"dashboard\">\n    <Route path=\"*\" element={<DashboardApp />} />\n  </Route>\n</Routes>",
    "function triggerPickers() {\n    document.getElementById('filePicker').click();\n    document.getElementById('folderPicker').click();\n  }\n\n  document.getElementById('filePicker').addEventListener('change', function(event) {\n    console.log(\"Files selected:\\n\", event.target.files);\n  });\n\n  document.getElementById('folderPicker').addEventListener('change', function(event) {\n    console.log(\"Folders selected:\\n\", event.target.files);\n})",
    "<button onclick=\"triggerPickers()\">Select Files and Folders</button>\n\n<input type=\"file\" id=\"filePicker\" multiple style=\"display: none;\" />\n<input type=\"file\" id=\"folderPicker\" multiple webkitdirectory style=\"display: none;\" />",
    "import { useNavigation } from '@react-navigation/native';\n\nconst Screen1 = () => {\n  const navigation = useNavigation();\n\n  const navigateToScreen2 = () => {\n    navigation.navigate('Screen2', {\n      param1: 'value1',\n      param2: 'value2',\n    });\n  };\n\n  return (\n    <View>\n      <Button title=\"Go to Screen2\" onPress={navigateToScreen2} />\n    </View>\n  );\n};",
    "router.push(`/item/${id}`, { params: { name } })",
    "let my_object = {};\nmy_object['a'] = ['val1', 'val2'];\nmy_object['b'] = ['val1', 'val2', 'val3'];\nmy_object['c'] = ['val1', 'val2'];\nmy_object['d'] = ['val1', 'val2', 'val3'];\nmy_object['e'] = ['val1'];\n\nmy_object = Object.fromEntries(\n  Object.entries(my_object).sort((a,b) => a[1].length-b[1].length)\n);\nconsole.log(my_object);",
    "let my_object = {};\nmy_object['a'] = ['val1', 'val2'];\nmy_object['1'] = ['val1', 'val2', 'val3'];\nmy_object['b'] = ['val1', 'val2', 'val3'];\nmy_object['c'] = ['val1', 'val2'];\nmy_object['d'] = ['val1', 'val2', 'val3'];\nmy_object['e'] = ['val1'];\nmy_object['2'] = [];\n\nlet myObjectArray = Object.entries(my_object)\n  .reduce((acc,[key,values]) => {\n    acc.push({key,arr:values});\n    return acc;\n  },[])\n  .sort((a,b) => a.arr.length-b.arr.length); // add rules to sort keys if same length\n\nconsole.log(myObjectArray);",
    "const obj = { a: 1, b: 2 }\nconsole.log(Object.entries(obj))\n\n// Result: [['a', 1], ['b', 2]]",
    "const arr = [['a', [1, 2]], ['b', [1, 2, 3]], ['c', [1]]]\narr.sort(([, a], [, b]) => a.length - b.length)\nconsole.log(arr)\n\n// Result: [['c', [1]], ['a', [1, 2]], ['b', [1, 2, 3]]]",
    "const obj = {\n  'a': ['val1', 'val2'],\n  'b': ['val1', 'val2', 'val3'],\n  'c': ['val1', 'val2'],\n  '2': ['val1', 'val2', 'val3'], // Just for testing, the key is 2 instead of 'd', but you can see that the order is correct\n  'e': ['val1']\n}\n\nconst sortedArray = Object.entries(obj)\n  .sort(([, a], [, b]) => a.length - b.length)\n\n/*\nHere, the result is not an object where\nthe arrays are associated with keys, but rather\nan array where each record is an object with\ntwo properties: key and values.\n- The key property contains the original key.\n- The values property contains the original array of values.\n- Thanks to the array, we can fully preserve the order, regardless of the keys.\n*/\nconst sortedObjects = sortedArray.reduce((acc, [key, values]) => {\n  acc.push({ key, values });\n  return acc;\n}, []);\n\nconsole.log(sortedObjects)",
    "const obj = {\n  'a': ['val1', 'val2'],\n  'b': ['val1', 'val2', 'val3'],\n  'c': ['val1', 'val2'],\n  '2': ['val1', 'val2', 'val3'], // Just for testing, the key is 2 instead of 'd', as you can see, it always gets placed at the beginning here\n  'e': ['val1']\n}\n\nconst sortedArray = Object.entries(obj)\n  .sort(([, a], [, b]) => a.length - b.length)\n\nconst sortedObject = Object.fromEntries(sortedArray)\n\nconsole.log(sortedObject)",
    "my_object['1'] = ['val1', 'val2', 'val3', 'val4'];",
    "[{key: 'a', value: ['val1', 'val2']}, ...]",
    "const minioClient = new Minio.Client({\n          endPoint: '0.tcp.ngrok.io',\n          port: 12345, // Use the port provided by Ngrok\n          useSSL: false, // It is very very important to set this to false when using TCP tunneling\n          accessKey: process.env.MINIO_ACCESS_KEY,\n          secretKey: process.env.MINIO_SECRET_KEY,\n        });",
    "Cloud logs\nFeb 6, 2025, 6:39:01\u202fPM Info    testaccount123@gmail.com\nFeb 6, 2025, 6:39:01\u202fPM Info    Calendar\nFeb 6, 2025, 6:39:01\u202fPM Info    Invite sent to testaccount123@gmail.com\nFeb 6, 2025, 6:39:02\u202fPM Info    Invited testaccount123@gmail.com to event valentines",
    "ns = mw.config.get ('wgNamespaceNumber');",
    "...\n@extends('layouts.app')\n\n@section('content')\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div>\n                        <div class=\"alert alert-success\" style=\"display: none;\">\n                            <p class=\"p-0 m-0\"></p>\n                        </div>\n                    </div>\n                    <form id=\"formContainer\" method=\"post\" action=\"{{ route('update', $id) }}\">\n                        @csrf\n                        <div class=\"modal fade\" id=\"actualFotoModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div role=\"document\" class=\"modal-dialog modal-lg\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\" class=\"close\">\n                                            <span aria-hidden=\"true\"></span>\n                                        </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <img id=\"fotoActual\" src=\"123.jpg\" alt=\"\" class=\"img-fluid w-100\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <input type=\"hidden\" id=\"srcfoto\" name=\"srcfoto\" class=\"image-tag\" value=\"{{ $fotoPrincipal ? $fotoPrincipal->srcfoto : '' }}\">\n                        <input type=\"hidden\" id=\"srcfotoNueva\" name=\"srcFotoNueva\" class=\"image-tag-nueva\" value=\"123.jpg\">\n\n                        <!-- Shows photos principal -->\n                        <div class=\"row justify-content-center m-2\">\n                            <div class=\"col-2 text-center\" id=\"fotoPrincipal\">\n                                @if ($fotoPrincipal && $fotoPrincipal->srcfoto)\n                                    <a href=\"\" onclick=\"event.preventDefault(); showFoto('{{ asset('storage/fotos/'.$fotoPrincipal->srcfoto) }}');\">\n                                        <img id=\"fotoId\" src=\"{{ asset('storage/fotos/'.$fotoPrincipal->srcfoto) }}\" alt=\"\" class=\"img-fluid\">\n                                    </a>\n                                @endif\n                            </div>\n                        </div>\n\n                        <!-- Show all secondary photos -->\n                        <div id=\"lstFotos\" class=\"row mt-2\">\n                            @foreach($fotos as $foto)\n                                <div class=\"col-xs-6 col-md-2 pb-2\">\n                                    <a href=\"\" onclick=\"event.preventDefault(); showFoto('{{ asset('storage/fotos/'.$foto->srcfoto) }}');\">\n                                        <img class=\"w-100\" class=\"w-100\" src=\"{{ asset('storage/fotos/'.$foto->srcfoto) }}\" alt=\"...\">\n                                    </a>\n                                </div>\n                            @endforeach\n                        </div>\n\n                        <div class=\"col-xs-6 col-md-2 pb-2\">\n                            <img id=\"fotoIdNueva\" class=\"w-100\" src=\"123.jpg\" alt=\"\">\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- MODAL Tomar Imagen -->\n    <div class=\"modal fade\" id=\"fotomodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-lg\" role=\"document\" >\n            <div class=\"modal-content\" >\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Foto modal</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\" id=\"videostatus\" style=\"display:block;\">\n                            <video id=\"video\" width=\"640\" height=\"480\" autoplay></video>\n                        </div>\n                        <div class=\"col-12 text-center\" id=\"canvasstatus\" style=\"display:none;\">\n                            <canvas id=\"canvas\" width=\"640\" height=\"480\"></canvas>\n                        </div>\n                    </div>\n                    \n                    <div class=\"row\"  >\n                        <div class=\"col-12 text-center\">\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <button class=\"btn btn-primary snap\" id=\"snap\" onclick=\"captureget();\">\n                                        <i class=\"fa fa-camera-retro\" aria-hidden=\"true\"></i> Capture\n                                    </button>\n                                    <button class=\"btn btn-primary again\" id=\"again\" onclick=\"returncapture();\">\n                                        <i class=\"fa fa-camera-retro\" aria-hidden=\"true\"></i> Tomar nuevamente o eliminar\n                                    </button>\n                                    <button class=\"btn btn-success again\" id=\"againBtn\" onclick=\"saveCapture();\">\n                                        <i class=\"fa fa-camera-retro\" aria-hidden=\"true\"></i> Guardar\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- FIN MODAL Tomar Imagen -->\n\n@endsection\n\n@section('scripts')\n    <script>\n        var CSRF_TOKEN = \"{{ csrf_token() }}\";\n\n        function showimgsave() {\n            this.showModal = true\n            this.componentKey +=1\n        }\n\n        function showFoto(foto = '') {\n            $('#actualFotoModal').modal('show');\n            $(\"#fotoActual\").attr('src', foto);\n        }\n\n        var nuevaFoto = 0;\n        function deleteFoto() {\n            if (nuevaFoto == 0) {\n                $(\"#srcfoto\").attr(\"src\", '');\n                $(\".image-tag\").val('');\n            } else {\n                $(\"#srcfotoNueva\").attr(\"src\", '');\n                $(\".image-tag-nueva\").val('');\n            }\n\n            $(\"#fotoActual\").attr(\"src\", '');\n\n            $(\"#videostatus\").css(\"display\", \"block\");\n            $(\"#canvasstatus\").css(\"display\", \"none\");\n\n            $('#actualFotoModal').modal('hide');\n        }\n\n        function captureclick(nueva = 0) {\n            nuevaFoto = nueva;\n\n            this.deleteFoto();\n\n            let video = document.getElementById('video');\n            let canvas = document.getElementById('canvas');\n            let context = canvas.getContext('2d');\n\n            $('#fotomodal').modal('show');\n            $(\".again\").hide();\n            $(\".snap\").show();\n\n            if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                navigator.mediaDevices.getUserMedia(\n                    {\n                        audio: false,\n                        video: {\n                            facingMode: 'environment',\n                        }\n                    }\n                ).then(function(stream) {\n                    video.srcObject = stream;\n                    video.play();\n                    $(\"#fotomodal\").on(\"hide.bs.modal\", function () {\n                        stream.getTracks().forEach(track => track.stop())\n                    });\n                });\n            }\n        }\n\n        var dataUrl = '';\n        function captureget() {\n            let video = document.getElementById('video');\n            let canvas = document.getElementById('canvas');\n            let context = canvas.getContext('2d');\n\n            context.drawImage(video, 0, 0, 640, 480);\n            dataUrl = canvas.toDataURL(\"image/png\");\n\n            $(\"#fotoActual\").attr(\"src\", dataUrl);\n            $(\"#videostatus\").css(\"display\", \"none\");\n            $(\"#canvasstatus\").css(\"display\", \"block\");\n\n            $(\".again\").show();\n            $(\".snap\").hide();\n        }\n\n        function saveCapture() {\n            if (nuevaFoto == 0) {\n\n                $.ajax({\n                    url: '{{ route(\"foto\", $id) }}',\n                    type: \"post\",\n                    dataType: 'json',\n                    data: {\n                        _token: CSRF_TOKEN,\n                        srcfoto: dataUrl,\n                    },\n                    success: function(response) {\n                        $(\"#srcfoto\").attr(\"src\", dataUrl);\n                        $(\".image-tag\").val(dataUrl);\n                        $(\"#fotoId\").attr(\"src\", response.srcfoto );\n\n                        txt = '<a href=\"\" onclick=\"event.preventDefault(); showFoto(\"' + response.srcfoto + '\");\">' + \"\\n\";\n                        txt += '<img id=\"fotoId\" class=\"w-100\" src=\"' + response.srcfoto + '\" alt=\"...\">' + \"\\n\";\n                        txt += '</a>' + \"\\n\";\n\n                        $(\"#fotoPrincipal\").html(txt);\n\n                        Swal.fire({\n                            title: 'Foto Principal',\n                            text: 'La foto principal fue guardada correctamente.',\n                            icon: 'success',\n                            showCancelButton: false,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: 'Ok',\n                        });\n                    },\n                    error: function(xhr) {\n                        Swal.fire({\n                            title: 'Nueva Foto',\n                            text: 'Hubo un error al querer guardar la foto.   Si contin\u00faa el error, favor de notificarlo.',\n                            icon: 'warning',\n                            showCancelButton: false,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: 'Ok',\n                        });\n                        console.log(xhr);\n                    }\n                });\n            } else {\n                $.ajax({\n                    url: '{{ route(\"newFoto\", $id) }}',\n                    type: \"post\",\n                    dataType: 'json',\n                    data: {\n                        _token: CSRF_TOKEN,\n                        srcfotoNueva: dataUrl,\n                    },\n                    success: function(response) {\n                        $(\"#srcfotoNueva\").attr(\"src\", dataUrl);\n                        $(\".image-tag-nueva\").val(dataUrl);\n                        $(\"#fotoIdNueva\").attr(\"src\", '');\n\n                        html = '<div class=\"col-xs-6 col-md-2 pb-2\">' + \"\\n\";\n                        html += '<a href=\"\" onclick=\"event.preventDefault(); showFoto(\"' + response.srcfoto + '\");\">' + \"\\n\";\n                        html += '<img class=\"w-100\" class=\"w-100\" src=\"' + response.srcfoto + '\" alt=\"...\">' + \"\\n\";\n                        html += '</a>' + \"\\n\";\n                        html += '</div>' + \"\\n\";\n\n                        $(\"#lstFotos\").append(html);\n\n                        Swal.fire({\n                            title: 'Nueva Foto',\n                            text: 'La foto fue guardada correctamente.',\n                            icon: 'success',\n                            showCancelButton: false,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: 'Ok',\n                        });\n                    },\n                    error: function(xhr) {\n                        Swal.fire({\n                            title: 'Nueva Foto',\n                            text: 'Hubo un error al querer guardar la foto.   Si contin\u00faa el error, favor de notificarlo.',\n                            icon: 'warning',\n                            showCancelButton: false,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: 'Ok',\n                        });\n                        console.log(xhr);\n                    }\n                });\n            }\n        }\n\n        function returncapture() {\n            $(\"#videostatus\").css(\"display\", \"block\");\n            $(\"#canvasstatus\").css(\"display\", \"none\");\n\n            $(\".again\").hide();\n            $(\".snap\").show();\n        }\n\n        $(document).ready(function () {\n            $(\".snap\").hide();\n            $(\".again\").hide();\n        });\n\n    </script>\n@endsection",
    ".verde2{\n    ...\n    display: grid;\n    grid-template-columns: 60fr 40fr;\n}",
    ".verde2-poza {\n    width: 100%;\n    ...\n}",
    "<section class=\"verde2\">\n    <div class=\"verde2-text\">\n        ...\n    </div>\n    <div class=\"verde2-poza\">\n        ...\n    </div>\n</section>",
    ":root {\n  --main-width: 500px;\n}\n\nbody {\n  margin: 0;\n}\n\nmain {\n  max-width: var(--main-width);\n  margin: 0 auto;\n  padding: 0 1em;\n}\n\nsection {\n  margin: 0 min(-1em, (100vw - var(--main-width)) / -2);\n  padding: 1px max(1em, (100vw - var(--main-width)) / 2);\n  background: aliceblue;\n  box-sizing: border-box;\n}\n\nsection figure {\n  margin: 0;\n  position: relative;\n}\n\nsection img {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n}\n\nsection.image-left, section.image-right {\n  display: grid;\n  gap: 1em;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\nsection.image-left {\n  padding-left: 0;\n  grid-template-columns: 50vw 1fr;\n}\n\nsection.image-right {\n  padding-right: 0;\n  grid-template-columns: 1fr 50vw;\n}\n\nsection.image-full {\n  padding: 0;\n}\n\nsection.image-full figure {\n  height: 10em;\n}",
    "<main>\n  <p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempor nunc mauris, sit amet placerat tortor lobortis dapibus. Nam lectus eros, maximus ac magna vel, congue consequat eros. Fusce id pretium diam. Cras sit amet pharetra ante. Sed quis commodo quam, vel facilisis ipsum. Vestibulum sodales iaculis arcu, et fringilla nisi ullamcorper sed.\n  </p>\n  <section>\n    <p>\n    Nulla rhoncus aliquam mauris, eu pretium dolor auctor in. Maecenas a sollicitudin dolor, eget commodo quam. Proin et dui sed ligula vulputate egestas. Quisque eget augue vitae purus placerat pharetra. Aliquam rhoncus convallis lorem, sed facilisis odio blandit scelerisque. Vivamus viverra urna ac nulla interdum, eget ullamcorper leo maximus. Mauris nec feugiat enim. Nam congue, dui sit amet vestibulum posuere, leo mauris fermentum lorem, eget bibendum velit nunc quis leo.\n    </p>\n  </section>\n  <p>\n  Cras volutpat velit non mi sagittis condimentum. Cras tempor aliquet turpis sed pretium. Nunc aliquet sodales turpis quis ultrices. Duis auctor accumsan enim, quis maximus ex malesuada a. Donec a felis ut erat tempus euismod non vel neque. Proin lectus massa, sagittis at imperdiet nec, consequat ut neque. Sed vel placerat neque, vel varius urna. Vivamus interdum euismod urna a accumsan. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n  </p>\n  <section class=\"image-left\">\n    <figure><img src=\"https://picsum.photos/600\"></figure>\n    <p>\n    Curabitur eget ullamcorper justo, sit amet dictum neque. Fusce vitae ligula et felis auctor vulputate vel suscipit nibh. Integer a felis varius purus vestibulum viverra. Morbi venenatis placerat augue sit amet commodo. Sed dapibus molestie eros, vitae ultrices nunc commodo aliquam.\n    </p>\n  </section>\n  <section class=\"image-right\">\n    <p>\n    Sed sed cursus leo. Nam molestie eleifend leo, nec fermentum risus maximus ac. Pellentesque eget placerat ipsum. Vestibulum tempor quam justo. Fusce dapibus turpis non ante faucibus suscipit. Fusce rhoncus eleifend ipsum et lacinia. Curabitur nec congue arcu. Mauris dignissim magna ligula.\n    </p>\n    <figure><img src=\"https://picsum.photos/610\"></figure>\n  </section>\n  <p>\n  Mauris vulputate quam ac purus laoreet, nec ultrices eros placerat. Fusce id nisi ex. Nunc ornare tellus nisl, suscipit fermentum quam sodales sit amet. Ut ex magna, tempor nec ex sed, ornare ornare sem. Proin gravida turpis urna, vitae posuere purus consequat sit amet. Donec laoreet tempor massa. Praesent porta mauris vitae neque condimentum, non volutpat felis eleifend.\n  </p>\n  <section class=\"image-full\">\n    <figure><img src=\"https://picsum.photos/1200/600\"></figure>\n  </section>\n  <p>\n  Aliquam aliquam a est eget cursus. Ut eu tempus justo, rutrum dapibus ex. In hac habitasse platea dictumst. Nulla ornare nisi sit amet arcu semper maximus. Praesent eu augue eget mi sodales sodales. Praesent sodales neque malesuada, euismod est in, lobortis turpis. Nam blandit facilisis mauris. Ut ac ex rhoncus, ornare velit ac, aliquam nibh. Quisque euismod mauris quis nisl consectetur vulputate. Pellentesque mattis, tellus ut dictum dictum, urna ligula sodales magna, euismod malesuada ipsum quam nec elit.\n  </p>\n</main>",
    "body {\n  margin: 0;\n}\n\n.verde2 {\n  height: 500px;\n  background-color: #00824B;\n  color: white;\n}\n\n.verde-container {\n  height: 100%;\n  padding-left: calc((100vw - 500px) / 2);\n  display: grid;\n  grid-template-columns: 1fr 50vw;\n  gap: 2em;\n  box-sizing: border-box;\n}\n\n.verde2-text {\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n  justify-content: center;\n}\n\n.verde2-text h3 {\n  margin-top: 0;\n  font-size: 1.2em;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.verde2-poza {\n  background-image: url(https://picsum.photos/800);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: right;\n}",
    "<section class=\"verde2\">\n  <div class=\"verde-container\">\n    <div class=\"verde2-text\">\n      <h3>\n        <img class=\"verde-icon\" src=\"https://picsum.photos/60\" alt=\"iconss\">\n        De ce este importanta<br>durabilitatea?\n      </h3>\n      <p>Exista multe avantaje pentru durabilitate, atat pe termen scurt, cat si pe termen lung. Nu putem mentine ecosistemele Pamantului sau nu putem continua sa functionam asa cum o facem daca nu se fac alegeri mai durabile.Daca procesele daunatoare sunt mentinute fara nicio modificare, este probabil ca vom ramane fara combustibili fosili, un numar mare de specii de animale vor disparea si atmosfera va fi afectata iremediabil. Aerul curat si conditiile atmosferice netoxice, cresterea resurselor pe care se poate baza, precum si calitatea si curatenia apei sunt toate beneficii ale sustenabilitatii.</p>\n    </div>\n    <div class=\"verde2-poza\"></div>\n  </div>\n</section>",
    "// ...other imports and codes\nexport default function Home() {\n  // ...other useState()\n\n  const [isFirstTimeFormInitiated, setIsFirstTimeFormInitiated] =\n    useState(false);\n  const [isAccessed, setIsAccessed] = useState(false);\n\n  // ...other useEffect()\n\n  const validateForm = () => {\n    // remain unchanged\n  };\n\n  const onSubmit = async () => {\n    !isAccessed && setIsAccessed(true);\n    if (validateForm()) {\n      try {\n        await axios.post(\"/api/leads\", formData);\n        setSubmitted(true);\n      } catch (error) {\n        console.error(\"Submission failed\", error);\n      }\n    }\n  };\n\n  if (submitted) {\n    return <p>Thank you for submitting your information!</p>;\n  }\n\n  return (\n    <div\n      style={{\n        // ...other inline styling\n      }}\n    >\n      {isClient && (\n        <JsonForms\n          schema={schema}\n          uischema={uischema}\n          data={formData}\n          renderers={materialRenderers}\n          cells={materialCells}\n          onChange={(e) => {\n            setFormData(e.data);\n            if (!isFirstTimeFormInitiated) {\n              // REMARK: A rough way to prevent first time render\n              // triggering the setIsAccessed() too early.\n              setIsFirstTimeFormInitiated(true);\n              return;\n            }\n            !isAccessed && setIsAccessed(true);\n          }}\n          // REMARK: Manipulate this with custom flags to hide the errors.\n          validationMode={isAccessed ? \"ValidateAndShow\" : \"ValidateAndHide\"}\n        />\n      )}\n      <Button\n        onClick={onSubmit}\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginTop: \"10px\" }}\n      >\n        Submit\n      </Button>\n    </div>\n  );\n}",
    "for (const color of ['red', 'yellow', ...]) {\n    // Add click event listeners to red balls (1 point)\n    const balls = document.querySelectorAll(`.ball-img[src*=\"${color}\"]`);\n    ...\n}",
    "for (const color of [{name: 'red', score: 1}, {name: 'yellow', score: 5}, ...]) {\n    // Add click event listeners to red balls (1 point)\n    const balls = document.querySelectorAll(`.ball-img[src*=\"${color.name}\"]`);\n    ...\n    console.log(`${color.name} score is ${color.score}`);\n}",
    "<img class=\"ball-img\" data-score=\"1\" src=\"red-ball.png\" />\n<img class=\"ball-img\" data-score=\"2\" src=\"yellow-ball.png\" />\n<!-- etc -->",
    "document.addEventListener('click', (e) => {\n  const ball = e.target.closest('.col-4 .ball-img[data-score]');\n  if (ball) {\n    // the click happened on a ball element\n\n    const score = ball.dataset.score;\n    const column = ball.closest('.col-4');\n\n    // and so on...\n\n    currentBreak += score;\n\n    // ...\n  }\n});",
    "useEffect(() => {\n  savedCallback.current = () => { // <-- (1)\n    setCount(count + 1);\n  };\n});\n\nuseEffect(() => {\n  let id = setInterval(() => {    // <-- (2)\n    savedCallback.current();      // <-- (3)\n  }, 1000);\n  return () => clearInterval(id);\n}, []);",
    "useEffect(() => {\n  savedCallback.current = () => { // <-- (1)\n    setCount(count + 1);\n  };\n});\n\nuseEffect(() => {\n  let id = setInterval(\n    savedCallback.current,        // <-- (2)\n    1000\n  );\n\n  return () => clearInterval(id);\n}, []);",
    "useEffect(() => {\n  savedCallback.current = () => {\n    setCount(count + 1);\n  };\n});\n\nuseEffect(() => {\n  let id = setInterval(() => {\n    setCount(count + 1);\n  }, 1000);\n\n  return () => clearInterval(id);\n}, []);",
    "useEffect(() => {\n  savedCallback.current = () => {\n    setCount((count) => count + 1); // <-- functional update\n  };\n}, []); // <-- empty dependency, run effect once\n\nuseEffect(() => {\n  let id = setInterval(savedCallback.current, 1000);\n  return () => clearInterval(id);\n}, []);",
    "useEffect(() => {\n  let id = setInterval(() => {\n    setCount((count) => count + 1);\n  }, 1000);\n  return () => clearInterval(id);\n}, []);",
    "onShippingChange: function(data,actions){\n  //if not needed do nothing..\n  return actions.resolve();\n},",
    "body {\n  background-color:#000000;\n}\n.card {\n  background-color: #8f97a3;\n  width:200px;\n  height:200px;\n  margin:10px;\n}\n.card div, .card input {\n  margin:6px;\n  padding:6px;\n}\n.card:active:not(:has(input:active)) {\n  background-color:#b9bec5;\n  margin:10px 6px 10px 14px;\n}",
    "<div class=\"card\">\n  <div>1</div>\n</div>\n<div class=\"card\">\n  <div>2</div>  \n</div>\n<div class=\"card\">\n  <input type='text' value='pick a number'></input>\n</div>",
    ".card:has(input):active {\n  margin:10px;\n  background-color: #8f97a3;\n}",
    "export default function HomePage() {\n  const featuredPosts = getFeaturedPosts();\n  \n  return (\n    <>\n      <Hero />\n      <FeaturedPosts posts={featuredPosts} />\n    </>\n  );\n}",
    "export async function getStaticProps() {\n  console.log(\"getStaticProps called\"); \n  const featuredPosts = getFeaturedPosts();\n  console.log(\"Featured posts in getStaticProps:\", featuredPosts); // Debugging line\n\n  return {\n    props: {\n      posts: featuredPosts,\n    },\n    revalidate: 1800,\n  };\n}",
    "<FeaturedPosts posts={featuredPosts} />",
    "// Find all the relevant elements\nconst buttons = document.getElementsByClassName('myButton')\n// Find the largest width among those elements\n// getElementsByClassName returns a HTMLCollection, spreading that into an array allows us to use reduce()\nconst maxWidth = [...buttons]\n  .reduce((max, current) =>\n    // Check each element and if it has a larger width, update the maximum\n    Math.max(max, current.getBoundingClientRect().width),\n    // Start with a max width of 0\n    0\n  )\n\n// Update the width of each button to the maxium width we just found\nfor (let btn of buttons) {\n  btn.style.width = `${maxWidth}px`\n}",
    "<button class=\"myButton\">really long text means really wide button</button>\n<!-- elsewhere, under a different parent -->\n<button class=\"myButton\">small button</button>\n<!-- even further away parented to yet another element -->\n<button class=\"myButton\">kinda medium text</button>",
    "var pathname = window.location.pathname,\npages = ['home', 'library', 'uploads','about'];\n\n$('.nav-item').each(function(i) {\n if (pathname.includes(pages[i])) this.addClass('active');\n else if (this.className.includes('active')) this.removeClass('active');\n});",
    "var pathname = window.location.pathname,\npages = ['home', 'library', 'uploads','about'];\nlet currentlyActive = document.querySelector('.active')\nif(currentlyActive) currentlyActive.classList.remove('active');\nlet pageMatch = pages.indexOf(pathname);\nif(pageMatch !== -1) [...document.querySelectorAll('.nav-item')][pageMatch].classList.add('active');",
    "[...]\n\n// Here's problem #1: \"this\" refers to the window scope, in this case. \n// It does NOT refer to the nav item you wish to actually append the class to.\n    this.classList.add(\"active\");",
    "// Problem #2, here, is multi-pronged:\n  // 2a. Strictly speaking, you don't need to test to see if the `classList` \n  //   actually includes the `\"active\"` class. You're iterating all of them \n  //   anyway, so you may as well just rip off `active` wherever it appears\n  //   that is NOT the match in your above condition.\n  // 2b. You're still using the `this` keyword, which still applies to the \n  //   `window` object.\n  } else if (this.classList.includes(\"active\")) {\n    this.classList.remove(\"active\");\n  }\n}",
    "<li class=\"nav-item\">\n        <a id=\"logos\" class=\"nav-link\" href=\"#\">Logos</a>\n      </li>\n      <li class=\"nav-item\">\n        <a id=\"sketches\" class=\"nav-link\" href=\"#\">Sketches</a>\n      </li>\n    [...]",
    "[...]\n      <li class=\"nav-item\">\n        <a class=\"nav-link fotos\" href=\"#\">Fotos</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link tutorials\" href=\"#\">Tutorials</a>\n      </li>\n    [...]",
    "// Get ALL the link objects into an array.\n  const allMyLinks = [...document.querySelectorAll(\".nav-link\")];\n  \n  // Loop through all your links...\n  for(let linkObj of allMyLinks){\n    // If the pathname contains their id, they're a match!\n    if(window.location.pathname.contains(linkObj.id)){\n      linkObj.classList.add(\"active\");\n\n    // Otherwise, they are not!\n    }else{\n      linkObj.classList.remove(\"active\");\n    }\n  }",
    "// You should, as a general rule, avoid using window.onload (likewise button.onclick; really ANY of the \"on*\" properties, unless you have a specific reason to do so), favoring the addEventListener method instead. The reason for this is when you directly set .onload is you rip any existing/other load event listeners that are already set. This can cause all kinds of headaches in a LOT of situations. \n\nwindow.addEventListener('DOMContentLoaded', ()=> {\n\n  // document.getElementById, document.querySelector both target specific elements on screen (the former by its ID, the latter by its selector (just like CSS uses). document.querySelectorAll gathers EVERY element that matches your selector (id's are supposed to be unique, so there is no getElementsById).\n  const allMyLinks = [...document.querySelectorAll(\".nav-link\")];\n  for(let linkObj of allMyLinks){\n    // Since the id's we used are the same as the page names, we can target \n    // JUST the one that corresponds to the location.\n    if(window.location.pathname.contains(linkObj.id)){\n      linkObj.classList.add(\"active\");\n    }\n  }\n});",
    "window.addEventListener('DOMContentLoaded', ()=> {\n  // Grab the .nav-link whose href is the pathname\n  let activeLink = document.querySelector(\".nav-link[href='\" + window.location.pathname + \"']\");\n  // Set it to active. You want the if condition on the off chance there's \n  // not a viable match.\n  if(activeLink) activeLink.classList.add(\"active\");\n}",
    "body>article:nth-child(even) {\n  margin: 10px;\n  margin-left: auto;\n  width: 400px;\n  color: blueviolet;\n}\n\nbody>article {\n  margin: 10px;\n  margin-right: auto;\n  width: 400px;\n  color: blueviolet;\n}\n\narticle h2 {\n  background-color: blueviolet;\n  font-size: 20px;\n  color: black;\n  width: 400px;\n}",
    "<!DOCTYPE html>\n<html>\n  <body>\n    <article>\n      <h2>lorem ipsum</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris quis diam sit amet neque rhoncus feugiat eget eget libero. Cras bibendum nisl nec erat ultricies vestibulum. Cras pretium volutpat lectus pretium tempus. Suspendisse sit amet sem vehicula, volutpat neque at, consequat turpis. Nulla volutpat orci et dui pharetra, dapibus interdum dolor auctor.</p>\n    </article>\n    <article>\n      <h2>lorem ipsum</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris quis diam sit amet neque rhoncus feugiat eget eget libero. Cras bibendum nisl nec erat ultricies vestibulum. Cras pretium volutpat lectus pretium tempus. Suspendisse sit amet sem vehicula, volutpat neque at, consequat turpis. Nulla volutpat orci et dui pharetra, dapibus interdum dolor auctor.</p>\n    </article>\n    <article>\n      <h2>lorem ipsum</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris quis diam sit amet neque rhoncus feugiat eget eget libero. Cras bibendum nisl nec erat ultricies vestibulum. Cras pretium volutpat lectus pretium tempus. Suspendisse sit amet sem vehicula, volutpat neque at, consequat turpis. Nulla volutpat orci et dui pharetra, dapibus interdum dolor auctor.</p>\n    </article>\n  </body>\n</html>",
    "import { Writable } from 'node:stream';\nimport * as winston from 'winston';\n\nlet logged: string = '';\nconst writable = new Writable({\n  write(chunk: Buffer, _encoding, done) {\n    logged += chunk.toString();\n    done();\n  },\n});\n\n// for my concrete use case\nexpect(logged).toEqual(winston.createLogger({transports: new winston.transports.Stream({ stream: writable })}).info('some text'))",
    "let map = new mapboxgl.Map({\n    container: \"map\",\n    style: 'mapbox://styles/eirinigialou/cm6qmuu6w010p01r5hluj8s7q',\n    center: [6.34, 28.99],\n    scrollZoom: false,\n    renderWorldCopies: false,\n    height: \"100%\"\n});\n\n\n\nmap.on('load', () => {\n    map.resize();\n});\n\n\n//add interactions\nmap.addInteraction(\"move-handler\", {\n    type: \"mousemove\",\n    target: {\n        \"layerId\": \"available-countries\"\n    },\n    handler: (e) => {\n        if (e.feature) {\n            map.setFeatureState(e.feature, {\n                [\"hover-state\"]: true\n            });\n            map.setFeatureState(e.feature, {\n                [\"highlight\"]: true\n            });\n        }\n    }\n});\n\nmap.addInteraction(\"leave-handler\", {\n    type: \"mouseleave\",\n    target: {\n        \"layerId\": \"available-countries\"\n    },\n    handler: (e) => {\n        if (e.feature) {\n            map.setFeatureState(e.feature, {\n                [\"hover-state\"]: false\n            });\n            map.setFeatureState(e.feature, {\n                [\"highlight\"]: false\n            });\n        }\n    }\n});",
    "export default async function ClientWebsite({ params }: { params: Promise<{ client: string }> }) {\n    const defaultConfig = { \n        title: \"Welcome to Wuilder\", \n        bgColor: \"bg-gray-500\",\n        logo: \"/logos/default.png\",\n        description: \"Powerful websites for every business.\"\n    };\n\nconst client = (await params).client\n\n    const clientConfig = brandingData[client] || defaultConfig;\n\n    return (\n        <div className='min-h-screen flex flex-col items-center justify-center'>\n            <img src={clientConfig.logo} alt=\"Logo\" className=\"w-32 h-32 mb-4\" />\n            <h1 className=\"text-white text-3xl font-bold\">{clientConfig.title}</h1>\n            <p className=\"text-white text-lg mt-2\">{clientConfig.description}</p>\n        </div>\n    );\n}",
    "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Product Cards</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row card-parent\"></div>\n    </div>\n\n    <script>\n        let cardData = [\n            { id: 1, imgFile: 'images/products/marievi5.jpg', heading: 'Marievi the Influencer', body: 'This is card body', price: 150 },\n            { id: 2, imgFile: 'images/products/rock1.jpg', heading: 'Card 2', body: 'This is card body', price: 200 },\n            { id: 3, imgFile: 'images/products/marievi5.jpg', heading: 'Card 3', body: 'This is card body', price: 400 },\n            { id: 4, imgFile: 'images/products/marievi5.jpg', heading: 'Card 4', body: 'This is card body', price: 300 }\n        ];\n\n        const createCard = () => {\n            let cardContainer = document.querySelector('.card-parent');\n            cardContainer.innerHTML = '';  \n\n            cardData.forEach((data) => {\n                let card = document.createElement('div');\n                card.classList.add('col-md-4', 'mb-4');\n\n                card.innerHTML = `\n                    <div class=\"card shadow-sm\">\n                        <img class=\"card-img-top\" src=\"${data.imgFile}\" alt=\"Product Image\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title fw-bold\">${data.heading}</h5>\n                            <p class=\"card-text text-muted\">${data.body}</p>\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <span class=\"product-price fw-bold\">$${data.price}</span>\n                                <button class=\"btn btn-primary view-details-btn\" data-product-id=\"${data.id}\">View Details</button>\n                            </div>\n                        </div>\n                    </div>\n                `;\n\n                cardContainer.appendChild(card); // use appendChild here instead of innerHtml, because innerHtml will remove the existing cards\n            });\n\n\n            document.querySelectorAll('.view-details-btn').forEach((button) => { // Here i used View Details button class instead of card class\n                button.addEventListener('click', function () {\n                    let productId = this.getAttribute('data-product-id'); // taking the all card buttons and add event listener to listen click event and then take id using getAttribute\n                    window.location.href = `ProductDetails1.html?id=${productId}`;\n                });\n            });\n        }\n\n        createCard();\n    </script>\n</body>\n\n</html>",
    "import { useEffect, useState } from 'react';\n\nexport default function App() {\n  return (\n    <>\n      <Leaves svgHeight={500} />\n    </>\n  );\n}\n\nconst Leaves = ({ svgHeight }) => {\n  const [show, setShow] = useState('');\n\n  useEffect(() => {\n    let inc = 0;\n\n    let timer = setInterval(() => {\n      let incSnapshot = inc;\n      setShow(incSnapshot);\n      inc++;\n\n      if (inc === 12) {\n        inc = 0;\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return (\n    <svg\n      className={`leaves ${svgHeight}`}\n      style={{ height: svgHeight }}\n      clip-rule=\"evenodd\"\n      fill-rule=\"evenodd\"\n      stroke-linejoin=\"round\"\n      stroke-miterlimit=\"2\"\n      version=\"1.1\"\n      viewBox=\"0 0 2e3 3e3\"\n      xmlSpace=\"preserve\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g fill-rule=\"nonzero\">\n        <rect width=\"2e3\" height=\"\" fill=\"rgba(255,255,255,0)\" />\n        {d.slice(0, show).map((i, index) => (\n          <path d={i} fill=\"#778680\" key={index} />\n        ))}\n      </g>\n    </svg>\n  );\n};\n\nconst d = [\n  'm1403.3 1640.2c0.15-6.25-10-2.02-10.12 2.96-6.34 252.73-159.68 479.21-212.39 724.37-4.63 21.55-8.4 43.21-11.19 64.95 0.01-12.74-0.11-25.47-0.52-38.21-2.63-82.46-14.27-164.49-34.1-245.25-19.63-79.96-45.93-158.57-70.15-237.59-14.33-46.76-27.92-93.78-38.87-141.22-10.09-46.61-15.93-79.22-19.45-108.26-9.685-79.88-7.238-160.44 1.9-240.27 17.87-156.05 60.33-309 89.75-463.57 31.83-167.18 47.55-338.89-3.43-504.59-1.73-5.651-11.01 0.396-9.55 5.151 93.74 304.73-36.96 614.26-80.68 916.56-10.753 74.37-16.742 149.42-13.447 224.36 2.014 45.81 8.113 91.25 16.947 136.35-9.784-8.67-20.36-16.82-31.166-24.54-46.083-32.94-93.535-62.48-133.06-101.53-79.124-78.17-130.84-175.86-148.35-277.67-9.992-58.09-8.543-117.1 4.538-174.75 1.468-6.47-8.832-4.68-10.024 0.57-44.768 197.31 48.905 406.26 234.46 530.73 29.025 19.47 62.557 39.93 87.232 64.93 5.68 26.79 12.25 53.47 19.47 80.02 44.02 161.74 106.27 319.25 122.77 485.57 18.48 186.16-8.54 374.76-78.52 551.89-2.47 6.24 7.05 7.47 9.26 1.88 42.47-107.51 69.29-219.14 79.87-331.99 7.18-84.43 19.51-165.14 49.02-258.38 35.69-112.75 93.36-244.89 156.52-437.84 21.8-66.57 31.55-135.49 33.29-204.63z',\n  'm722.11 1713.1s64.149 145.58 341.52 217.54c0 0-41.09-77.82-154.61-154.63-50.879-34.43-186.91-62.91-186.91-62.91z',\n  'm1528.1 1897.3s-178.19 45.87-283.64 283.62c0 0 136.08-77.2 235.73-171.17 44.66-42.11 47.91-112.45 47.91-112.45z',\n  'm893.99 1155.4s-144.93 99.01-137.52 352.89c0 0 92.023-114.73 142.85-233.44 22.78-53.2-5.328-119.45-5.328-119.45z',\n  'm993.38 1625.2s104.42-133.73 128.54-217.4 26.61-187.11 26.61-187.11-82.26 90.13-112.03 186.81-43.122 217.7-43.122 217.7z',\n  'm993.35 1624.8s220.77-112.98 217.52-269.43c0 0-191.55 144.86-217.52 269.43z',\n  'm1111.1 864.03s247.11-161.1 214.13-340.84c0 0-205.72 193.71-214.13 340.84z',\n  'm1384.7 1774.1s141.56-162.2 72.78-288.36c0 0-103.08 178.8-72.78 288.36z',\n  'm686.39 1191.8s139.32-163.58 68.809-289.05c0 0-100.6 179.8-68.809 289.05z',\n  'm1112.9 549.99s50.57-245.4-107.74-352.63c0 0 2.79 245.74 107.74 352.63z',\n  'm1322.8 1978.1s-177.71-216.97-81.85-379.77c0 0 126.58 237.41 81.85 379.77z',\n  'm711.15 1421.6s-246.84-130.51-239.05-305.33c0 0 212.94 165.58 239.05 305.33z',\n  'm1085 1006.8s2.36-91.018-58.05-186.86c-60.4-95.848-182.08-258.17-182.08-258.17s6.079 140.83 29.088 200.85c44.983 117.34 203.48 197.77 211.04 244.19z',\n];",
    "def getKeyIv(password: Array[Byte], salt: Array[Byte]): (Array[Byte], Array[Byte]) = {\n  var key, iv, last = Array[Byte]()\n  val md = MessageDigest.getInstance(\"MD5\")\n  while (key.length < 32) {\n      last = md.digest(last ++ password ++ salt)\n      key = key ++ last\n  }\n  iv = md.digest(last ++ password ++ salt)\n  (key, iv)\n}",
    "val ciphertextOpenSSLFrmt = \"Salted__\".getBytes(StandardCharsets.UTF_8) ++ salt ++ ciphertext",
    "import java.security.{SecureRandom, MessageDigest}\nimport javax.crypto.Cipher\nimport javax.crypto.spec.{IvParameterSpec, SecretKeySpec}\nimport java.nio.charset.StandardCharsets\nimport java.util.Base64\n...\nval plaintext: Array[Byte] = \"The quick brown fox jumps over the lazy dog\".getBytes(StandardCharsets.UTF_8)\nval password: Array[Byte] = \"my password\".getBytes(StandardCharsets.UTF_8)\nval secureRandom = new SecureRandom() // create random salt\nval salt: Array[Byte] = new Array[Byte](8)\nsecureRandom.nextBytes(salt)\nval (key, iv) = getKeyIv(password, salt) // derive key and IV\nval cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\") // encrypt\ncipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, \"AES\"), new IvParameterSpec(iv))\nval ciphertext = cipher.doFinal(plaintext)\nval ciphertextOpenSSLFrmt = \"Salted__\".getBytes(StandardCharsets.UTF_8) ++ salt ++ ciphertext // concatenate result \nprintln(Base64.getEncoder.encodeToString(ciphertextOpenSSLFrmt)) // sample output: U2FsdGVkX1/joJPOllaIZiV+ehbDM5KP4IAn/DtCl3Uvfi+8BA8kyznFD+gZJfjFMhz7dD2ke94BR9mvrKTF0Q==",
    "const decrypted = CryptoJS.AES.decrypt(\"U2FsdGVkX1/joJPOllaIZiV+ehbDM5KP4IAn/DtCl3Uvfi+8BA8kyznFD+gZJfjFMhz7dD2ke94BR9mvrKTF0Q==\", \"my password\")\nconsole.log(decrypted.toString(CryptoJS.enc.Utf8))",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.2.0/crypto-js.min.js\"></script>",
    "const alphabets = {\n    'en-GB': [...'abcdefghijklmnopqrstuvwxyz'],\n    'bg-BG': [...'\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044c\u044e\u044f'],\n    'ru-RU': [...'\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f'],\n    'el-GR': [...'\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c3\u03c4\u03c5\u03c6\u03c7\u03c8\u03c9'],\n    'he-IL': [...'\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05db\u05dc\u05de\u05e0\u05e1\u05e2\u05e4\u05e6\u05e7\u05e8\u05e9\u05ea'],\n    'ar-SA': [...'\u0623\u0628\u062a\u062b\u062c\u062d\u062e\u062f\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063a\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u064a'],\n    'zh-CN': [], // Chinese doesn't have an alphabet\n    'ja-JP': [...'\u3042\u3044\u3046\u3048\u304a\u304b\u304d\u304f\u3051\u3053\u3055\u3057\u3059\u305b\u305d\u305f\u3061\u3064\u3066\u3068\u306a\u306b\u306c\u306d\u306e\u306f\u3072\u3075\u3078\u307b\u307e\u307f\u3080\u3081\u3082\u3084\u3086\u3088\u3089\u308a\u308b\u308c\u308d\u308f\u3092\u3093']\n};\n\nconst getAlphabet = (locale) => alphabets[locale] ?? [];\n\n\nconsole.log(getAlphabet('en-GB')); // ['a', 'b', 'c', ..., 'z']\nconsole.log(getAlphabet('bg-BG')); // ['\u0430', '\u0431', '\u0432', ..., '\u044f']\nconsole.log(getAlphabet('zh-CN')); // []",
    "function toUnicodeArray(start, end) {\n  return Array.from({ length: end - start + 1 }, (_, i) => String.fromCharCode(i + start));\n}\n\n// Example usage\n// en-US\ntoUnicodeArray(97, 122).forEach(letter => {\n  console.log(letter);\n});\n// Hebrew\ntoUnicodeArray(0x05D0, 0x05EA).forEach(letter => {\n  console.log(letter);\n});",
    "jsarray = JSON.stringify({ 'jsarray': jsarray });",
    "{\"jsarray\":[...]} instead of [...]",
    "jsarray = JSON.stringify(jsarray); //this will send array of element",
    "public ActionResult gettabledata([FromBody]string[] jsarray)",
    "await esbuild.build({\n  supported: {\n    \"top-level-await\": true,\n  },\n})",
    "let [c, l] = [\".check\", \".label\"].map(s => document.querySelectorAll(s));\n// or\nlet [c, l] = [\"check\", \"label\"].map(s => document.getElementsByClassName(s));",
    "let c = document.querySelectorAll(\".check\"),\n    l = document.querySelectorAll(\".label\");",
    "import functions from 'firebase-functions/v1';\n\nfunctions.auth.user().onCreate(async (userRecord) => {\n  console.log('asdf');\n});",
    "import functions from 'firebase-functions/v2';\n\nfunctions.identity.beforeUserCreated(async (userRecord) => {\n  console.log('asdf');\n});",
    "import {\n  beforeUserCreated,\n} from \"firebase-functions/v2/identity\";\n\nexport const beforecreated = beforeUserCreated((event) => {\n  // TODO\n  return;\n});",
    "const App=()=>{\nconst [image,setImage]=useState(null);\n\nconst makeServerCall =()=>{\n    axios.get(`http://localhost:${data.id}`, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then((res) => {\n        setImage(res.data);\n    }).catch((error) => {\n        console.log(error)\n    });\n\nuseEffect(()=>{\n\nmakeServerCall();\n});\nconsole.log(image);\nreturn (\n....\n <Avatar src={image ? `data:image/jpeg;base64,${image}` : ''}/>\n....\n);\n}",
    "const [image,setImage] = useState(\"defaultImageUrl\");\n\n\n\nconst makeServerCall = {\n \n    method: 'GET',\n    url: 'http://localhost:'+id,\n    headers: {\n      'Content-Type': 'application/json'\n     },\n    json: true\n   };\naxios(makeServerCall)\n   .then((response) => {\n       image = response.data;\nsetImage(image);\n       })\n   .catch((error) => {\n      alert(error)\n     })\n\n/**\nmakeServerCall();\n**/",
    ".input-wrapper {\n  position: relative;\n  display: inline-block;\n}\n\n.input-wrapper input {\n  padding-right: 70px; /* reserve space for the suffix */\n  box-sizing: border-box;\n}\n\n.input-wrapper .suffix {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none; /* make it uneditable */\n  color: #555;\n}",
    "<div class=\"input-wrapper\">\n  <input type=\"text\" placeholder=\"Max.Mustermann\">\n  <span class=\"suffix\">@mail.de</span>\n</div>",
    ".container-input {\n  padding: 5px;\n  border: 1px solid #CCC;\n  width: 200px;\n  display: flex;\n}\n\n.container-input input#mailAddress {\n  width: 120px;\n}\n\n.container-input input,\n.container-input input:active,\n.container-input input:focus {\n  padding: 5px;\n  width: 50px;\n  margin: 0;\n  border: 0 !important;\n  outline: 0;\n}",
    "<div class=\"container-input\">\n  <input type=\"text\" class=\"form-control\" id=\"mailAddress\" value=\"Max.Mustermann\" maxlength=\"64\" id=\"mailAddress\">\n  <input type=\"text\" class=\"form-control\" id=\"website\" value=\"@mail.de\" readonly>\n</div>",
    "app.use(express.static('public'));",
    "const Component = dynamic(() => import(`@/components/admin/tabs/${compName}.js`), {\n  ssr: false,\n  loading: () => <div>Loading...</div>\n});",
    "if (!data) return <div>Loading...</div>;",
    "const [isOpen, setIsOpen] = useState(false);\nconst toggleDropdown = (e) => {\n  e.stopPropagation(); // Prevents event bubbling\n  setIsOpen((prev) => !prev);\n};",
    "const toggleAccountMenu = (event) => {\n    if(isAccountMenuOpen) return;\n    setIsAccountMenuOpen(true);\n  };",
    "<nav>\n      <button style={{ pointerEvents: isAccountMenuOpen ? 'none' : 'all' }}\n      onClick={toggleAccountMenu}>My Account</button>\n      {isAccountMenuOpen && <AccountDropdown onClose={handleAccountMenuClose} \n      />}\n    </nav>",
    "{{ render_form(TaskForm(data={\"list_id\": list.id}), ...",
    "<mat-select \n  [formControl]=\"selectionControl\" (selectionChange)=\"selectionChange($event.value)\" multiple\n>\n  <mat-option class=\"options-wrapper\"\n    *ngFor=\"let version of [1,2,3,4,5,6,7,8,9,10] [value]=\"version\">\n    <span>{{version}}</span>\n    <!-- Try without relative and absolute positions -->\n    <button mat-button class=\"only-btn\" style=\"margin-left: 1rem\">Only</button>\n  </mat-option>\n</mat-select>",
    "<mat-form-field>\n  <mat-label>Toppings</mat-label>\n  <mat-select [formControl]=\"toppings\" multiple>\n    @for (topping of toppingList; track topping) {\n    <mat-option [value]=\"topping\">\n      <div class=\"row\">\n        {{topping}} &nbsp;\n        <button class=\"only-btn\" mat-button>Only</button>\n      </div>\n    </mat-option>\n    }\n  </mat-select>\n</mat-form-field>\n\n<style lang=\"scss\">\n  .row {\n    display: flex;\n    flex-direction: row;\n    &:hover {\n      .only-btn {\n        visibility: visible;\n      }\n    }\n  }\n  .only-btn {\n    visibility: hidden;\n  }\n</style>",
    "<mat-form-field>\n  <mat-label>Toppings</mat-label>\n  <mat-select [formControl]=\"toppings\" multiple>\n    @for (topping of toppingList; track topping) {\n    <mat-option [value]=\"topping\">\n      <div class=\"row\">\n        {{topping}} &nbsp;\n        <button mat-button>Only</button>\n      </div>\n    </mat-option>\n    }\n  </mat-select>\n</mat-form-field>\n\n<style>\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n</style>",
    "const textbox = document.getElementById(\"textbox\")\n\ntextbox.addEventListener(\"input\", evt => {\n  const value = event.target.value\n  // Your fetch here.\n});\n\ndocument.getElementById(\"plusButton\").addEventListener(\"click\", () => {\n  // Increment textbox value.\n  // Your fetch here.\n});\n\ndocument.getElementById(\"minusButton\").addEventListener(\"click\", () => {\n  // Decrement the textbox value\n  // Your fetch here.\n});",
    "const useScrollToDivTop = () => {\n  const divRef = useRef();\n\n  useLayoutEffect(() => {\n    divRef.current.scrollIntoView();\n  }, []);\n\n  return { divRef };\n};\n\nexport default function App() {\n  const { divRef } = useScrollToDivTop();\n  return (\n    <div key={\"parent-div\"} className=\"parent-div\">\n      <div key={\"child-div-1\"}>1</div>\n      <div key={\"child-div-2\"}>2</div>\n\n      <div ref={divRef} key={\"child-div-3\"}>\n        3\n      </div>\n      <div key={\"child-div-4\"}>4</div>\n      <div key={\"child-div-5\"}>5</div>\n    </div>\n  );\n}",
    "const query = `\n    'EXEC testStoredProcedure\n    @user_id = ${user_id},\n    @img_data = ${img_data},\n    @img_size = ${img_size},\n    @birthday = ${birthday},\n    @country = ${country},\n    @email_add = ${email_add},\n    @mobile_no = ${mobile_no},\n    @key = ${key}'\n`;\n\nconst pool = await poolPromise;\nconst request = pool.request();\nconst result = await request.input('user_id', sql.NVarChar(50), user_id || null)\n    .input('img_data', sql.VarBinary(sql.MAX), Buffer.from(img_data))\n    .input('img_size', sql.Decimal(10, 3), img_size)\n    .input('birthday', sql.Date, birthday)\n    .input('country', sql.VarChar(200), country)\n    .input('email_add', sql.NVarChar(150), email_add)\n    .input('mobile_no', sql.VarChar(50), mobile_no)\n    .input('key', sql.VarChar(100), key)\n    .query(query);",
    "const query = `\n    EXEC testStoredProcedure\n    @user_id,\n    @img_data,\n    @img_size,\n    @birthday,\n    @country,\n    @email_add,\n    @mobile_no,\n    @key`;\n\nconst pool = await poolPromise;\nconst request = pool.request();\nconst result = await request.input('user_id', sql.NVarChar(50), user_id || null)\n    .input('img_data', sql.VarBinary(sql.MAX), Buffer.from(img_data))\n    .input('img_size', sql.Decimal(10, 3), img_size)\n    .input('birthday', sql.Date, birthday)\n    .input('country', sql.VarChar(200), country)\n    .input('email_add', sql.NVarChar(150), email_add)\n    .input('mobile_no', sql.VarChar(50), mobile_no)\n    .input('key', sql.VarChar(100), key)\n    .query(query);",
    "const query = `\n    EXEC testStoredProcedure\n    @user_id,\n    @img_data,\n    @img_size,\n    @birthday,\n    @country,\n    @email_add,\n    @mobile_no,\n    @key`;\n\nconst pool = await poolPromise;\nconst request = pool.request();\nconst result = await request.input('user_id', sql.NVarChar(50), user_id || null)\n    .input('img_data', sql.VarBinary(sql.MAX), Buffer.from(img_data))\n    .input('img_size', sql.Decimal(10, 3), img_size)\n    .input('birthday', sql.Date, birthday)\n    .input('country', sql.VarChar(200), country)\n    .input('email_add', sql.NVarChar(150), email_add)\n    .input('mobile_no', sql.VarChar(50), mobile_no)\n    .input('key', sql.VarChar(100), key)\n    .query(query);",
    "const pool = await poolPromise;\nconst request = pool.request();\nconst result = await request.input('user_id', sql.NVarChar(50), user_id || null)\n    .input('img_data', sql.VarBinary(sql.MAX), Buffer.from(img_data))\n    .input('img_size', sql.Decimal(10, 3), img_size)\n    .input('birthday', sql.Date, birthday)\n    .input('country', sql.VarChar(200), country)\n    .input('email_add', sql.NVarChar(150), email_add)\n    .input('mobile_no', sql.VarChar(50), mobile_no)\n    .input('key', sql.VarChar(100), key)\n    .execute('testStoredProcedure');",
    "<script type=\"importmap\">\n  {\n\"imports\": {\n  \"three\": \"https://unpkg.com/three@0.173.0/build/three.module.js\",\n  \"three/addons/\": \"https://unpkg.com/three@0.173.0/examples/jsm/\"\n}\n  }\n</script>\n\n<div id=\"container\"></div>\n\n<script type=\"module\">\n\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { Octree } from 'three/addons/math/Octree.js';\nimport { OctreeHelper } from 'three/addons/helpers/OctreeHelper.js';\nimport { Capsule } from 'three/addons/math/Capsule.js';\n      \nconst clock = new THREE.Clock();\n\nconst scene = new THREE.Scene();\nscene.background = new THREE.Color( 0x88ccee );\nscene.fog = new THREE.Fog( 0x88ccee, 0, 50 );\n\nconst camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.1, 1000 );\ncamera.rotation.order = 'YXZ';\n\nconst fillLight1 = new THREE.HemisphereLight( 0x8dc1de, 0x00668d, 1.5 );\nfillLight1.position.set( 2, 1, 1 );\nscene.add( fillLight1 );\n\nconst directionalLight = new THREE.DirectionalLight( 0xffffff, 2.5 );\ndirectionalLight.position.set( -5, 25, -1 );\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.camera.near = 0.01;\ndirectionalLight.shadow.camera.far = 500;\ndirectionalLight.shadow.camera.right = 30;\ndirectionalLight.shadow.camera.left = -30;\ndirectionalLight.shadow.camera.top = 30;\ndirectionalLight.shadow.camera.bottom = -30;\ndirectionalLight.shadow.mapSize.width = 1024;\ndirectionalLight.shadow.mapSize.height = 1024;\ndirectionalLight.shadow.radius = 4;\ndirectionalLight.shadow.bias = -0.00006;\nscene.add( directionalLight );\n\nconst container = document.getElementById( 'container' );\n\nconst renderer = new THREE.WebGLRenderer( { antialias: true } );\nrenderer.setPixelRatio( window.devicePixelRatio );\nrenderer.setSize( window.innerWidth, window.innerHeight );\nrenderer.setAnimationLoop( animate );\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.VSMShadowMap;\nrenderer.toneMapping = THREE.ACESFilmicToneMapping;\ncontainer.appendChild( renderer.domElement );\n\n// Physics and movement constants\nconst GRAVITY = 30;\nconst STEPS_PER_FRAME = 5;\n\nconst playerCollider = new Capsule(\n    new THREE.Vector3( 0, 0.35, 0 ),\n    new THREE.Vector3( 0, 1, 0 ),\n    0.35\n);\n\nconst playerVelocity = new THREE.Vector3();\nconst playerDirection = new THREE.Vector3();\n\nlet playerOnFloor = false;\n\nconst keyStates = {};\nconst vector1 = new THREE.Vector3();\n\ndocument.addEventListener( 'keydown', ( event ) => {\n    keyStates[ event.code ] = true;\n} );\n\ndocument.addEventListener( 'keyup', ( event ) => {\n    keyStates[ event.code ] = false;\n} );\n\n// Request pointer lock on mousedown\ncontainer.addEventListener( 'mousedown', () => {\n    document.body.requestPointerLock();\n} );\n\ndocument.body.addEventListener( 'mousemove', ( event ) => {\n    if ( document.pointerLockElement === document.body ) {\n        camera.rotation.y -= event.movementX / 500;\n        camera.rotation.x -= event.movementY / 500;\n    }\n} );\n\nwindow.addEventListener( 'resize', onWindowResize );\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n}\n\nfunction playerCollisions() {\n    const result = worldOctree.capsuleIntersect( playerCollider );\n    playerOnFloor = false;\n    if ( result ) {\n        playerOnFloor = result.normal.y > 0;\n        if ( ! playerOnFloor ) {\n            playerVelocity.addScaledVector( result.normal, - result.normal.dot( playerVelocity ) );\n        }\n        if ( result.depth >= 1e-10 ) {\n            playerCollider.translate( result.normal.multiplyScalar( result.depth ) );\n        }\n    }\n}\n\nfunction updatePlayer( deltaTime ) {\n    let damping = Math.exp( - 4 * deltaTime ) - 1;\n    if ( ! playerOnFloor ) {\n        playerVelocity.y -= GRAVITY * deltaTime;\n        // small air resistance\n        damping *= 0.1;\n    }\n    playerVelocity.addScaledVector( playerVelocity, damping );\n    const deltaPosition = playerVelocity.clone().multiplyScalar( deltaTime );\n    playerCollider.translate( deltaPosition );\n    playerCollisions();\n    camera.position.copy( playerCollider.end );\n}\n\nfunction getForwardVector() {\n    camera.getWorldDirection( playerDirection );\n    playerDirection.y = 0;\n    playerDirection.normalize();\n    return playerDirection;\n}\n\nfunction getSideVector() {\n    camera.getWorldDirection( playerDirection );\n    playerDirection.y = 0;\n    playerDirection.normalize();\n    playerDirection.cross( camera.up );\n    return playerDirection;\n}\n// make condition no movement\n\nfunction controls( deltaTime ) {\n    const speedDelta = deltaTime * ( playerOnFloor ? 25 : 8 );\n    let moving = false;\n    if ( keyStates[ 'KeyW' ] ) {\n        playerVelocity.add( getForwardVector().multiplyScalar( speedDelta ) );\n      moving = true;\n    }\n    if ( keyStates[ 'KeyS' ] ) {\n        playerVelocity.add( getForwardVector().multiplyScalar( - speedDelta ) );\n      moving = true;\n    }\n    if ( keyStates[ 'KeyA' ] ) {\n        playerVelocity.add( getSideVector().multiplyScalar( - speedDelta ) );\n      moving = true;\n    }\n\n    if ( keyStates[ 'KeyD' ] ) {\n        playerVelocity.add( getSideVector().multiplyScalar( speedDelta ) );\n      moving = true;\n    }\n  \n    if ( !moving ) {\n        playerVelocity.x = 0;\n        playerVelocity.z = 0;\n    }\n    if ( playerOnFloor && keyStates[ 'Space' ] ) {\n        playerVelocity.y = 15;\n    }\n}\n\nconst worldOctree = new Octree();\nconst loader = new GLTFLoader();\nloader.load(  'https://raw.githubusercontent.com/mrdoob/three.js/master/examples/models/gltf/collision-world.glb',\n    ( gltf ) => {\n        scene.add( gltf.scene );\n        worldOctree.fromGraphNode( gltf.scene );\n        gltf.scene.traverse( child => {\n            if ( child.isMesh ) {\n                child.castShadow = true;\n                child.receiveShadow = true;\n                if ( child.material.map ) {\n                    child.material.map.anisotropy = 4;\n                }\n            }\n        } );\n        const helper = new OctreeHelper( worldOctree );\n        helper.visible = false;\n        scene.add( helper );\n    }\n);\n\nfunction teleportPlayerIfOob() {\n    if ( camera.position.y <= -25 ) {\n        playerCollider.start.set( 0, 0.35, 0 );\n        playerCollider.end.set( 0, 1, 0 );\n        playerCollider.radius = 0.35;\n        camera.position.copy( playerCollider.end );\n        camera.rotation.set( 0, 0, 0 );\n    }\n}\n\nfunction animate() {\n    const deltaTime = Math.min( 0.05, clock.getDelta() ) / STEPS_PER_FRAME;\n    for ( let i = 0; i < STEPS_PER_FRAME; i++ ) {\n        controls( deltaTime );\n        updatePlayer( deltaTime );\n        teleportPlayerIfOob();\n    }\n    renderer.render( scene, camera );\n}   \n\n</script>",
    "const genSaltOriginal = (await vi.importActual<any>(\"bcryptjs\")).genSalt;\nconst hashOriginal = (await vi.importActual<any>(\"bcryptjs\")).hash;\n\nconst salt = await genSaltOriginal(10);\nconst hashedPassword = await hashOriginal(password, salt);\n\n(genSalt as Mock).mockResolvedValueOnce(salt);\n(hash as Mock).mockResolvedValueOnce(hashedPassword);",
    ".arrow {\n  --t: 5px; /* tail size */\n\n  position: absolute;\n  transform-origin: left 50%;\n  left: calc(var(--ax) * 1px);\n  top: calc(var(--ay) * 1px);\n  height: var(--t);\n  width: calc(hypot(calc(var(--by) - var(--ay)), calc(var(--bx) - var(--ax))) * 1px);\n  rotate: atan2(calc(var(--by) - var(--ay)), calc(var(--bx) - var(--ax)));\n  background: #000;\n}",
    "<div class=\"arrow\" style=\"--ax:10; --ay:10; --bx:50; --by:100;\"></div>",
    ".arrow {\n  \n  --t: 5px;  /* tail size */\n  --h: 10px; /* head size */\n  \n  position: absolute;\n  transform-origin: left 50%;\n  left: calc(var(--ax) * 1px);\n  top: calc(var(--ay) * 1px);\n  height: var(--h);\n  width: calc(hypot(calc(var(--by) - var(--ay)), calc(var(--bx) - var(--ax))) * 1px);\n  rotate: atan2(calc(var(--by) - var(--ay)), calc(var(--bx) - var(--ax)));\n  clip-path: polygon(0 calc(50% - var(--t)/2),calc(100% - var(--h)) calc(50% - var(--t)/2),calc(100% - var(--h)) 0,100% 50%,calc(100% - var(--h)) 100%,calc(100% - var(--h)) calc(50% + var(--t)/2),0 calc(50% + var(--t)/2));\n  background: #000;\n}",
    "<div class=\"arrow\" style=\"--ax:10; --ay:10; --bx:50; --by:100;\"></div>",
    "var deg = 0\nsetInterval(function() {\n  deg += 1\n  document.documentElement.style.setProperty(\"--deg\", deg + \"deg\")\n}, 40)",
    ":root {\n  --origin-x: 100px;\n  --origin-y: 100px;\n  --radius: 40px;\n  --deg: 45deg;\n\n}\n\n.arrow {\n  position: absolute;\n  left: var(--origin-x);\n  top: var(--origin-y);\n  width: calc(var(--radius) * 2);\n  height: 0;\n  border-bottom: 5px solid #000000;\n  transform: rotate(var(--deg));\n}\n\n.arrow::after {\n  content: \"\";\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n  border-left: 20px solid #000000;\n  position: absolute;\n  right: -10px;\n  top: -8px;\n}\n\n.cavnas {\n  border: 1px solid gray;\n  position: relative;\n  width: 300px;\n  height: 180px;\n  overflow: hidden;\n}\n\n.pixel {\n  width: 3px;\n  height: 3px;\n  background: red;\n  position: absolute;\n}\n\n.pixel-origin {\n  left: var(--origin-x);\n  top: var(--origin-y);\n}\n\n.pixel-center {\n  left: calc(var(--origin-x) + var(--radius));\n  top: var(--origin-y);\n}\n\n.pixel-target {\n  left: calc(var(--origin-x) + var(--radius) + var(--radius) * cos(var(--deg)));\n  top: calc(var(--origin-y) + var(--radius) * sin(var(--deg)));\n}",
    "<div class=\"cavnas\">\n\n  \n  <div class=\"arrow\"></div>\n  \n  \n  <div class=\"pixel pixel-origin\"></div>\n  <div class=\"pixel pixel-center\"></div>\n  <div class=\"pixel pixel-target\"></div>  \n\n</div>",
    "$(function() {\n  var current = new Date();\n  $('.divcontainerone').toggle(current > new Date(\"February 03, 2025 09:00:00\") && current < new Date(\"February 03, 2025 21:00:00\")); \n  $('.divcontainertwo').toggle(current > new Date(\"February 13, 2025 09:00:00\") && current < new Date(\"February 13, 2025 21:00:00\"));\n});",
    "// This *absolutely* doesn't need to be a const, just declare it as\n// a function that you can load from whatever is your `utils` module.\nfunction calculateSingleBagWeight(productionSheet) {\n  const { bagWeight, input, output } =  productionSheet.bagDetails;\n  const { dimensions, cutting, gussets, flaps } = input;\n\n  // Get all these strings converted to numbers.\n  const [\n    width,\n    height,\n    cuttingDie,\n    openSideGusset,\n    openBottomGusset,\n    upperFlapOpen,\n    zipFlap,\n    thickness,\n    specificWeight,\n  ] = [\n    dimensions.width,\n    dimensions.height,\n    cutting.cuttingDie,\n    gussets.openSideGusset,\n    gussets.openBottomGusset,\n    flaps.upperFlapOpen,\n    flaps.zipFlap,\n    output.thickness,\n    output.specificWeight,\n  ].map(e => parseFloat(e.value));\n\n  // Do some basic math:\n  const widthDevelopment = width + openSideGusset;\n  const heightDevelopment = height + upperFlapOpen + zipFlap + openBottomGusset / 2;\n  const heightDevelopmentNet = height + upperFlapOpen / 2 + zipFlap + openBottomGusset / 2;\n\n  const commonFactor = widthDevelopment * 2 * thickness / 10000  * specificWeight;\n  const bareWeight = heightDevelopment * commonFactor;\n  const dieFactor = (1 - cuttingDie) / 100;\n  const netDieCutWeight = heightDevelopmentNet * commonFactor * dieFactor;\n \n  // If all you want is to add properties to `output`: do that.\n  // Only write code for what needs to happen. Anything else is\n  // just a place for bugs to hide.\n\n  // step 1: make sure \"output\" exists. If it does, this line does nothing.\n  bagWeight.output ??= {};\n\n  // step 2: just assign the property values you need.\n  // And note: never use .toFixed() until the absolute last moment.\n  // Which is here. Not in the calculations we did before.\n  bagWeight.output.bareWeight = {\n    value: bareWeight.toFixed(2),\n    cost: false,\n    unit: `g`\n  };\n\n  bagWeight.output.netDieCutWeight = {\n    value: netDieCutWeight.toFixed(2),\n    cost: false,\n    unit: `g`\n  };\n\n  return productionSheet;\n}",
    "import {\n  onDocumentWritten,\n  onDocumentCreated,\n  onDocumentUpdated,\n  onDocumentDeleted,\n  Change,\n  FirestoreEvent\n} from \"firebase-functions/v2/firestore\";\n\nexports.myfunction = onDocumentWritten(\"my-collection/{docId}\", (event) => {\n   /* ... */ \n});",
    "router.post(\n  \"/posts/new\",\n  upload, // run multer middleware first\n  [\n    body(\"title\")\n      .trim()\n      .isLength({ min: 5 })\n      .notEmpty()\n      .withMessage(\"Title is required\"),\n    body(\"content\")\n      .trim()\n      .isLength({ min: 5 })\n      .notEmpty()\n      .withMessage(\"Content is required\"),\n  ],  \n  postController.createPost\n);",
    "// use multer's memoryStorage to process files, and then save them\nconst storage = multer.memoryStorage()\nconst upload = multer({ storage: storage });\n\n// ...\n\n// validate all, then save files to cloudinary",
    "// service to check fieldnames, remove files\n// reset fieldname counters\nconst validationService = {\n\n    checkFiles(req, file) {         \n    },\n\n    removeFiles() {\n\n    },\n    \n    reset() {\n\n    }\n\n};",
    "// use multer's fileFilter to validate files\nfunction fileFilter(req, file, cb) {\n\n    // check fieldnames, add counter, to check if second fieldname is missing\n    const filesCheck = validationService.checkFiles(req, file);\n\n    if (!filesCheck) {\n        console.log('files err, cancel uploading');\n        filesCheck.removeFiles();\n        return cb(new Error('handle files err'));\n    } else {\n        // all good, reset service, or from the controller\n        validationService.reset();\n    }\n\n    cb(null, true);\n}\n\n\n// Multer upload middleware -> add fileFilter \nconst upload = multer({ storage, fileFilter }).fields([\n  { name: \"imageUri\", maxCount: 1 },\n  { name: \"thumbnails\", maxCount: 4 },\n]);",
    "// remove files here also\n  const error = validationResult(req);\n\n  if (!error.isEmpty()) {\n\n    // remove files\n    filesCheck.removeFiles();\n\n    return res.status(400).json({\n    //...",
    "class Point {\n    constructor(x, y) {\n        this.x = x\n        this.y = y\n    }\n\n    isSameAs(p) {\n        return this.x === p.x && this.y === p.y;\n    }\n}\n\n// Given three collinear points p, q, r, the function checks if \n// point q lies within line segment 'pr' \nfunction onSegment(p, q, r) \n{\n    if (q.isSameAs(p) || q.isSameAs(r)) return false;\n\n    if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && \n        q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) \n    return true; \n    \n    return false; \n} \n  \n// To find orientation of ordered triplet (p, q, r). \n// The function returns following values \n// 0 --> p, q and r are collinear \n// 1 --> Clockwise \n// 2 --> Counterclockwise \nfunction orientation(p, q, r) \n{ \n    let val = (q.y - p.y) * (r.x - q.x) - \n            (q.x - p.x) * (r.y - q.y); \n    \n    if (val == 0) return 0; // collinear \n    \n    return (val > 0) ? 1: 2; // clock or counterclock wise \n}\n\n// Check if the lines have a common vertex\nfunction haveCommonVertex(p1, q1, p2, q2) {\n    return p1.isSameAs(p2)\n            || p1.isSameAs(q2)\n            || q1.isSameAs(p2)\n            || q1.isSameAs(q2)\n}\n\nfunction doLineSegementsIntersect(p1, q1, p2, q2)\n{\n    // Find the four orientations needed for general and \n    // special cases \n    let o1 = orientation(p1, q1, p2);\n    let o2 = orientation(p1, q1, q2);\n    let o3 = orientation(p2, q2, p1);\n    let o4 = orientation(p2, q2, q1);\n\n    // General case \n    if (o1 != o2 && o3 != o4 && ! haveCommonVertex(p1, q1, p2, q2))\n        return true;\n\n    // Special Cases \n    // p1, q1 and p2 are collinear and p2 lies on segment p1q1 \n    if (o1 == 0 && onSegment(p1, p2, q1)) return true;\n    \n    // p1, q1 and q2 are collinear and q2 lies on segment p1q1 \n    if (o2 == 0 && onSegment(p1, q2, q1)) return true;\n    \n    // p2, q2 and p1 are collinear and p1 lies on segment p2q2 \n    if (o3 == 0 && onSegment(p2, p1, q2)) return true;\n    \n    // p2, q2 and q1 are collinear and q1 lies on segment p2q2 \n    if (o4 == 0 && onSegment(p2, q1, q2)) return true;\n\n    return false; // Doesn't fall in any of the above cases \n}\n\n// Tests\n// non-touching line segments in a line\nlet p1 = new Point(1, 1),\n    q1 = new Point(2, 2),\n    p2 = new Point(3, 3),\n    q2 = new Point(4, 4);\n\nconsole.log('non-touching line segments in a line: ' + doLineSegementsIntersect(p1, q1, p2, q2)); // false\n\n// line segments with common vertex\np1 = new Point(1, 1),\nq1 = new Point(2, 2),\np2 = new Point(2, 2),\nq2 = new Point(1, 3);\n\nconsole.log('line segments with common vertex: ' + doLineSegementsIntersect(p1, q1, p2, q2)); // false\n\n// line segments with common vertex in a line\np1 = new Point(1, 1),\nq1 = new Point(2, 2),\np2 = new Point(2, 2),\nq2 = new Point(3, 3);\n\nconsole.log('line segments with common vertex in a line: ' + doLineSegementsIntersect(p1, q1, p2, q2)); // false\n\n// overlapping line segments\np1 = new Point(1, 1),\nq1 = new Point(3, 3),\np2 = new Point(1, 1),\nq2 = new Point(2, 2);\n\nconsole.log('overlapping line segments: ' + doLineSegementsIntersect(p1, q1, p2, q2)); // true\n\n// overlapping line segments\np1 = new Point(1, 1),\nq1 = new Point(3, 3),\np2 = new Point(2, 2),\nq2 = new Point(4, 4);\n\nconsole.log('overlapping line segments: ' + doLineSegementsIntersect(p1, q1, p2, q2)); // true\n\n// general condition: line segments intersecting\np1 = new Point(1, 1),\nq1 = new Point(3, 3),\np2 = new Point(1, 3),\nq2 = new Point(3, 1);\n\nconsole.log('general condition: line segments intersecting: ' + doLineSegementsIntersect(p1, q1, p2, q2)); // true",
    "function doLineSegmentsIntersect(a1X, a1Y, a2X, a2Y, b1X, b1Y, b2X, b2Y) {\n  const dxA = a2X - a1X;\n  const dyA = a2Y - a1Y;\n  const dxB = b2X - b1X;\n  const dyB = b2Y - b1Y;\n\n  // Calculate cross product values to determine orientation\n  const p0 = dyB * (b2X - a1X) - dxB * (b2Y - a1Y);\n  const p1 = dyB * (b2X - a2X) - dxB * (b2Y - a2Y);\n  const p2 = dyA * (a2X - b1X) - dxA * (a2Y - b1Y);\n  const p3 = dyA * (a2X - b2X) - dxA * (a2Y - b2Y);\n\n  // The segments intersect if the products of these cross products are non-positive (i.e. the segments straddle each other)\n  const p01 = p0 * p1;\n  const p23 = p2 * p3;\n  if(p01 < 0 && p23 < 0) return true;\n  if(p01 > 0 || p23 > 0) return false;\n  // Now handle the remaining cases: aligned segments.\n  // We only work with the most significant coordinate (we have the same slope, so the xs and ys are proportional.\n  const xory = Math.abs(dxB) > Math.abs(dyB);\n  const b1a1 = xory ? b1X - a1X : b1Y - a1Y;\n  const b1a2 = xory ? b1X - a2X : b1Y - a2Y;\n  const b2a1 = xory ? b2X - a1X : b2Y - a1Y;\n  const b2a2 = xory ? b2X - a2X : b2Y - a2Y;\n  const b1a = b1a1 * b1a2;\n  const b2a = b2a1 * b2a2;\n  if(b1a < 0 || b2a < 0) return true; // B1 or B2 is between A1 and A2.\n  const sameSide = b1a1 * b2a2; // Are B1 and B2 on the same side of [A]? To get the sign, just test one vertex of each: the previous line made sure we B1 and B2 are on the same side of each A.\n  if(sameSide != 0) return sameSide < 0;\n  // Here we have a 0, that is, a vertex in common.\n  if(b1a == 0 && b2a == 0) return true; // Same segment!\n  if(b1a1 == 0) return b2a1 * (xory ? dxA : dyA) > 0; // If B1 == A1, see if B2 is in the same or opposed direction as A2.\n  if(b2a1 == 0) return b1a1 * (xory ? dxA : dyA) > 0;\n  if(b1a2 == 0) return b2a2 * -(xory ? dxA : dyA) > 0;\n  if(b2a2 == 0) return b1a2 * -(xory ? dxA : dyA) > 0;\n}\n\n/*--- Test framework ---*/\n\nfunction _t(a1X, a1Y, a2X, a2Y, b1X, b1Y, b2X, b2Y, expect, descr) {\n  let res = doLineSegmentsIntersect(a1X, a1Y, a2X, a2Y, b1X, b1Y, b2X, b2Y);\n  console.log((res?1:0)+(res != expect ? ' <> ' : ' == ')+(expect?1:0)+' '+descr);\n}\n\nfunction t(a1X, a1Y, a2X, a2Y, b1X, b1Y, b2X, b2Y, expect, descr) {\n  // Study permutations of A1 and A2, of [A] and [B].\n  _t(a1X, a1Y, a2X, a2Y, b1X, b1Y, b2X, b2Y, expect, descr);\n  _t(a2X, a2Y, a1X, a1Y, b1X, b1Y, b2X, b2Y, expect, descr);\n  _t(b1X, b1Y, b2X, b2Y, a1X, a1Y, a2X, a2Y, expect, descr);\n  _t(b1X, b1Y, b2X, b2Y, a2X, a2Y, a1X, a1Y, expect, descr);\n}\n\n/*--- Tests ---*/\n\nt(0, 0, 1, 1, 1, 0, 2, 1,  0, \"Parallel\");\nt(0, 1, 1, 1, 0, 0, 1, 2,  1, \"Secant\");\nt(0, 1, 1, 1, 1, 1, 2, 1,  0, \"Touching on 1 vertex\");\nt(0, 0, 2, 2, 1, 1, 2, 2,  1, \"Overlapping\");\nt(0, 0, 3, 3, 1, 1, 2, 2,  1, \"Subpart\");\nt(0, 0, 2, 2, 1, 1, 2, 2,  1, \"Subpart with 1 vertex\");\nt(0, 0, 1, 1, 1, 1, 0, 0,  1, \"Identical\");\nt(0, 0, 1, 1, 2, 2, 3, 3,  0, \"Aligned but disjoint\");",
    "import { useRef, useState } from \"react\";\n\nconst DatePicker = () => {\n  const dateInputRef = useRef(null);\n  const [date, setDate] = useState(\"\");\n\n  const handleClick = () => {\n    if (dateInputRef.current) {\n      dateInputRef.current.showPicker(); \n    }\n  };\n\n  const handleDateChange = (e) => {\n    setDate(e.target.value);\n  };\n\n  return (\n    <div className=\"...\">\n      <div\n        className=\"...\"\n        onClick={handleClick}\n      >\n        <p className=\"...\">{date || \"Select a date\"}</p>\n        <input\n          type=\"date\"\n          ref={dateInputRef}\n          className=\"hidden\"\n          onChange={handleDateChange}\n        />\n      </div>\n      <div>...</div>\n    </div>\n  );\n};\n\nexport default DatePicker;",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.25.6/babel.min.js\"></script>\n<script src=\"https://unpkg.com/@tailwindcss/browser@4\"></script>\n\n<div id=\"root\"></div>\n\n<script type=\"text/babel\" data-presets=\"env,react\">\nconst { useState, useRef } = React;\n\nfunction DatePickerComponent() {\n  const [date, setDate] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const handleDateOverlay = () => {\n    inputRef.current?.showPicker();\n  };\n\n  const handleDateChange = (e) => {\n    setDate(e.target.value);\n  };\n\n  return (\n    <div className=\"space-x-4 p-4\">\n      <div\n        class=\"relative cursor-pointer\"\n        onClick={handleDateOverlay}\n      >\n        <span className=\"text-3xl\">\ud83d\udcc5</span>\n        <span className=\"text-lg\">{date}</span>\n        <input\n          ref={inputRef}\n          type=\"date\"\n          value={date}\n          onChange={handleDateChange}\n          className=\"w-0 h-0 absolute bottom-0 left-0 -z-10\"\n        />\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<DatePickerComponent />, document.getElementById('root'));\n</script>",
    ".container__main .popup__overlay {\n  width: 1100px;\n  min-height: 50%;\n  max-width: 95%;\n  background: rgb(190, 186, 186);\n  position: absolute;\n  top: 45%; /* Fixed top position */\n  left: 50%;\n  transform: translateX(-50%); /* Only center horizontally */\n  border-radius: 11px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.4);\n  opacity: 0;\n  visibility: hidden;\n}",
    "@keyframes slideDownAndFade {\n  0% {\n    opacity: 0;\n    visibility: hidden;\n  }\n  100% {\n    opacity: 1;\n    visibility: visible;\n    z-index: 1003;\n  }\n}",
    "function myVisit() {\n  var x = document.getElementById(\"add_site_type_vcls\");\n  var i = x.selectedIndex;\n\n  if (i == 1) {\n    // ... other style changes\n    popOver.style.height = '630px'; // Only change height\n  } else if (i == 2) {\n    // ... other style changes\n    popOver.style.height = '740px';\n  } else if (i == 3) {\n    // ... other style changes\n    popOver.style.height = '1325px';\n  }\n}",
    "import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.css'],\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InvoiceComponent implements OnChanges {\n\n  @Input()\n  invoiceData: any = null;\n\n  get invoiceId(): string | null  {\n      return this.invoiceData?.invoiceGenInfo?.invoice?.id || null;\n  }\n\n  onEdit(): void {\n    console.log(\"Invoice Data in Edit:\", this.invoiceId);\n  }\n}",
    "[...]\n            FileUtility.downloadFile(this.application.remoteUrl + path, localPath, () => setTimeout(() => this.downloadNextElement(), 100), (downloadError) => {\n                logError(`Error while downloading file ${this.application.remoteUrl + path} to local path ${localPath}: ${FileUtility.getErrorText(downloadError.code)}.`);\n                setTimeout(() => this.downloadNextElement(), 100);\n            });\n[...]\n    } else {\n        FileUtility.deleteFile(localPath, () => setTimeout(() => this.downloadNextElement(), 100), (deleteError) => {\n            logError(`Error while deleting ${localPath}: ${FileUtility.getErrorText(deleteError.code)}.`);\n            setTimeout(() => this.downloadNextElement(), 100);\n        });\n    }\n[...]",
    "{\n    method: 'PUT',\n    headers: {\n        'x-amz-meta-type': response.metadata.type,\n        'x-amz-meta-userid': response.metadata.userId,\n\n\n        'x-amz-meta-filename': `=?UTF-8?B?${btoa(Array.from(new TextEncoder().encode(\n\n                response.metadata.filename\n\n            ), b => String.fromCodePoint(b)).join(''))}?=`\n\n\n    },\n    body: file,\n}",
    "$pathinfo = pathinfo($filename);\n$safeName = (new Slugify())->slugify($pathinfo['filename']) . '.' . $pathinfo['extension'];\n...\n$metadata = [\n    ...\n    'filename' => $safeName, // Changed from `$filename`.\n];",
    "console.log( typeof Object(\"hello\") );            // \"object\"\nconsole.log( Object(\"hello\") instanceof String ); // true\n\nconsole.log( typeof Object(42) );            // \"object\"\nconsole.log( Object(42) instanceof Number ); // true",
    "import React from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport AnonLayout from \"./AnonLayout\";\nimport AuthLayout from \"./AuthLayout\";\n\nconst Layout = ({ children }) => {\n  const { isAuthenticated } = useAuth();\n\n  return isAuthenticated ? <AuthLayout>{children}</AuthLayout> : <AnonLayout>{children}</AnonLayout>;\n};\n\nexport default Layout;",
    "gsap.registerPlugin(ScrollTrigger);\n\nScrollTrigger.create({\n  start: 0,\n  end: \"max\",\n  onLeave: self => {\n    self.scroll(1);\n    ScrollTrigger.update();\n  },\n  onLeaveBack: self => {\n    self.scroll(ScrollTrigger.maxScroll(window)-1);\n    ScrollTrigger.update();\n  }\n});",
    "const mapInstance = useRef(null);\nconst markersOnMap = useRef({});\n\nuseEffect(() => {\n  if (!mapElement.current) return;\n\n  // Convert markers to GeoJSON format\n  const geoJson = {\n    type: \"FeatureCollection\",\n    features: markers.map((marker, index) => ({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [marker.longitude, marker.latitude],\n      },\n      properties: {\n        id: index + 1,\n        name: marker.label || `Location ${index + 1}`,\n      },\n    })),\n  };\n\n  // Initialize map with correct glyphs configuration\n  mapInstance.current = tt.map({\n    key: process.env.TOMTOM_API_KEY,\n    container: mapElement.current,\n    center: center,\n    zoom: zoom,\n    style: 'https://api.tomtom.com/map/1/style/22.2.1-*/2/metadata.json?key={Your_API_Key}',\n    glyphs: 'https://api.tomtom.com/map/1/glyph/22.2.1-*/metadata.json?key={Your_API_Key}'\n  });\n\n  // Setup layers and sources\n  const setupMapLayers = () => {\n    // Add source for clustering\n    if (mapInstance.current.getSource(\"point-source\")) return;\n    mapInstance.current.addSource(\"point-source\", {\n      type: \"geojson\",\n      data: geoJson,\n      cluster: true,\n      clusterMaxZoom: 14,\n      clusterRadius: 50,\n    });\n\n    // Add cluster circles layer\n    mapInstance.current.addLayer({\n      id: \"clusters\",\n      type: \"circle\",\n      source: \"point-source\",\n      filter: [\"has\", \"point_count\"],\n      paint: {\n        \"circle-color\": [\n          \"step\",\n          [\"get\", \"point_count\"],\n          \"#EC619F\", \n          4, \n          \"#008D8D\", \n          7, \n          \"#004B7F\", \n        ],\n        \"circle-radius\": [\n          \"step\",\n          [\"get\", \"point_count\"],\n          15, \n          4, \n          20, \n          7, \n          25, \n        ],\n        \"circle-stroke-width\": 1,\n        \"circle-stroke-color\": \"white\",\n        \"circle-stroke-opacity\": 1,\n      },\n    });\n\n    // Add cluster count layer\n    mapInstance.current.addLayer({\n      id: \"cluster-count\",\n      type: \"symbol\",\n      source: \"point-source\",\n      filter: [\"has\", \"point_count\"],\n      layout: {\n        \"text-field\": \"{point_count_abbreviated}\",\n        \"text-size\": 16,\n        \"text-font\": [\"Noto Sans Regular\"]  // Using a standard font from TomTom's default style\n      },\n      paint: {\n        \"text-color\": \"white\",\n      },\n    });\n  };\n\n  mapInstance.current.on('load', setupMapLayers);\n\n  return () => {\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n  };\n}, [markers, center, zoom]);",
    "interface Props {\n  estilos?: string\n  data: IDetalleEstacion | INarrowDown\n}\nconst props = withDefaults(defineProps<Props>(), {\n  estilos: '',\n}",
    "const props = defineProps<{\n  data: buttonProps\n}>()",
    "<component\n    :is=\"listToRender.component\"\n    v-if=\"listToRender.component\"\n    :=\"{ data: componentProps }\"\n    @item-click=\"buttonClick(componentProps)\"\n  />",
    ".Events(e => e.DataBound(\"chartDataBound\"))\n.Events(events => events.SeriesClick(\"onChartBarClick2\").Render(\"onChartRender\"))",
    ".Events(e => e.DataBound(\"chartDataBound\").SeriesClick(\"onChartBarClick2\").Render(\"onChartRender\"))",
    "<div class=\"swiper-button-prev estrutura-prev\" id=\"estrutura-prev\"></div>\n<div class=\"swiper-button-next estrutura-next\" id=\"estrutura-next\"></div>",
    "function spaRouting(){\n    const path = window.location.pathname\n\n    const fileID = Date.now() // <==== HERE\n\n    const html = '...' //fetch request grabbing HTML file from node server \n    container.innerHTML = html\n\n    const oldScripts = container.getElementsByTagName('script')\n    for (const oldScript of oldScripts){\n        const newScript = document.createElement('script')\n        for(const attribute of oldScript.attributes){newScript.setAttribute(attribute.name, attribute.value)}\n\n    newScript.src = `${newScript.src}?fileID=${fileID}` // <==== AND HERE\n\n    newScript.addEventListener('load', () => console.log('script was loaded'))\n    oldScript.replaceWith(newScript)\n    }\n}",
    "export const formatFormData = (formData) => {\n  const data = new FormData();\n\n  // Append regular fields\n  data.append(\"title\", formData.title);\n  data.append(\"locationName\", formData.locationName);\n  data.append(\"location\", JSON.stringify(formData.location));\n  data.append(\"description\", formData.description);\n  data.append(\"price\", formData.price);\n  data.append(\"offerPrice\", formData.offerPrice);\n  data.append(\"maxCapacity\", formData.maxCapacity);\n  data.append(\"duration\", formData.duration);\n  data.append(\"groupSize\", formData.groupSize);\n  data.append(\"language\", JSON.stringify(formData.language));\n  data.append(\"popularFeatures\", JSON.stringify(formData.popularFeatures));\n  data.append(\"included\", JSON.stringify(formData.included));\n  data.append(\"excluded\", JSON.stringify(formData.excluded));\n  data.append(\"highlights\", formData.highlights);\n  data.append(\"peopleTypes\", JSON.stringify(formData.peopleTypes));\n  data.append(\"prices\", JSON.stringify(formData.prices));\n\n  // Append itineraries and images as file objects\n  formData.itineraries.forEach((itinerary, index) => {\n    data.append(`itineraries[${index}][title]`, itinerary.title);\n    data.append(`itineraries[${index}][time]`, itinerary.time);\n    data.append(`itineraries[${index}][description]`, itinerary.description);\n    data.append(`itineraries[${index}][duration]`, itinerary.duration);\n\n    if (itinerary.image && itinerary.image instanceof File) {\n      data.append(`itineraries[${index}][image]`, itinerary.image);\n    }\n  });\n\n  // Append main images\n  formData.images.forEach((image) => {\n    if (image instanceof File) {\n      data.append('images', image); // Append images as files\n    }\n  });\n\n  return data;\n};",
    "import dynamic from 'next/dynamic';\nconst ClientOnlyComponent = dynamic(() => import('./YourComponent'), { ssr: false });",
    "const user = await User.findById({ email }); \u274c",
    "const user = await User.findOne({ email }); \u2705",
    "router.get('/profile', getUserProfile); \u274c",
    "router.get('/profile', protect, getUserProfile); \u2705",
    "import { Core } from '.'\nimport http from '../http'\njest.mock('../http', () => {\n  return jest.fn().mockImplementation(() => ({\n    async get(url) { \n      return { ok: true } \n    }\n  }))\n})",
    "import { Core } from '.'\n\nit('Domain Name Entry Test', async () => {\n    const mockResponse = { name: 'javierhersan.stw', urls: [], ips: [] }\n    const mockGet = jest.fn().mockImplementation(async url => ({\n      ok: true,\n      status: 200,\n      json: async () => mockResponse,\n    }))\n    const mockHttp = {\n      get: mockGet\n    }\n\n    const core = new Core(mockHttp)\n    const domainNameEntry = await core.getUserDomainNameEntry(\n      'javierhersan.stw',\n      'http://localhost:3000',\n    )\n\n    expect(mockGet).toBeCalledWith('http://localhost:3000/api/v1/dns/search/username/javierhersan.stw')\n    expect(domainNameEntry).toEqual(mockResponse)\n})",
    "const str = '[Tom][]';\n\nconst substrs = str.substring(1, str.length - 1).split('][');\nconst lengths = substrs.map(str => str.length);\n\nconsole.log(lengths.join(', '));",
    "const str = '[Tom][]';\nconst count = str.match(/\\[(.*?)\\]/g)\n    .map(x => x.slice(1, -1))\n    .map(x => x.length)\n    .join(', ');\nconsole.log(count);",
    "mix.webpackConfig({\n  watchOptions: {\n    ignored: /dist/,\n  },\n});",
    "document.querySelectorAll(\"a\").forEach(link => {\n    link.addEventListener(\"click\", function() {\n        this.style.color = \"purple\"; // Simulate `:visited` manually\n    });\n});",
    "a:link {\n    color: blue;  /* Default color before click */\n}\n\na:visited {\n    color: purple;  /* Changes after click */\n}\n\na:hover {\n    color: red;  /* Hover effect */\n}\n\na:active {\n    color: green;  /* Click effect */\n}\n\n/* Keyframe animation example */\n@keyframes fadeColor {\n    0% { color: blue; }\n    100% { color: purple; }\n}\n\na:link, a:visited {\n    animation: fadeColor 2s ease-in-out;\n}",
    "const Header = ({ title = 'Default title' }) => (\n  <div>\n    {/* Rest of the code */}\n    <div>{title}</div>\n  </div>\n);\n\nexport default Header;",
    "\"menus\": {\n      \"editor/context\": [\n        {\n          \"submenu\": \"colorquick.submenu\",\n          \"when\": \"editorTextFocus\",\n          \"group\": \"navigation\"\n        }\n      ],\n      \"colorquick.submenu\": [\n        {\n          \"command\": \"colorquick.helloWorld\",\n          \"group\": \"navigation\"\n        }\n      ]\n    },\n    \"submenus\": [\n      {\n        \"id\": \"colorquick.submenu\",\n        \"label\": \"ColorQuick\"\n      }\n    ]",
    "userEnteredValue: { formulaValue: `=--\"${element}\"` }",
    "function _get_batch_update_type(input) {\n  if (Array.isArray(input)) {\n    return input.map(row => ({\n      values: row.map(element => ({\n        userEnteredValue: convertToSheetValue(element)\n      }))\n    }));\n  }\n\n  return [{\n    values: [{\n      userEnteredValue: convertToSheetValue(input)\n    }]\n  }];\n}\n\nfunction convertToSheetValue(value) {\n  if (typeof value === \"string\") {\n    let parsedDate = new Date(value);\n    if (!isNaN(parsedDate.getTime())) {\n      return { numberValue: parsedDate.getTime() / 86400000 + 25569 };\n    }\n    return { stringValue: value }; // If not a valid date, keep as string\n  }\n  \n  return { numberValue: value };\n}",
    "window.addEventListener('load', () => {\n  const nav = document.querySelector('nav');\n  const buttons = nav.querySelectorAll('button')\n  const pages = document.querySelectorAll(\"body > section\");\n  const lastPage = pages.length - 1;\n  buttons[0].disabled = true; // can be done in html too\n  buttons[1].disabled = true;\n  let cnt = 0;\n  nav.addEventListener('click', (e) => {\n    const tgt = e.target.closest('button');\n    if (!tgt) return; // not a button\n    const id = tgt.id;\n    switch (id) {\n      case 'first': cnt = 0; break;\n      case 'prev':  cnt = Math.max(cnt - 1, 0); break;\n      case 'next':  cnt = Math.min(cnt + 1, lastPage); break;\n      case 'last':  cnt = lastPage; break;\n    }\n    pages.forEach((page, i) => page.classList.toggle('active', i === cnt));\n    buttons.forEach((button, i) => button.disabled = i < 2 ? cnt == 0 : cnt >= lastPage);\n  });\n});",
    "* {\n  font-family: sans-serif;\n}\n\nbody>section {\n  display: none;\n}\n\n\nbutton {\n  font-size: 160%;\n}\n\nbody>section.active {\n  display: block;\n}",
    "<nav><button id=\"first\">\u21e4</button><button id=\"prev\">\u2190</button>\n  <button id=\"next\">\u2192</button><button id=\"last\">\u21e5</button>\n</nav>\n\n<section class=\"active\">Page 1</section>\n<section>Page 2</section>\n<section>Page 3</section>\n<section>Page 4</section>",
    "let parser = new DOMParser();\n\nobjects.forEach(object => {\n    let string = Object.entries(object).reduce((str, key) => {\n        return str.replace(`#[${key[0]}]`, key[1]);\n    }, html);\n\n    let doc = parser.parseFromString(string, 'text/html');\n    \n    let node = doc.body.firstElementChild;\n\n    HTMLElement.appendChild(node);\n});",
    "function doAuth(username, password) {\n    return fetch('http://localhost:8080/user/login', {\n            method: 'POST',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        })",
    "doAuth(\"foo\", \"bar\").then(request => request.json()).then(jsonRequest => {...setCookie})",
    "export async function POST(req, res) {\n    try {\n        const body = await req.json();\n\n        const response = NextResponse.json({message: 'Cookie set successfully'});\n\n        response.cookies.set('session', body.access_token, {\n            httpOnly: false,\n            path: '/',\n            maxAge: body.expires_in,\n            expires: new Date(Date.now() + (body.expires_in))\n        });\n\n        return response;\n\n    } catch (error) {\n        return new Response(error.message, {status: 500});\n    }\n}",
    "response.cookie('refreshToken', refreshToken, {\n  path: '/',\n  httpOnly: true,\n  secure: this.configService.getOrThrow('ENVIRONMENT') === 'PRODUCTION',\n  sameSite: true,\n  maxAge: 7 * 24 * 60 * 60 * 1000,\n})",
    "return { \n  token: generatedAccessToken,\n  user: userWithoutPassword,\n  refreshToken\n}",
    "setCookie(undefined, 'mywebsite-token', response.token, {\n  maxAge: tokenExpiration,\n})\nsetCookie(undefined, 'mywebsite-refresh-token', response.refreshToken, {\n  maxAge: tokenExpiration,\n})",
    "setCookie(undefined, 'mywebsite-token', response.token, {\n  maxAge: tokenExpiration,\n  httpOnly: true\n})\nsetCookie(undefined, 'mywebsite-refresh-token', response.refreshToken, {\n  maxAge: tokenExpiration,\n})",
    "module.exports = {\n  async rewrites() {\n    return [\n      {\n        source: '/api',\n        destination: 'http://backend-domain',\n      },\n    ]\n  },\n}",
    "async login(...) {\n    const token = this.authService.generateAccessToken(user.id)\n    const refreshToken = this.authService.generateRefreshToken(user.id)\n    await redis.storeRefreshToken(user.id, refreshToken)\n\n    return { token, user: userWithoutPassword }\n  }\n\n  async refresh(...) {\n    const refreshToken = await redis.getRefreshToken(user.id)\n\n    const { sub, user } =\n      await this.authService.validateRefreshToken(refreshToken)\n\n    const generatedAccessToken = this.authService.generateAccessToken(sub)\n    const generatedRefreshToken = this.authService.generateRefreshToken(sub)\n    const { senha, ...userWithoutPassword } = user\n\n    await redis.storeRefreshToken(user.id, generatedRefreshToken)\n\n    return { token: generatedAccessToken, user: userWithoutPassword }\n  }",
    "async login(...) {\n    const jwt = this.authService.generateAccessToken(user.id)\n    const refreshToken = this.authService.generateRefreshToken(user.id)\n\n    const opaqueToken = uuidv4() // from uuid@npm\n\n    await Promise.all([\n      redis.storeJWT(user.id, jwt, opaqueToken)\n      redis.storeRefreshToken(user.id, refreshToken)\n    ])\n\n    return { token: opaqueToken, user: userWithoutPassword }\n  }",
    "const h1 = document.querySelector(\"h1\");\nconst h2 = document.querySelector(\"h2\");\n\n/**\n * Having a rootMargin would mean the target element would have\n * to clear that length before it was considered intersecting \n * so it was changed from 50px to 0px\n */\nconst options = {\n  root: null,\n  rootMargin: \"0px\",\n  threshold: 0\n};\n\n/**\n * Callback function compares the target element top position\n * to its bottom position in order  to determine the direction\n * the target element is scrolling (up or down).\n * @param {object} entries  - IntersectionObserverEntry\n * @param {object} observer - IntersectionObserver instance\n */\nconst callback = (entries, observer) => {\n  entries.forEach(entry => {\n/**\n * IntersectionObserverEntry Properties\n * - .intersectionRect is the clientBoundingRect of the part \n *   of the target that is intersecting.\n * - .top is the y position of .intersectionRect relative to \n *   its top border and viewport.\n * - .bottom is like .top concerning the bottom border.\n * - .intersectionRatio is the portion of the target that's\n *   intersecting.\n * - .target is the element being observed.\n * - .isIntersecting a boolean when true is when .target is\n *   at or past its threshold and within the intersection\n *   observer root.\n */     \nconst fromTop = entry.intersectionRect.top;\nconst fromBottom = 100 - entry.intersectionRect.bottom;\nif (entry.intersectionRatio < 0.1 ||\n    fromTop > fromBottom &&\n    entry.isIntersecting === true) {\n  h1.classList.remove(\"red\");\n  entry.target.classList.remove(\"red\");\n}\nif (fromBottom > fromTop && entry.isIntersecting === true) {\n  h1.classList.add(\"red\");\n  entry.target.classList.add(\"red\");\n}\n  });\n};\n/**\n * Instintate IntersectionObserver pass callback function and\n * options object.\n */\nlet observer = new IntersectionObserver(callback, options);\n// Call .observe() method and pass the target element\nobserver.observe(h2);",
    "body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 350vh;\n}\n\nheader {\n  position: fixed;\n  top: 0;\n  left: 0\n}\n\n.red {\n  color: red;\n}",
    "<header>\n  <h1>Header 1</h1>\n</header>\n<h2>Header 2</h2>",
    "let caught = 5 * 5;",
    "document.getElementsByTagName(\"tbody\")[0].insertAdjacentHTML(\"afterbegin\", barChart)",
    "app/\n\u251c\u2500\u2500 find/\n\u2502     \u251c\u2500\u2500 searchResults/\n\u2502     \u2502         \u251c\u2500\u2500 layout.tsx\n\u2502     |         \u251c\u2500\u2500 page.jsx",
    "import { Suspense } from \"react\";\nexport default function SRLayout({ children }: { children: React.ReactNode }) {\n   return (\n      <Suspense>\n         {children}\n      </Suspense>\n   )\n}",
    "import { Suspense } from \"react\";\n\nconst searchResults = () => {\n    // code\n}\n\nconst Page = () => {\n    return (\n        <Suspense>\n            <searchResults />\n        </Suspense>\n    )\n}\n\nexport default Page",
    "any code\n<div id=success></div>\nany code",
    "#success { /* layout */ }",
    "function printSuccess ( msg ) /* msg may contain HTML tags */\n{\n  var e = document.getElementById(\"success\");\n  if (e)\n    e.innerHTML = msg;\n}",
    "isTouch = ('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)\n$tooltippeds = $('.tooltip' + (isTouch?':not(.noTouchTt)':'') ) \n    .tooltipster({\n    debug:true,\n    animation: 'grow',\n    interactive:true,\n    repositionOnScroll:true,\n    contentAsHTML : true,\n    //trackOrigin:true,     //performance!\n    delay: 200,\n    trigger: 'custom',\n    triggerOpen: {\n        click: true,\n        mouseenter: true,\n        tap: true\n    },\n    triggerClose: {\n        mouseleave: true,\n        click: true,\n        tap: true\n    }\n})  \n//***Make touch not trigger events or follow links by capturing via the parent, and put the event in a new element in the tooltip\nif (isTouch) {\n    //Capture via class tooltipMore except when an ancestor is an <a>, then via  parent of the latter\n    $tooltippeds.parents('a').add($tooltippeds.not('a .tooltip').filter('[tooltipMore]')).parent().each((i,el) => {\n        //Evade creating it twice since tooltip elements share parents\n        if($(el).closest('[hasTouchClickPrevent]').length>0)    return\n        el.setAttribute('hasTouchClickPrevent',true)\n        //Prevent the click event on child except when..\n        el.addEventListener('click',(e) => {    console.log('tooltip click parent > ', window.tooltipMoreClicked)\n                if( !$(e.target).closest('.tooltip').length ||      //..child without tooltip\n                    e.target.classList.contains('noTouchTt') ||     //..specifically denied with class 'noTouchTt' (can still be child)\n                    window.tooltipMoreClicked ||                    //..triggered from inside tooltip \"more\" element\n                    e.target==e.currentTarget                       //..if the parent itself has a click event\n                ) return true\n                e.preventDefault()\n                e.stopImmediatePropagation()\n        },   true)      //capture!\n      })\n      $tooltippeds.filter('[tooltipMore], a .tooltip')\n        //Put the event on a new element inside the tooltip and trigger with original target when clicked\n        .tooltipster('option', 'functionFormat', (instance, helper, content) => {   //console.log('functionFormatBefore', content)\n            $or = $(helper.origin)\n            $content = $.parseHTML( content + '<a class=\"more\">' + ($or.attr('tooltipMore')??'Click for details') + '</a>' )\n            $($content).filter('.more').on('click', e => {\n                window.tooltipMoreClicked=true\n                evt = new PointerEvent(e.originalEvent.type, e)//clone event to get ctrlKey etc\n                helper.origin.dispatchEvent(evt)    //jquery trigger() is NO solution since it doesn't bubble up for tooltips inside <a>\n                window.tooltipMoreClicked = false\n            \n            })\n            return $content\n        })",
    "app.whenReady().then(() => {\n  app.userAgentFallback = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36\";\n});",
    "const myMaterial = new THREE.MeshBasicMaterial({\n  map: this.resources.items.screen,\n});\n\n\nif (child.name === \"Computer\") {\n  child.children[1].material = myMaterial;\n}",
    "myMaterial.needsUpdate = true;",
    "let arr2 = ['aa','bb','cc','dd'];\nlet arr3 = arr2;\nremove(arr2, 'bb');\nconsole.log(arr2);//['aa','cc','dd'];\nconsole.log(arr3);//['aa','cc','dd'];\nremove(arr3, 'aa');//['cc','dd'];\nconsole.log(arr2);//['cc','dd'];\nconsole.log(arr3);//['cc','dd'];\n\nfunction remove(arr, item) {\n  let index = arr.indexOf(item);\n  if (index !== -1)\n    arr.splice(index, 1);\n}",
    "Array.prototype.remove = remove;\n\nlet arr2 = ['aa','bb','cc','dd'];\nlet arr3 = arr2;\narr2.remove('bb');\nconsole.log(arr2);//['aa','cc','dd'];\nconsole.log(arr3);//['aa','cc','dd'];\narr3.remove('aa');//['cc','dd'];\nconsole.log(arr2);//['cc','dd'];\nconsole.log(arr3);//['cc','dd'];\n\nfunction remove(item) {\n  let index = this.indexOf(item);\n  if (index !== -1)\n    this.splice(index, 1);\n}",
    "for (let i = 0; i < indices.length; i += 3) {\n            const vert0 = vec3.create(\n                vertices[indices[i] * 3],\n                vertices[indices[i] * 3 + 1],\n                vertices[indices[i] * 3 + 2]\n            )\n            const vert1 = vec3.create(\n                vertices[indices[i + 1] * 3],\n                vertices[indices[i + 1] * 3 + 1],\n                vertices[indices[i + 1] * 3 + 2]\n            )\n\n            const vert2 = vec3.create(\n                vertices[indices[i + 2] * 3],\n                vertices[indices[i + 2] * 3 + 1],\n                vertices[indices[i + 2] * 3 + 2]\n            )",
    "// Constants for map size and test iterations\nconst MAP_SIZE = 100000;\nconst TEST_RUNS = 100;\n\n// Create a map with MAP_SIZE entries\nconst mapFrom = new Map();\nfor (let i = 0; i < MAP_SIZE; i++) {\n  mapFrom.set(i, `value_${i}`);\n}\n\n// Function to run tests TEST_RUNS times and calculate average, min, and max\nfunction test(testName, testFunction) {\n  const times = [];\n\n  // Run the test TEST_RUNS times\n  for (let i = 0; i < TEST_RUNS; i++) {\n    const start = performance.now();\n    testFunction();\n    const end = performance.now();\n    times.push(end - start);\n  }\n\n  // Calculate average, min, and max\n  const avg = times.reduce((a, b) => a + b, 0) / times.length;\n  const min = Math.min(...times);\n  const max = Math.max(...times);\n\n  // Log the results\n  console.log(`${testName}:`);\n  console.log(`  Average Time: ${avg.toFixed(2)} ms`);\n  console.log(`  Min Time: ${min.toFixed(2)} ms`);\n  console.log(`  Max Time: ${max.toFixed(2)} ms`);\n}\n\n// 1. Using Map constructor to copy\ntest('Map Constructor', () => {\n  const mapToConstructor = new Map(mapFrom);\n});\n\n// 2. Using for...of loop to copy\ntest('for...of loop', () => {\n  const mapToForOf = new Map();\n  for (const [key, value] of mapFrom) {\n    mapToForOf.set(key, value);\n  }\n});\n\n// 3. Using forEach to copy\ntest('forEach', () => {\n  const mapToForEach = new Map();\n  mapFrom.forEach((value, key) => {\n    mapToForEach.set(key, value);\n  });\n});",
    "const { createApp, ref, defineExpose } = Vue;\n\n// Child\nconst ChildComponent = {\n  template: `\n    <div v-if=\"status\">\n      <div>\n        <p>Modal is open!</p>\n        <button @click=\"closeModal\">Close</button>\n      </div>\n    </div>\n  `,\n  setup() {\n    const status = ref(false);\n\n    const closeModal = () => {\n      status.value = false;\n    };\n\n    defineExpose({ status });\n\n    return { status, closeModal };\n  }\n};\n\n// Parent\nconst App = {\n  components: { ChildComponent },\n  setup() {\n    const childRef = ref(null);\n\n    const openChildModal = () => {\n      if (childRef.value) {\n        childRef.value.status = true;\n      }\n    };\n\n    return { childRef, openChildModal };\n  }\n};\n\ncreateApp(App).mount(\"#app\");",
    "<script src=\"https://unpkg.com/vue@3/dist/vue.global.prod.js\"></script>\n\n<div id=\"app\">\n  <button @click=\"openChildModal\">Open Modal</button>\n  <child-component ref=\"childRef\"></child-component>\n</div>",
    "const { createApp, ref, defineEmits } = Vue;\n\n// Child\nconst ChildComponent = {\n  template: `\n    <button v-if=\"! status\" @click=\"openModal\">Open Modal</button>\n    <div v-if=\"status\">\n      <div>\n        <p>Modal is open!</p>\n        <button @click=\"closeModal\">Close</button>\n      </div>\n    </div>\n  `,\n  setup(_, { emit }) {\n    const status = ref(false);\n\n    const openModal = () => {\n      status.value = true;\n      emit('opened');\n    };\n    \n    const closeModal = () => {\n      status.value = false;\n      emit('closed');\n    };\n\n    return { status, openModal, closeModal };\n  }\n};\n\n// Parent\nconst App = {\n  components: { ChildComponent },\n  setup() {\n    const customFnForChildOpen = () => {\n      console.log('modal opened');\n    };\n    \n    const customFnForChildClose = () => {\n      console.log('modal closed');\n    };\n\n    return { customFnForChildOpen, customFnForChildClose };\n  }\n};\n\ncreateApp(App).mount(\"#app\");",
    "<script src=\"https://unpkg.com/vue@3/dist/vue.global.prod.js\"></script>\n\n<div id=\"app\">\n  <child-component @opened=\"customFnForChildOpen\" @closed=\"customFnForChildClose\"></child-component>\n</div>",
    "<template>\n  <button onclick=\"isModalShown = true\">show</button>\n  <Child v-model=\"isModalShown\" />\n</template>\n\n<script setup>\n  const isModalShown = ref(false);\n</script>",
    "<template>\n  <MyModal v-model=\"isShown\" />\n</template>\n\n<script setup>\n  const isShown = defineModel('modelValue');\n\n  function onClose() {\n    isShown.value = false; // we can mutate the modelValue and the change will be emitted to the parent as an event, causing both components to update\n  }\n</script>",
    "this.activeWs = ws;",
    "this.activeWs = null;",
    "var context = this;",
    "class WSS {\n    constructor(){\n        const WebSocket = require('ws');\n        this.wss = new WebSocket.Server({ port: 3001});\n        this.activeWs = null;\n\n        var context = this;\n\n        this.wss.on('connection', function connection(ws) {\n            console.log(\"Client Connected\");\n            if (context.activeWs != null) {\n                context.activeWs.close(1000, \"Server initiated close\");\n                console.log(\"Closed old session\")\n            }\n            context.activeWs = ws;\n        })\n\n        this.sendCommand = (data) => {\n            console.log(context.activeWs)\n            if (context.activeWs == null) {\n                return;\n            }\n            console.log(data);\n        }\n    }\n}",
    "const ref = useRef<HTMLDivElement>(null);\nconst [delay, setDelay] = useState(1.05 + index * 0.2);\n\nuseEffect(() => {\n  if (ref.current) {\n    if (ref.current.getBoundingClientRect().top > window.innerHeight) {\n      setDelay(0.25);\n    }\n  }\n}, []);\n\nreturn (\n  <motion.div\n    ref={ref}\n    initial={{ opacity: 0, y: 10 }}\n    whileInView={{ opacity: 1, y: 0 }}\n    viewport={{ once: true }}\n    transition={{\n      ease: 'linear',\n      duration: 0.5,\n      delay: delay,\n    }}\n  >\n    // ...\n)",
    "$(this).find('.kg').html(cmp_value.toFixed(2));",
    "$(this).find( '.kg' )\n  .text( cmp_value < 6 ? cmp_value.toFixed(2) : cmp_value.toFixed(0) );",
    "const numeric_cmp_value = +cmp_value; // \"+\" recasts the value as numeric.\n$(this).find( '.kg' )\n  .text( numeric_cmp_value < 6 ? numeric_cmp_value.toFixed(2) : numeric_cmp_value.toFixed(0) );",
    "img.onload = function() {\n   if ( img.height < 1000 ) {\n       context.canvas.width = img.width;       \n       context.canvas.height = img.height;     \n       context.drawImage(img, 0, 0);\n   } else {\n       if ( img.height > img.width ) {\n           context.canvas.width = 1000*img.width/img.height;       \n           context.canvas.height = 1000;\n           context.drawImage(img, 0, 0, 1000*img.width/img.height, 1000);\n       } else {\n           context.canvas.width = 1000;\n           context.canvas.height = 1000*img.height/img.width;      \n           context.drawImage(img, 0, 0, 1000, 1000*img.height/img.width);  \n       }\n   }\n   var cropper = $canvas.cropper({     \n       aspectRatio: 1, \n       dragMode: 'move',                               \n   });\n};",
    "jQuery($ => {\n  $('#hide').on('click', function() {\n    $('#main p').hide();\n  });\n\n  $('#show').on('click', function() {\n    $('#main p').show();\n  });\n});",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n<div id=\"wrapper\">\n  <h1>Learning How to Use jQuery</h1>\n\n  <article id=\"main\">\n    <p>I know how to create HTML pages.</p>\n    <p>I know how to style webpages with CSS.</p>\n    <p>I know how to add functionality to webpages with JavaScript.</p>\n    <p>I understand how to use the jQuery library.</p>\n    \n    <button id=\"hide\">Hide</button>\n    <button id=\"show\">Show</button>\n  </article>\n\n  <footer>\n    <p>Student's Name: Moses Saygbe</p>\n    <p>The latest version of jQuery is: </p>\n    <p>Resource used to complete this assignment: </p>\n  </footer>\n</div>",
    "article:has(input[name=\"visibility\"]) > p {\n  display: none;\n}\n\narticle:has(input[name=\"visibility\"]:checked) > p {\n  display: block;\n}\n\ninput[name=\"visibility\"] {\n  display: none;\n}\n\nlabel span {\n  background: silver;\n  border: solid thin black;\n  border-radius: .2em;\n}\n\ninput~span:nth-child(even) {\n  display: inline;\n}\n\ninput~span:nth-child(odd) {\n  display: none;\n}\n\ninput:checked~span:nth-child(even) {\n  display: none;\n}\n\ninput:checked~span:nth-child(odd) {\n  display: inline;\n}",
    "<div id=\"wrapper\">\n  <h1>Learning How to Use jQuery</h1>\n\n  <article>\n    <p>I know how to create HTML pages.</p>\n    <p>I know how to style webpages with CSS.</p>\n    <p>I know how to add functionality to webpages with JavaScript.</p>\n    <p>I understand how to use the jQuery library.</p>\n    <label>\n      <input name=\"visibility\" type=\"checkbox\" checked>\n      <span>Show</span>\n      <span>Hide</span>\n    </label>\n  </article>\n\n  <footer>\n    <p>Student's Name: Moses Saygbe</p>\n    <p>The latest version of jQuery is: </p>\n    <p>Resource used to complete this assignment: </p>\n  </footer>\n</div>",
    "useEffect(() => {\n    document.title = 'Human Biology';\n  }, []); // Empty dependency array ensures this runs only once on mount",
    "import {Octokit} from \"https://esm.sh/@octokit/core@4.2.2\";",
    "const [state, setState] = useState(initialValue);",
    "import { ref, readonly } from 'vue';\n\nfunction useState(initialValue) {\n  const state = ref(initialValue);\n\n  const setState = (newValue) => {\n    if (typeof newValue === \"function\") {\n      state.value = newValue(state.value);\n    } else {\n      state.value = newValue;\n    }\n  };\n\n  return [readonly(state), setState];\n}",
    "import { useState } from './useState.js';\n\nconst [count, setCount] = useState(0);\n\nconst increment = () => setCount((prev) => prev + 1);",
    "const { createApp, ref, readonly } = Vue;\n\n// Custom useState function\nfunction useState(initialValue) {\n  const state = ref(initialValue);\n\n  const setState = (newValue) => {\n    if (typeof newValue === \"function\") {\n      state.value = newValue(state.value);\n    } else {\n      state.value = newValue;\n    }\n  };\n\n  return [readonly(state), setState];\n}\n\n// Vue app setup\nconst app = createApp({\n  setup() {\n    const [openStatus, setOpenStatus] = useState(false);\n    const [count, setCount] = useState(0);\n\n    const toggleOpenStatus = () => setOpenStatus((status) => ! status)\n    const increment = () => setCount(prev => prev + 1);\n\n    return { openStatus, toggleOpenStatus, count, increment };\n  },\n  template: `\n    <div>\n      <button v-if=\"! openStatus\" @click=\"toggleOpenStatus\">Open</button>\n      <div v-else>\n        <p>Count: {{ count }}</p>\n        <button @click=\"increment\">Increment</button>\n        <button @click=\"toggleOpenStatus\">Close</button>\n      </div>\n    </div>\n  `,\n});\n\napp.mount(\"#app\");",
    "<script src=\"https://unpkg.com/vue@3/dist/vue.global.prod.js\"></script>\n\n<div id=\"app\"></div>",
    "const { useState } = React;\n\nfunction App() {\n  const [openStatus, setOpenStatus] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const toggleOpenStatus = () => setOpenStatus(prevStatus => ! prevStatus);\n  const increment = () => setCount(prev => prev + 1);\n\n  return (\n    <div>\n      {! openStatus ? (\n        <button onClick={toggleOpenStatus}>Open</button>\n      ) : (\n        <div>\n          <p>Count: {count}</p>\n          <button onClick={increment}>Increment</button>\n          <button onClick={toggleOpenStatus}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(<App />);",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js\"></script>\n\n<div id=\"root\"></div>",
    "const { useState } = React;\n\nfunction App() {\n  const [searchBarOpen, setSearchBarOpen] = useState(false);\n\n  return (\n    <div>\n      {!searchBarOpen ? (\n        <button onClick={() => setSearchBarOpen(true)}>Open Search Bar</button>\n      ) : (\n        <div>\n          <input />\n          <button onClick={() => setSearchBarOpen(false)}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(<App />);",
    "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/18.3.1/umd/react.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.3.1/umd/react-dom.production.min.js\"></script>\n\n<div id=\"root\"></div>",
    "<template>\n  <div>\n    <button v-if=\"!searchBarOpen\" @click=\"toggleSearchBar\">\n      Open Search Bar\n    </button>\n    <div v-else>\n      <input />\n      <button @click=\"toggleSearchBar\">Close</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst searchBarOpen = ref(false);\n\nconst toggleSearchBar = () => {\n  searchBarOpen.value = ! searchBarOpen.value;\n};\n</script>",
    "const { createApp, ref } = Vue;\n\ncreateApp({\n  setup() {\n    const searchBarOpen = ref(false);\n\n    const toggleSearchBar = () => {\n      searchBarOpen.value = ! searchBarOpen.value;\n    };\n\n    return { searchBarOpen, toggleSearchBar };\n  },\n  template: `\n    <div>\n      <button v-if=\"!searchBarOpen\" @click=\"toggleSearchBar\">\n        Open Search Bar\n      </button>\n      <div v-else>\n        <input />\n        <button @click=\"toggleSearchBar\">Close</button>\n      </div>\n    </div>\n  `\n}).mount(\"#app\");",
    "<script src=\"https://unpkg.com/vue@3/dist/vue.global.prod.js\"></script>\n\n<div id=\"app\"></div>",
    "<template>\n  <router-view v-slot=\"{ Component }\">\n    <transition name=\"slide\">\n      <component :is=\"Component\" />\n    </transition>\n  </router-view>\n</template>\n\n<style>\n.slide-enter-active, .slide-leave-active {\n  transition: transform 0.5s ease;\n}\n.slide-enter-from {\n  transform: translateX(100%);\n}\n.slide-leave-to {\n  transform: translateX(-100%);\n}\n</style>",
    "import { motion } from \"framer-motion\";\n\nfunction PageTransition({ children }) {\n  return (\n    <motion.div\n      initial={{ x: \"100%\" }}\n      animate={{ x: \"0%\" }}\n      exit={{ x: \"-100%\" }}\n      transition={{ duration: 0.5 }}\n    >\n      {children}\n    </motion.div>\n  );\n}",
    "if (document.startViewTransition) {\n  document.startViewTransition(() => {\n    window.location.href = \"nextpage.html\";\n  });\n}",
    "<iframe id=\"next-page\" src=\"nextpage.html\"></iframe>\n\n<style>\niframe {\n  position: fixed;\n  top: 0;\n  left: 100%;\n  width: 100%;\n  height: 100%;\n  transition: left 0.5s ease-in-out;\n}\niframe.active {\n  left: 0;\n}\n</style>\n\n<script>\ndocument.getElementById(\"next-page\").classList.add(\"active\");\n</script>",
    "let currentScript;\nasync function loadPage(scriptUrl) {\n  if (currentScript) {\n    document.body.removeChild(currentScript);\n  }\n  currentScript = document.createElement(\"script\");\n  currentScript.type = \"module\";\n  currentScript.src = scriptUrl;\n  document.body.appendChild(currentScript);\n}",
    "<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" />",
    "</body>\n\n<script>\n  import '../scripts/menu.js';\n</script>",
    "<script>\n  import '../scripts/menu.js';\n</script>",
    "<script>\n  import '../assets/scripts/menu.js';\n</script>",
    "Qualtrics.SurveyEngine.addOnReady(function()\n{\n    /*Place your JavaScript here to run when the page is fully displayed*/\n\nvar base_element = document.querySelector(\".QuestionOuter\");\nbase_element.insertAdjacentHTML('afterbegin', '<div id=\"sticky_vid\" style=\"position: sticky; top:0;\" align=\"middle\">');\n\nvar new_element = document.querySelector(\"#sticky_vid\");\n\n// Change the text below to add the element of your choice\nnew_element.innerHTML = `<div class=\"QuestionText BorderColor\"><p align=\"left\">\n<br>\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br>\n&nbsp;\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1000px;\">\n    <thead>\n        <tr>\n            <th scope=\"col\" style=\"padding: 1px;\">Some text</th>\n            <th scope=\"col\" style=\"padding: 1px;\">&nbsp;Project A</th>\n            <th scope=\"col\" style=\"padding: 1px;\">Project B (some more info)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <th scope=\"row\" style=\"padding: 1px;\">More text</th>\n            <td style=\"padding: 1px;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit</td>\n            <td style=\"padding: 1px;\">ELorem ipsum dolor sit amet, consectetur</td>\n        </tr>\n        <tr>\n            <th scope=\"row\" style=\"padding: 1px;\">Lorep 1</th>\n            <td style=\"padding: 1px;\">Lorem ipsum dolor sit amet, consectetur</td>\n            <td style=\"padding: 1px;\">orem ipsum dolor sit amet, consectetur</td>\n        </tr>\n        <tr>\n            <th scope=\"row\" style=\"padding: 1px;\">Even more text&nbsp;</th>\n            <td style=\"padding: 1px;\">Required behavioral<br>\n            adoption</td>\n            <td style=\"padding: 1px;\">Encroaching on the land&nbsp;and rights of local communities, labour right violations</td>\n        </tr>\n        <tr>\n            <th scope=\"row\" style=\"padding: 1px;\">Some numbers</th>\n            <td style=\"padding: 1px;\">32</td>\n            <td style=\"padding: 1px;\">32</td>\n        </tr>\n    </tbody>\n</table>\n<br>\nWe now ask you several questions on these proposed projects.<br> </p>\n&nbsp;</div>`\n;\n\n// This is important, otherwise, the element you add will be at the back\nbase_element.style.zIndex = 1;\nnew_element.style.zIndex = 10;\n\n});",
    "Qualtrics.SurveyEngine.addOnReady(function()\n{\n\nvar base_element = document.querySelector(\".QuestionOuter\");\nbase_element.insertAdjacentHTML('afterbegin', '<div id=\"sticky_vid\" class=\"QuestionText BorderColor\" style=\"position: sticky; top:0\"; align=\"left\">');\n\nvar new_element = document.querySelector(\"#sticky_vid\");\n\n// Change the text below to add the element of your choice\nnew_element.innerHTML = `\n    <br>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br>\n    &nbsp;\n    <table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1000px;\">\n        <thead>\n            <tr>\n                <th scope=\"col\" style=\"padding: 1px;\">Some text</th>\n                <th scope=\"col\" style=\"padding: 1px;\">&nbsp;Project A</th>\n                <th scope=\"col\" style=\"padding: 1px;\">Project B (some more info)</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <th scope=\"row\" style=\"padding: 1px;\">More text</th>\n                <td style=\"padding: 1px;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit</td>\n                <td style=\"padding: 1px;\">ELorem ipsum dolor sit amet, consectetur</td>\n            </tr>\n            <tr>\n                <th scope=\"row\" style=\"padding: 1px;\">Lorep 1</th>\n                <td style=\"padding: 1px;\">Lorem ipsum dolor sit amet, consectetur</td>\n                <td style=\"padding: 1px;\">orem ipsum dolor sit amet, consectetur</td>\n            </tr>\n            <tr>\n                <th scope=\"row\" style=\"padding: 1px;\">Even more text&nbsp;</th>\n                <td style=\"padding: 1px;\">Required behavioral<br>\n                adoption</td>\n                <td style=\"padding: 1px;\">Encroaching on the land&nbsp;and rights of local communities, labour right violations</td>\n            </tr>\n            <tr>\n                <th scope=\"row\" style=\"padding: 1px;\">Some numbers</th>\n                <td style=\"padding: 1px;\">32</td>\n                <td style=\"padding: 1px;\">32</td>\n            </tr>\n        </tbody>\n    </table>\n    <br>\n    We now ask you several questions on these proposed projects.<br> \n    &nbsp;`\n    ;\n\n// This is important, otherwise, the element you add will be at the back\nbase_element.style.zIndex = 1;\nnew_element.style.zIndex = 10;\n\n});",
    "function updateLength(el) {\n  var maxLength = el.attr(\"maxLength\");\n  var currentLength = el.val().length;\n  var color = currentLength < 20 ? '#ff0000' : '#00BB00';\n\n  $('#minChars').css({\n    'color': color\n  });\n\n  $('#Chars').text(currentLength);\n\n  if (currentLength > 480) {\n    color = '#FF9900';\n  }\n\n  if (currentLength > 500) {\n    color = '#ff0000';\n  }\n\n  $('#Chars').css({\n    'color': color\n  });\n}\n\n$(document).ready(function() {\n  $('textarea').on(\"input\", function() {\n    updateLength($(this));\n  });\n\n  $('span').on('click', function() {\n    const textareaEl = $('textarea').first();\n    textareaEl[0].value += $(this)[0].textContent;\n    updateLength(textareaEl);\n  });\n});",
    "<span>&#129321;</span>\n<textarea name=\"text\" rows=\"6\" minlength=\"20\" maxlength=\"500\" required placeholder=\"Text..\"></textarea>\n<div><b id=\"Chars\" class=\"red\">0</b> from min. <b id=\"minChars\" class=\"red\">20</b> and max. <b class=\"red\">500</b> Characters used.</div>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>",
    "materials = {\n    material1: { mat_id: \"mat1\", name: \"string\", specificWeight: number },\n    material2: { mat_id: \"mat2\", name: \"string\", specificWeight: number },\n    // more materials\n}",
    "mixture1 = { \n    mixt_id: \"mix1\", \n    name: \"string\", \n    composition: [\n        { material: materials.material1, percentage: 0.6 }, \n        { material: materials.material2, percentage: 0.4 }\n    ],\n    specificWeightWeighted: number \n}",
    "const subLength = (str, char) => {\n  const indices = [...str].flatMap((c, i) => (c === char ? i : [])); // using flatMap instead of filter\n  return indices.length === 2 ? indices[1] - indices[0] + 1 : 0; // if exactly two results calculate the difference including start and end.\n};\n\n// Test cases\nconsole.log(subLength('hello', 'l'));    // 2 (\"ll\")\nconsole.log(subLength('abcdabcd', 'b')); // 5 (\"bcdab\")\nconsole.log(subLength('abababa', 'a'));  // 0 (more than 2 occurrences)\nconsole.log(subLength('xyz', 'x'));      // 0 (only 1 occurrence)\nconsole.log(subLength('banana', 'n'));   // 3 (\"nan\")",
    "// Your imports\nexport default class List extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showTotals: true, // Ensure it's true only on the first render\n        };\n    }\n\n    componentDidMount() {\n        const { total_values, contract_total } = this.props;\n\n        // Show alert only on first page load\n        if (total_values > contract_total) {\n            swal(\"\", \"Total is greater than ...\", \"error\").then(() => {\n                this.setState({ showTotals: false });\n            });\n        }\n    }\n\n    handleDelActClick = (row, id) => {\n        this.setState({ showTotals: false }, () => {\n            if (this.props.data) {\n                this.delItem(row.id, id);\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Button onClick={() => this.handleDelActClick(row, rowId)}>\n                    <i>delete</i>\n                </Button>\n            </div>\n        );\n    }\n}",
    "const COLORS = [ 0x9bbc0f, 0x8bac0f, 0x306230, 0x0f380f ];\n\nlet overlay = document.getElementById('overlay')\nlet underlay = document.getElementById('underlay')\n\noverlay.addEventListener('click', e => console.info('from overlay'))\nunderlay.addEventListener('click', e => console.info('from underlay'), false)\n\nclass DemoScene extends Phaser.Scene {\n    create () {\n         // if you want to additionall remove the mouse Event listener\n         // this.input.mouse.stopListeners()\n         \n         this.add.text(20, 130, 'Demooooooo' )\n            .setScale(1.5)\n            .setOrigin(0)\n            .setStyle({fontStyle: 'bold', fontFamily: 'Arial'})\n            .setDepth(100);\n            \n       // Just to for proof\n       let helper = this.add.rectangle(20, 20, 400, 140, 0xff0000 )\n        .setOrigin(0)\n        .setDepth(1)\n        .setInteractive();\n       helper.on('pointerdown', e => console.info('from phaser'))\n    }\n}\n\nvar config = {\n    width: 440,\n    height: 180,\n    transparent: true,\n    // Set Parent HTML Node\n    parent: 'game',\n    scene: DemoScene,\n    banner:false\n}; \n\nnew Phaser.Game(config);\n\nconsole.clear();\ndocument.body.style = 'margin:0;';",
    "<script src=\"//cdn.jsdelivr.net/npm/phaser/dist/phaser.min.js\"></script>\n\n<div id=\"test_window\" style=\"position:absolute; padding:.25em 1em; border: solid black; font-family:Arial\">\n    <!-- parent for phaser -->\n    <div id=\"game\" style=\"position:relative; border:1px solid green;z-index:50;pointer-events:none;\">\n    </div>\n    <!-- overlay -->\n    <div id=\"overlay\" style=\"width:100px; height:50px; background-color:grey;position:absolute; top: 10px ; z-index:1000\"> \n        OVERLAY\n    </div>\n    <!-- \"underlay\" -->\n    <div id=\"underlay\" style=\"width:100px; height:50px; background-color:lightgrey;position:relative; left:-10px; bottom: 100px ; z-index:1\">\n        UNDERLAY\n    </div>\n<div>",
    "let { onchange, onpaste } = $props();\n\nfunction paste() {\n  onpaste?.();\n  onchange?.();\n}",
    "<input {onchange} onpaste={paste} />",
    "function paste(e) {\n  onpaste?.(e);\n  onchange?.(e);\n}",
    "{\n  \"filename\": \"listingimage\",\n  \"url\": \"https://images.unsplash.com/photo-...\"\n}",
    "const defaultImage =\n  \"https://plus.unsplash.com/premium_photo-1736880269895-84c3265dbfc3?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxmZWF0dXJlZC1waG90b3MtZmVlZHw2OXx8fGVufDB8fHx8fA%3D%3D\";\n\nconst listingSchema = new Schema({\n  title: {\n    type: String,\n    required: true,\n  },\n  discription: String,\n  image: {\n    type: String,\n    default: defaultImage,\n    set: (v) => (v.url ?? v) || defaultImage,\n  },\n  price: Number,\n  location: String,\n  country: String,\n});",
    "Listing.insertMany(initData.data.map(({ image, ...l }) => ({\n  ...l,\n  image: image.url,\n})));",
    "const todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n\n    if (todosLocal && todosLocal.length > 0) {\n      setTodos(todosLocal);\n    }",
    "if (Array.isArray(todosLocal) && todosLocal.length > 0) ...",
    "localStorage.setItem(\"todos\", JSON.stringify(\"todos\"));",
    "localStorage.setItem(\"todos\", JSON.stringify(todos));",
    "<React.StrictMode>\n  <App />\n</React.StrictMode>",
    "import {\n  NextRequest,\n  NextResponse,\n  userAgent,\n  userAgentFromString\n} from \"next/server\";\n// getSiteUrl takes process.env.NODE_ENV as a arg which is okay in edge runtime\nimport { getSiteUrl } from \"./lib/site-url\";\n\n\nexport default async function middleware(req: NextRequest) {\n  const { ua, device, engine, os, browser, isBot, cpu } = userAgent({\n    headers: req.headers\n  });\n\n  const url = req.nextUrl;\n\n  const headers = req.headers;\n\n  const getUAData = userAgentFromString(ua);\n\n  const iPhoneiPadParser = (props: string | null) =>\n    props ? props.split(/([;])/gim)?.[0]?.split(/([(])/gim)?.[2] : null;\n\n  const deviceSpecificationParser = (props: string | null) =>\n    props ? props.split(/([(])/gim)?.[2]?.split(/([)])/gim)?.[0] : null;\n\n  const handleApple = iPhoneiPadParser(ua);\n\n  const matchedPath = req.nextUrl.pathname || \"\";\n\n  const operatingSystem = os?.name || \"Windows\";\n\n  const operatingSystemVersion = os?.version || \"\";\n\n  const osWithVersion = operatingSystem + \" \" + operatingSystemVersion;\n\n  const countryVercel = req.geo?.country ? req.geo?.country : \"US\";\n\n  const bot = isBot === true ? \"true\" : \"false\";\n\n  const architecture = cpu?.architecture || \"\";\n\n  const userBrowserName = browser?.name || \"Chrome\";\n\n  const userBrowserVersion = browser?.version || \"\";\n\n  const userBrowser = userBrowserName + \" \" + userBrowserVersion;\n\n  const countryIso3166Vercel = req.geo?.country ? req.geo?.country : \"unknown\";\n\n  const cityVercel = req.geo?.city ? req.geo?.city : \"Chicago\";\n\n  const regionVercel = req.geo?.region ? req.geo?.region : \"IL\";\n\n  const latVercel = req.geo?.latitude\n    ? req.geo?.latitude\n    : \"42.360082499999997196\";\n\n  const lngVercel = req.geo?.longitude\n    ? req.geo?.longitude\n    : \"-71.058880099999996105\";\n\n  const ipVercel = req?.ip ? req?.ip : \"0.0.0.0\";\n\n  const tz = headers.get(\"x-vercel-ip-timezone\") ?? \"\";\n\n  const deviceModel = getUAData.device?.model\n    ? getUAData.device?.model\n    : device?.model ?? \"\";\n\n  const deviceVendor = getUAData.device?.vendor\n    ? getUAData.device.vendor\n    : device?.vendor ?? \"\";\n\n  const engineName = getUAData.engine?.name\n    ? getUAData.engine?.name\n    : engine.name ?? \"\";\n\n  const getLoc = headers.get(\"accept-language\")?.split(\",\")?.[0] || \"en-US\";\n\n  const code = url.searchParams.get(\"code\");\n\n  headers.set(\"Access-Control-Allow-Origin\", \"*\");\n\n  url.searchParams.set(\n    \"userDevice\",\n    handleApple || getUAData.device.model || \"\"\n  );\n\n  url.searchParams.set(\n    \"userSpecifications\",\n    deviceSpecificationParser(ua) || \"\"\n  );\n\n  url.searchParams.set(\"browserName\", userBrowserName);\n\n  url.searchParams.set(\"browserVersion\", userBrowserVersion);\n\n  url.searchParams.set(\"match\", matchedPath);\n\n  url.searchParams.set(\"locale\", getLoc);\n\n  url.searchParams.set(\"deviceModel\", deviceModel);\n\n  url.searchParams.set(\"deviceVendor\", deviceVendor);\n\n  url.searchParams.set(\"ip\", ipVercel);\n\n  url.searchParams.set(\"engineName\", engineName);\n\n  url.searchParams.set(\"os\", osWithVersion);\n\n  url.searchParams.set(\"isBot\", bot);\n\n  url.searchParams.set(\"architecture\", architecture);\n\n  url.searchParams.set(\"browser\", userBrowser);\n\n  url.searchParams.set(\"country\", countryVercel);\n\n  url.searchParams.set(\"countryIso\", countryIso3166Vercel);\n\n  url.searchParams.set(\"city\", cityVercel);\n\n  url.searchParams.set(\"region\", regionVercel);\n\n  url.searchParams.set(\"lat\", latVercel);\n\n  code ? url.searchParams.set(\"code\", code) : null;\n\n  url.searchParams.set(\"lng\", lngVercel);\n\n  url.searchParams.set(\"ua\", ua);\n\n  url.searchParams.set(\"tz\", tz);\n\n  getLoc ? url.searchParams.set(\"loc\", getLoc) : null;\n\n  if (/Facebook/gi.test(userBrowserName) === true) {\n    return NextResponse.rewrite(\n      getSiteUrl(process.env.NODE_ENV).concat(\"/open-in-external-browser\")\n    );\n  } else if (\n    /Facebook/gi.test(userBrowserName) === false &&\n    url.pathname.startsWith(\"/open-in-external-browser\")\n  ) {\n    return NextResponse.redirect(new URL(\"/\", req.url));\n  } else {\n    return NextResponse.rewrite(url);\n  }\n}\n\nexport const config = {\n  matcher: [\"/\", \"/open-in-external-browser\"]\n};",
    "if (/Facebook/gi.test(userBrowserName) === true) {\n    return NextResponse.rewrite(\n      getSiteUrl(process.env.NODE_ENV).concat(\"/open-in-external-browser\")\n    );\n  } else if (\n    /Facebook/gi.test(userBrowserName) === false &&\n    url.pathname.startsWith(\"/open-in-external-browser\")\n  ) {\n    return NextResponse.redirect(new URL(\"/\", req.url));\n  } else {\n    return NextResponse.rewrite(url);\n  }",
    "var json = new JavaScriptSerializer().Serialize(searchData);",
    "const searchDataJson = '@HttpContextAccessor?.HttpContext?.Session?.GetString(\"SearchData\")';\nconst searchData = JSON.parse(searchDataJson);",
    "const currentPath = new URL(window.location.href).pathname;\nif (currentPath.startsWith(\"/page1/page2/page3\"))\n     window.location.replace(\"/page4/page3\");",
    "var pathArray = window.location.pathname.split('/');\nvar LvlLoc1 = pathArray[1];\nvar LvlLoc2 = pathArray[2];\nvar LvlLoc3 = pathArray[3];\nvar LvlLoc4 = pathArray[4];",
    "location.href = \"https://example.com/\" + LvlLoc4 + \"/\" + LvlLoc3 + \"/\"",
    "// Instead of this:\nconst audioElement = document.createElement('audio');\n\n// Use this:\nconst audioElement = new Audio();",
    ".workplace {\ndisplay: flex;\n}\n.tabs {\nwidth: 20%; /* Adjust as needed */\n}\n.content-container {\nwidth: 80%; /* Adjust as needed */\noverflow-y: auto;\nheight: 100vh; /* Adjust as needed */\n}\n.content {\nheight: 100vh; /* Each content block should take the full height of the viewport */\n}",
    "gsap.registerPlugin(ScrollTrigger);\n\n// Pin the tabs and set up the scrolling for the content\nScrollTrigger.create({\n  trigger: \".workplace\",\n  start: \"top top\",\n  end: \"bottom bottom\",\n  pin: \".tabs\",\n  scrub: true,\n  markers: true // Remove this in production\n});\n\n// Create a timeline for the content scrolling\nlet tl = gsap.timeline({\n  scrollTrigger: {\n    trigger: \".content-container\",\n    start: \"top top\",\n    end: \"bottom bottom\",\n    scrub: true,\n    markers: true // Remove this in production\n  }\n});\n\n// Animate each content block\ntl.to(\".content\", {\n  yPercent: -200, // Adjust this value based on the number of content blocks\n  ease: \"none\"\n});"
]